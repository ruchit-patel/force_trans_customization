{"version":3,"file":"ComposeEmailDialog-Dajqmh4R.js","sources":["../../../../frontend/node_modules/frappe-ui/src/utils/call.js","../../../../frontend/node_modules/@tiptap/extension-underline/dist/index.js","../../../../frontend/node_modules/@tiptap/extension-image/dist/index.js","../../../../frontend/node_modules/tiptap-extension-resize-image/esm/index.js","../../../../frontend/node_modules/@tiptap/extension-color/dist/index.js","../../../../frontend/node_modules/@tiptap/extension-font-family/dist/index.js","../../../../frontend/node_modules/@tiptap/extension-highlight/dist/index.js","../../../../frontend/src/components/GroupSelectorDialog.vue","../../../../frontend/src/components/ComposeEmailDialog.vue"],"sourcesContent":["export default async function call(method, args, options = {}) {\n  if (!args) {\n    args = {}\n  }\n\n  let headers = Object.assign(\n    {\n      Accept: 'application/json',\n      'Content-Type': 'application/json; charset=utf-8',\n      'X-Frappe-Site-Name': window.location.hostname,\n    },\n    options.headers || {},\n  )\n\n  if (window.csrf_token && window.csrf_token !== '{{ csrf_token }}') {\n    headers['X-Frappe-CSRF-Token'] = window.csrf_token\n  }\n\n  let path = method.startsWith('/') ? method : `/api/method/${method}`\n  const res = await fetch(path, {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(args),\n  })\n\n  if (res.ok) {\n    const data = await res.json()\n    if (data.docs || method === 'login') {\n      return data\n    }\n    if (data.exc) {\n      try {\n        console.groupCollapsed(method)\n        console.log(`method: ${method}`)\n        console.log(`params:`, args)\n        let warning = JSON.parse(data.exc)\n        for (let text of warning) {\n          console.log(text)\n        }\n        console.groupEnd()\n      } catch (e) {\n        console.warn('Error printing debug messages', e)\n      }\n    }\n    return data.message\n  } else {\n    let response = await res.text()\n    let error, exception\n    try {\n      error = JSON.parse(response)\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n    let errorParts = [\n      [method, error.exc_type, error._error_message].filter(Boolean).join(' '),\n    ]\n    if (error.exc) {\n      exception = error.exc\n      try {\n        exception = JSON.parse(exception)[0]\n        console.log(exception)\n        // eslint-disable-next-line no-empty\n      } catch (e) {}\n    }\n    let e = new Error(errorParts.join('\\n'))\n    e.exc_type = error.exc_type\n    e.exc = exception\n    e.status = res.status\n    e.messages = error._server_messages\n      ? JSON.parse(error._server_messages)\n      : []\n    e.messages = e.messages.concat(error.message)\n    e.messages = e.messages.map((m) => {\n      try {\n        return JSON.parse(m).message\n      } catch (error) {\n        return m\n      }\n    })\n    e.messages = e.messages.filter(Boolean)\n    if (!e.messages.length) {\n      e.messages = error._error_message\n        ? [error._error_message]\n        : ['Internal Server Error']\n    }\n\n    if (options.onError) {\n      options.onError({ response: res, status: res.status, error: e })\n    }\n\n    throw e\n  }\n}\n\nexport function createCall(options) {\n  return function customCall(method, args) {\n    return call(method, args, options)\n  }\n}\n","import { Mark, mergeAttributes } from '@tiptap/core';\n\nconst Underline = Mark.create({\r\n    name: 'underline',\r\n    addOptions() {\r\n        return {\r\n            HTMLAttributes: {},\r\n        };\r\n    },\r\n    parseHTML() {\r\n        return [\r\n            {\r\n                tag: 'u',\r\n            },\r\n            {\r\n                style: 'text-decoration',\r\n                consuming: false,\r\n                getAttrs: style => (style.includes('underline') ? {} : false),\r\n            },\r\n        ];\r\n    },\r\n    renderHTML({ HTMLAttributes }) {\r\n        return ['u', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\r\n    },\r\n    addCommands() {\r\n        return {\r\n            setUnderline: () => ({ commands }) => {\r\n                return commands.setMark(this.name);\r\n            },\r\n            toggleUnderline: () => ({ commands }) => {\r\n                return commands.toggleMark(this.name);\r\n            },\r\n            unsetUnderline: () => ({ commands }) => {\r\n                return commands.unsetMark(this.name);\r\n            },\r\n        };\r\n    },\r\n    addKeyboardShortcuts() {\r\n        return {\r\n            'Mod-u': () => this.editor.commands.toggleUnderline(),\r\n            'Mod-U': () => this.editor.commands.toggleUnderline(),\r\n        };\r\n    },\r\n});\n\nexport { Underline, Underline as default };\n//# sourceMappingURL=index.js.map\n","import { Node, mergeAttributes, nodeInputRule } from '@tiptap/core';\n\nconst inputRegex = /(?:^|\\s)(!\\[(.+|:?)]\\((\\S+)(?:(?:\\s+)[\"'](\\S+)[\"'])?\\))$/;\r\nconst Image = Node.create({\r\n    name: 'image',\r\n    addOptions() {\r\n        return {\r\n            inline: false,\r\n            allowBase64: false,\r\n            HTMLAttributes: {},\r\n        };\r\n    },\r\n    inline() {\r\n        return this.options.inline;\r\n    },\r\n    group() {\r\n        return this.options.inline ? 'inline' : 'block';\r\n    },\r\n    draggable: true,\r\n    addAttributes() {\r\n        return {\r\n            src: {\r\n                default: null,\r\n            },\r\n            alt: {\r\n                default: null,\r\n            },\r\n            title: {\r\n                default: null,\r\n            },\r\n        };\r\n    },\r\n    parseHTML() {\r\n        return [\r\n            {\r\n                tag: this.options.allowBase64\r\n                    ? 'img[src]'\r\n                    : 'img[src]:not([src^=\"data:\"])',\r\n            },\r\n        ];\r\n    },\r\n    renderHTML({ HTMLAttributes }) {\r\n        return ['img', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes)];\r\n    },\r\n    addCommands() {\r\n        return {\r\n            setImage: options => ({ commands }) => {\r\n                return commands.insertContent({\r\n                    type: this.name,\r\n                    attrs: options,\r\n                });\r\n            },\r\n        };\r\n    },\r\n    addInputRules() {\r\n        return [\r\n            nodeInputRule({\r\n                find: inputRegex,\r\n                type: this.type,\r\n                getAttributes: match => {\r\n                    const [, , alt, src, title] = match;\r\n                    return { src, alt, title };\r\n                },\r\n            }),\r\n        ];\r\n    },\r\n});\n\nexport { Image, Image as default, inputRegex };\n//# sourceMappingURL=index.js.map\n","import Image from '@tiptap/extension-image';\n\nconst ImageResize = Image.extend({\n    addAttributes() {\n        return {\n            src: {\n                default: null,\n            },\n            alt: {\n                default: null,\n            },\n            style: {\n                default: 'width: 100%; height: auto; cursor: pointer;',\n                parseHTML: element => {\n                    const width = element.getAttribute('width');\n                    return width\n                        ? `width: ${width}px; height: auto; cursor: pointer;`\n                        : `${element.style.cssText}`;\n                },\n            },\n            title: {\n                default: null,\n            },\n            loading: {\n                default: null,\n            },\n            srcset: {\n                default: null,\n            },\n            sizes: {\n                default: null,\n            },\n            crossorigin: {\n                default: null,\n            },\n            usemap: {\n                default: null,\n            },\n            ismap: {\n                default: null,\n            },\n            width: {\n                default: null,\n            },\n            height: {\n                default: null,\n            },\n            referrerpolicy: {\n                default: null,\n            },\n            longdesc: {\n                default: null,\n            },\n            decoding: {\n                default: null,\n            },\n            class: {\n                default: null,\n            },\n            id: {\n                default: null,\n            },\n            name: {\n                default: null,\n            },\n            draggable: {\n                default: true,\n            },\n            tabindex: {\n                default: null,\n            },\n            'aria-label': {\n                default: null,\n            },\n            'aria-labelledby': {\n                default: null,\n            },\n            'aria-describedby': {\n                default: null,\n            },\n        };\n    },\n    addNodeView() {\n        return ({ node, editor, getPos }) => {\n            const { view, options: { editable }, } = editor;\n            const { style } = node.attrs;\n            const $positionContainer = document.createElement('div');\n            const $container = document.createElement('div');\n            const $img = document.createElement('img');\n            const iconStyle = 'width: 24px; height: 24px; cursor: pointer;';\n            const dispatchNodeView = () => {\n                if (typeof getPos === 'function') {\n                    const newAttrs = Object.assign(Object.assign({}, node.attrs), { style: `${$img.style.cssText}` });\n                    view.dispatch(view.state.tr.setNodeMarkup(getPos(), null, newAttrs));\n                }\n            };\n            const paintPositionContoller = () => {\n                const $postionController = document.createElement('div');\n                const $leftController = document.createElement('img');\n                const $centerController = document.createElement('img');\n                const $rightController = document.createElement('img');\n                $postionController.setAttribute('style', 'position: absolute; top: 0%; left: 50%; width: 100px; height: 25px; z-index: 999; background-color: rgba(255, 255, 255, 0.7); border-radius: 4px; border: 2px solid #6C6C6C; cursor: pointer; transform: translate(-50%, -50%); display: flex; justify-content: space-between; align-items: center; padding: 0 10px;');\n                $leftController.setAttribute('src', 'https://fonts.gstatic.com/s/i/short-term/release/materialsymbolsoutlined/format_align_left/default/20px.svg');\n                $leftController.setAttribute('style', iconStyle);\n                $centerController.setAttribute('src', 'https://fonts.gstatic.com/s/i/short-term/release/materialsymbolsoutlined/format_align_center/default/20px.svg');\n                $centerController.setAttribute('style', iconStyle);\n                $rightController.setAttribute('src', 'https://fonts.gstatic.com/s/i/short-term/release/materialsymbolsoutlined/format_align_right/default/20px.svg');\n                $rightController.setAttribute('style', iconStyle);\n                $leftController.addEventListener('click', () => {\n                    $positionContainer.setAttribute('style', 'display: flex; justify-content: flex-start;');\n                    $img.setAttribute('style', `${$img.style.cssText} justify-content: flex-start;`);\n                    dispatchNodeView();\n                });\n                $centerController.addEventListener('click', () => {\n                    $positionContainer.setAttribute('style', 'display: flex; justify-content: center;');\n                    $img.setAttribute('style', `${$img.style.cssText} justify-content: center;`);\n                    dispatchNodeView();\n                });\n                $rightController.addEventListener('click', () => {\n                    $positionContainer.setAttribute('style', 'display: flex; justify-content: flex-end;');\n                    $img.setAttribute('style', `${$img.style.cssText} justify-content: flex-end;`);\n                    dispatchNodeView();\n                });\n                $postionController.appendChild($leftController);\n                $postionController.appendChild($centerController);\n                $postionController.appendChild($rightController);\n                $container.appendChild($postionController);\n            };\n            // add position style and className\n            $positionContainer.appendChild($container);\n            const justifyContent = style.match(/justify-content: (.*?);/);\n            $positionContainer.setAttribute('style', `display: flex; ${justifyContent ? justifyContent[0] : ''}`);\n            if (justifyContent) {\n                $img.className = `tiptap-image-${justifyContent[1]}`;\n            }\n            $container.setAttribute('style', `${style}`);\n            $container.appendChild($img);\n            Object.entries(node.attrs).forEach(([key, value]) => {\n                if (value === undefined || value === null)\n                    return;\n                $img.setAttribute(key, value);\n            });\n            if (!editable)\n                return { dom: $img };\n            const dotsPosition = [\n                'top: -4px; left: -4px; cursor: nwse-resize;',\n                'top: -4px; right: -4px; cursor: nesw-resize;',\n                'bottom: -4px; left: -4px; cursor: nesw-resize;',\n                'bottom: -4px; right: -4px; cursor: nwse-resize;',\n            ];\n            let isResizing = false;\n            let startX, startWidth, startHeight;\n            $container.addEventListener('click', () => {\n                //remove remaining dots and position controller\n                if ($container.childElementCount > 3) {\n                    for (let i = 0; i < 5; i++) {\n                        $container.removeChild($container.lastChild);\n                    }\n                }\n                paintPositionContoller();\n                $container.setAttribute('style', `position: relative; border: 1px dashed #6C6C6C; ${style} cursor: pointer;`);\n                Array.from({ length: 4 }, (_, index) => {\n                    const $dot = document.createElement('div');\n                    $dot.setAttribute('style', `position: absolute; width: 9px; height: 9px; border: 1.5px solid #6C6C6C; border-radius: 50%; ${dotsPosition[index]}`);\n                    $dot.addEventListener('mousedown', e => {\n                        e.preventDefault();\n                        isResizing = true;\n                        startX = e.clientX;\n                        startWidth = $container.offsetWidth;\n                        startHeight = $container.offsetHeight;\n                        const onMouseMove = (e) => {\n                            if (!isResizing)\n                                return;\n                            const deltaX = index % 2 === 0 ? -(e.clientX - startX) : e.clientX - startX;\n                            const aspectRatio = startWidth / startHeight;\n                            const newWidth = startWidth + deltaX;\n                            const newHeight = newWidth / aspectRatio;\n                            $container.style.width = newWidth + 'px';\n                            $container.style.height = newHeight + 'px';\n                            $img.style.width = newWidth + 'px';\n                            $img.style.height = newHeight + 'px';\n                        };\n                        const onMouseUp = () => {\n                            if (isResizing) {\n                                isResizing = false;\n                            }\n                            dispatchNodeView();\n                            document.removeEventListener('mousemove', onMouseMove);\n                            document.removeEventListener('mouseup', onMouseUp);\n                        };\n                        document.addEventListener('mousemove', onMouseMove);\n                        document.addEventListener('mouseup', onMouseUp);\n                    });\n                    $container.appendChild($dot);\n                });\n            });\n            document.addEventListener('click', (e) => {\n                const $target = e.target;\n                const isClickInside = $container.contains($target) || $target.style.cssText === iconStyle;\n                if (!isClickInside) {\n                    const containerStyle = $container.getAttribute('style');\n                    const newStyle = containerStyle === null || containerStyle === void 0 ? void 0 : containerStyle.replace('border: 1px dashed #6C6C6C;', '');\n                    $container.setAttribute('style', newStyle);\n                    if ($container.childElementCount > 3) {\n                        for (let i = 0; i < 5; i++) {\n                            $container.removeChild($container.lastChild);\n                        }\n                    }\n                }\n            });\n            return {\n                dom: $positionContainer,\n            };\n        };\n    },\n});\n\nexport { ImageResize, ImageResize as default };\n//# sourceMappingURL=index.js.map\n","import '@tiptap/extension-text-style';\nimport { Extension } from '@tiptap/core';\n\nconst Color = Extension.create({\r\n    name: 'color',\r\n    addOptions() {\r\n        return {\r\n            types: ['textStyle'],\r\n        };\r\n    },\r\n    addGlobalAttributes() {\r\n        return [\r\n            {\r\n                types: this.options.types,\r\n                attributes: {\r\n                    color: {\r\n                        default: null,\r\n                        parseHTML: element => { var _a; return (_a = element.style.color) === null || _a === void 0 ? void 0 : _a.replace(/['\"]+/g, ''); },\r\n                        renderHTML: attributes => {\r\n                            if (!attributes.color) {\r\n                                return {};\r\n                            }\r\n                            return {\r\n                                style: `color: ${attributes.color}`,\r\n                            };\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        ];\r\n    },\r\n    addCommands() {\r\n        return {\r\n            setColor: color => ({ chain }) => {\r\n                return chain()\r\n                    .setMark('textStyle', { color })\r\n                    .run();\r\n            },\r\n            unsetColor: () => ({ chain }) => {\r\n                return chain()\r\n                    .setMark('textStyle', { color: null })\r\n                    .removeEmptyTextStyle()\r\n                    .run();\r\n            },\r\n        };\r\n    },\r\n});\n\nexport { Color, Color as default };\n//# sourceMappingURL=index.js.map\n","import '@tiptap/extension-text-style';\nimport { Extension } from '@tiptap/core';\n\nconst FontFamily = Extension.create({\r\n    name: 'fontFamily',\r\n    addOptions() {\r\n        return {\r\n            types: ['textStyle'],\r\n        };\r\n    },\r\n    addGlobalAttributes() {\r\n        return [\r\n            {\r\n                types: this.options.types,\r\n                attributes: {\r\n                    fontFamily: {\r\n                        default: null,\r\n                        parseHTML: element => { var _a; return (_a = element.style.fontFamily) === null || _a === void 0 ? void 0 : _a.replace(/['\"]+/g, ''); },\r\n                        renderHTML: attributes => {\r\n                            if (!attributes.fontFamily) {\r\n                                return {};\r\n                            }\r\n                            return {\r\n                                style: `font-family: ${attributes.fontFamily}`,\r\n                            };\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        ];\r\n    },\r\n    addCommands() {\r\n        return {\r\n            setFontFamily: fontFamily => ({ chain }) => {\r\n                return chain()\r\n                    .setMark('textStyle', { fontFamily })\r\n                    .run();\r\n            },\r\n            unsetFontFamily: () => ({ chain }) => {\r\n                return chain()\r\n                    .setMark('textStyle', { fontFamily: null })\r\n                    .removeEmptyTextStyle()\r\n                    .run();\r\n            },\r\n        };\r\n    },\r\n});\n\nexport { FontFamily, FontFamily as default };\n//# sourceMappingURL=index.js.map\n","import { Mark, mergeAttributes, markInputRule, markPasteRule } from '@tiptap/core';\n\nconst inputRegex = /(?:^|\\s)((?:==)((?:[^~=]+))(?:==))$/;\r\nconst pasteRegex = /(?:^|\\s)((?:==)((?:[^~=]+))(?:==))/g;\r\nconst Highlight = Mark.create({\r\n    name: 'highlight',\r\n    addOptions() {\r\n        return {\r\n            multicolor: false,\r\n            HTMLAttributes: {},\r\n        };\r\n    },\r\n    addAttributes() {\r\n        if (!this.options.multicolor) {\r\n            return {};\r\n        }\r\n        return {\r\n            color: {\r\n                default: null,\r\n                parseHTML: element => element.getAttribute('data-color') || element.style.backgroundColor,\r\n                renderHTML: attributes => {\r\n                    if (!attributes.color) {\r\n                        return {};\r\n                    }\r\n                    return {\r\n                        'data-color': attributes.color,\r\n                        style: `background-color: ${attributes.color}; color: inherit`,\r\n                    };\r\n                },\r\n            },\r\n        };\r\n    },\r\n    parseHTML() {\r\n        return [\r\n            {\r\n                tag: 'mark',\r\n            },\r\n        ];\r\n    },\r\n    renderHTML({ HTMLAttributes }) {\r\n        return ['mark', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0];\r\n    },\r\n    addCommands() {\r\n        return {\r\n            setHighlight: attributes => ({ commands }) => {\r\n                return commands.setMark(this.name, attributes);\r\n            },\r\n            toggleHighlight: attributes => ({ commands }) => {\r\n                return commands.toggleMark(this.name, attributes);\r\n            },\r\n            unsetHighlight: () => ({ commands }) => {\r\n                return commands.unsetMark(this.name);\r\n            },\r\n        };\r\n    },\r\n    addKeyboardShortcuts() {\r\n        return {\r\n            'Mod-Shift-h': () => this.editor.commands.toggleHighlight(),\r\n        };\r\n    },\r\n    addInputRules() {\r\n        return [\r\n            markInputRule({\r\n                find: inputRegex,\r\n                type: this.type,\r\n            }),\r\n        ];\r\n    },\r\n    addPasteRules() {\r\n        return [\r\n            markPasteRule({\r\n                find: pasteRegex,\r\n                type: this.type,\r\n            }),\r\n        ];\r\n    },\r\n});\n\nexport { Highlight, Highlight as default, inputRegex, pasteRegex };\n//# sourceMappingURL=index.js.map\n","<template>\r\n  <div v-if=\"isDialogOpen\" class=\"fixed inset-0 z-50 flex items-center justify-center\">\r\n    <!-- Backdrop -->\r\n    <div class=\"fixed inset-0 bg-black bg-opacity-50\" @click=\"closeDialog\"></div>\r\n\r\n    <!-- Dialog -->\r\n    <div class=\"relative bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 max-h-[90vh] overflow-hidden\">\r\n      <!-- Header -->\r\n      <div class=\"flex items-center justify-between p-6 border-b border-gray-200\">\r\n        <h2 class=\"text-lg font-semibold text-gray-900\">Select Email Groups</h2>\r\n        <button @click=\"closeDialog\" class=\"text-gray-400 hover:text-gray-600\">\r\n          <FeatherIcon name=\"x\" class=\"w-5 h-5\" />\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Content -->\r\n      <div class=\"p-6 overflow-y-auto max-h-[calc(90vh-140px)]\">\r\n    <div class=\"space-y-4\">\r\n      <!-- Search Groups -->\r\n      <div class=\"relative\">\r\n        <FeatherIcon name=\"search\" class=\"w-4 h-4 text-gray-400 absolute left-3 top-3\" />\r\n        <input\r\n          v-model=\"searchQuery\"\r\n          type=\"text\"\r\n          placeholder=\"Search email groups...\"\r\n          class=\"w-full pl-10 pr-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n        />\r\n      </div>\r\n\r\n      <!-- Groups List -->\r\n      <div class=\"max-h-96 overflow-y-auto border border-gray-200 rounded-lg\">\r\n        <div v-if=\"isLoading\" class=\"p-8 text-center\">\r\n          <div class=\"flex items-center justify-center\">\r\n            <div class=\"animate-spin rounded-full h-5 w-5 border-b-2 border-blue-500 mr-2\"></div>\r\n            Loading email groups...\r\n          </div>\r\n        </div>\r\n\r\n        <div v-else-if=\"filteredGroups.length === 0\" class=\"p-8 text-center text-gray-500\">\r\n          <FeatherIcon name=\"inbox\" class=\"w-8 h-8 mx-auto mb-2 text-gray-300\" />\r\n          <p>No email groups found</p>\r\n          <p class=\"text-xs mt-1\">Create email groups in the system to see them here</p>\r\n        </div>\r\n\r\n        <div v-else class=\"divide-y divide-gray-200\">\r\n          <div\r\n            v-for=\"group in filteredGroups\"\r\n            :key=\"group.name\"\r\n            class=\"p-4 hover:bg-gray-50 cursor-pointer transition-colors\"\r\n            @click=\"toggleGroup(group)\"\r\n          >\r\n            <div class=\"flex items-center justify-between\">\r\n              <div class=\"flex items-center space-x-3\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  :checked=\"isGroupSelected(group)\"\r\n                  @change=\"toggleGroup(group)\"\r\n                  @click.stop\r\n                  class=\"w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 focus:ring-2\"\r\n                />\r\n                <div>\r\n                  <div class=\"font-medium text-gray-900\">{{ group.title || group.name }}</div>\r\n                  <div class=\"text-sm text-gray-500\">\r\n                    {{ group.email_count || 0 }} recipients\r\n                  </div>\r\n                  <div v-if=\"group.description\" class=\"text-xs text-gray-400 mt-1\">\r\n                    {{ group.description }}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"text-right\">\r\n                <div class=\"text-sm text-gray-500\">\r\n                  Created: {{ formatDate(group.creation) }}\r\n                </div>\r\n                <div v-if=\"group.modified !== group.creation\" class=\"text-xs text-gray-400\">\r\n                  Modified: {{ formatDate(group.modified) }}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Selected Groups Summary -->\r\n      <div v-if=\"selectedGroups.length > 0\" class=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\r\n        <h4 class=\"font-medium text-blue-900 mb-2\">Selected Groups ({{ selectedGroups.length }})</h4>\r\n        <div class=\"space-y-1\">\r\n          <div\r\n            v-for=\"group in selectedGroups\"\r\n            :key=\"group.name\"\r\n            class=\"flex items-center justify-between text-sm\"\r\n          >\r\n            <span class=\"text-blue-800\">{{ group.title || group.name }}</span>\r\n            <span class=\"text-blue-600\">{{ group.email_count || 0 }} recipients</span>\r\n          </div>\r\n        </div>\r\n        <div class=\"mt-2 pt-2 border-t border-blue-200\">\r\n          <span class=\"font-medium text-blue-900\">\r\n            Total Recipients: {{ totalSelectedRecipients }}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n      </div>\r\n\r\n      <!-- Footer -->\r\n      <div class=\"flex items-center justify-end space-x-3 p-6 border-t border-gray-200 bg-gray-50\">\r\n        <Button @click=\"closeDialog\" variant=\"outline\">\r\n          Cancel\r\n        </Button>\r\n        <Button @click=\"selectGroups\" variant=\"solid\">\r\n          Done\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted, watch, defineEmits, defineProps } from 'vue'\r\nimport { Button, FeatherIcon, call } from 'frappe-ui'\r\n\r\n// Props\r\nconst props = defineProps({\r\n  show: {\r\n    type: Boolean,\r\n    default: false\r\n  }\r\n})\r\n\r\n// Emits\r\nconst emit = defineEmits(['update:show', 'groups-selected'])\r\n\r\n// Dialog state\r\nconst isDialogOpen = computed({\r\n  get: () => props.show,\r\n  set: (value) => emit('update:show', value)\r\n})\r\n\r\n// Component state\r\nconst searchQuery = ref('')\r\nconst isLoading = ref(false)\r\nconst emailGroups = ref([])\r\nconst selectedGroups = ref([])\r\nconst groupMembersCache = ref({})\r\n\r\n// Computed properties\r\nconst filteredGroups = computed(() => {\r\n  if (!searchQuery.value) {\r\n    return emailGroups.value\r\n  }\r\n\r\n  const query = searchQuery.value.toLowerCase()\r\n  return emailGroups.value.filter(group =>\r\n    group.name.toLowerCase().includes(query) ||\r\n    (group.description && group.description.toLowerCase().includes(query))\r\n  )\r\n})\r\n\r\nconst totalSelectedRecipients = computed(() => {\r\n  return selectedGroups.value.reduce((total, group) => total + (group.email_count || 0), 0)\r\n})\r\n\r\n// Methods\r\nconst loadEmailGroups = async () => {\r\n  isLoading.value = true\r\n  try {\r\n    console.log('Loading email groups from Frappe...')\r\n\r\n    // Fetch Email Groups from Frappe\r\n    const response = await call('frappe.client.get_list', {\r\n      doctype: 'Email Group',\r\n      fields: ['name', 'title', 'total_subscribers', 'creation', 'modified'],\r\n      filters: [\r\n        // Exclude temporary groups\r\n        ['title', 'not like', 'temp-grp-%']\r\n      ],\r\n      order_by: 'modified desc',\r\n      limit_page_length: 100\r\n    })\r\n\r\n    console.log('Email Groups loaded:', response)\r\n\r\n    // Transform to match our component's expected format\r\n    emailGroups.value = response.map(group => ({\r\n      name: group.name,\r\n      title: group.title || group.name,\r\n      email_count: group.total_subscribers || 0,\r\n      description: '',\r\n      creation: group.creation,\r\n      modified: group.modified,\r\n      emails: [] // Will be loaded on demand when group is selected or expanded\r\n    }))\r\n\r\n  } catch (error) {\r\n    console.error('Error loading email groups:', error)\r\n    emailGroups.value = []\r\n  } finally {\r\n    isLoading.value = false\r\n  }\r\n}\r\n\r\nconst loadGroupMembers = async (groupName) => {\r\n  // Check cache first\r\n  if (groupMembersCache.value[groupName]) {\r\n    return groupMembersCache.value[groupName]\r\n  }\r\n\r\n  try {\r\n    console.log('Loading members for group:', groupName)\r\n\r\n    const response = await call('frappe.client.get_list', {\r\n      doctype: 'Email Group Member',\r\n      fields: ['email', 'email_group'],\r\n      filters: [\r\n        ['email_group', '=', groupName]\r\n      ],\r\n      limit_page_length: 1000\r\n    })\r\n\r\n    const emails = response.map(member => member.email)\r\n\r\n    // Cache the result\r\n    groupMembersCache.value[groupName] = emails\r\n\r\n    return emails\r\n  } catch (error) {\r\n    console.error('Error loading group members:', error)\r\n    return []\r\n  }\r\n}\r\n\r\nconst isGroupSelected = (group) => {\r\n  return selectedGroups.value.some(selected => selected.name === group.name)\r\n}\r\n\r\nconst toggleGroup = async (group) => {\r\n  const index = selectedGroups.value.findIndex(selected => selected.name === group.name)\r\n  if (index > -1) {\r\n    selectedGroups.value.splice(index, 1)\r\n  } else {\r\n    // Load group members when selecting\r\n    const emails = await loadGroupMembers(group.name)\r\n    selectedGroups.value.push({\r\n      ...group,\r\n      emails: emails\r\n    })\r\n  }\r\n}\r\n\r\nconst selectGroups = () => {\r\n  emit('groups-selected', [...selectedGroups.value])\r\n  closeDialog()\r\n}\r\n\r\nconst closeDialog = () => {\r\n  isDialogOpen.value = false\r\n  // Reset selections when closing\r\n  selectedGroups.value = []\r\n  searchQuery.value = ''\r\n}\r\n\r\nconst formatDate = (dateString) => {\r\n  if (!dateString) return 'N/A'\r\n  try {\r\n    const date = new Date(dateString)\r\n    return date.toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric'\r\n    })\r\n  } catch (error) {\r\n    return 'Invalid Date'\r\n  }\r\n}\r\n\r\n// Load groups when dialog is opened\r\nonMounted(() => {\r\n  if (props.show) {\r\n    loadEmailGroups()\r\n  }\r\n})\r\n\r\n// Watch for dialog opening to load groups\r\nwatch(() => props.show, (isOpen) => {\r\n  if (isOpen) {\r\n    loadEmailGroups()\r\n  }\r\n})\r\n</script>","<template>\r\n  <div v-if=\"isDialogOpen\" class=\"fixed inset-0 z-50 flex items-center justify-center\">\r\n    <!-- Backdrop -->\r\n    <div class=\"fixed inset-0 bg-black bg-opacity-50\" @click=\"closeDialog\"></div>\r\n\r\n    <!-- Dialog -->\r\n    <div class=\"relative bg-white rounded-lg shadow-xl max-w-4xl w-full mx-4 max-h-[90vh] overflow-hidden\">\r\n      <!-- Header -->\r\n      <div class=\"flex items-center justify-between p-6 border-b border-gray-200\">\r\n        <h2 class=\"text-lg font-semibold text-gray-900\">Compose Email</h2>\r\n        <button @click=\"closeDialog\" class=\"text-gray-400 hover:text-gray-600\">\r\n          <FeatherIcon name=\"x\" class=\"w-5 h-5\" />\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Content -->\r\n      <div class=\"p-6 overflow-y-auto max-h-[calc(90vh-140px)]\">\r\n        <div class=\"space-y-6\">\r\n          <!-- Recipients Section -->\r\n          <div>\r\n            <label class=\"block text-sm font-medium text-gray-700 mb-2\">Recipients <span class=\"text-red-500\">*</span></label>\r\n            <div class=\"flex items-start space-x-2\">\r\n              <div class=\"flex-1\">\r\n                <!-- Recipients Pills Container -->\r\n                <div class=\"w-full min-h-[80px] px-3 py-2 border border-gray-300 rounded-md focus-within:ring-2 focus-within:ring-blue-500 focus-within:border-blue-500\">\r\n                  <div class=\"flex flex-wrap gap-2 mb-2\">\r\n                    <!-- Group Pills -->\r\n                    <div\r\n                      v-for=\"group in selectedGroups\"\r\n                      :key=\"'group-' + group.name\"\r\n                      class=\"relative group\"\r\n                    >\r\n                      <div\r\n                        class=\"inline-flex items-center gap-1 px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm cursor-pointer hover:bg-blue-200 transition-colors\"\r\n                        @click=\"toggleGroupExpansion(group.name)\"\r\n                      >\r\n                        <FeatherIcon name=\"users\" class=\"w-3 h-3\" />\r\n                        <span class=\"font-medium\">{{ group.title || group.name }}</span>\r\n                        <span class=\"text-xs text-blue-600\">({{ group.email_count || 0 }})</span>\r\n                        <button\r\n                          type=\"button\"\r\n                          @click.stop=\"removeGroup(group.name)\"\r\n                          class=\"ml-1 hover:bg-blue-300 rounded-full p-0.5\"\r\n                        >\r\n                          <FeatherIcon name=\"x\" class=\"w-3 h-3\" />\r\n                        </button>\r\n                      </div>\r\n\r\n                      <!-- Expanded Group Members -->\r\n                      <div\r\n                        v-if=\"expandedGroups.includes(group.name)\"\r\n                        class=\"absolute z-20 mt-1 p-3 bg-white border border-gray-300 rounded-lg shadow-lg max-w-xs\"\r\n                      >\r\n                        <div class=\"flex items-center justify-between mb-2\">\r\n                          <h4 class=\"text-sm font-semibold text-gray-700\">{{ group.title || group.name }} Members</h4>\r\n                          <button\r\n                            type=\"button\"\r\n                            @click=\"toggleGroupExpansion(group.name)\"\r\n                            class=\"text-gray-400 hover:text-gray-600\"\r\n                          >\r\n                            <FeatherIcon name=\"x\" class=\"w-4 h-4\" />\r\n                          </button>\r\n                        </div>\r\n                        <div class=\"max-h-40 overflow-y-auto space-y-1\">\r\n                          <div\r\n                            v-for=\"(email, idx) in (group.emails || [])\"\r\n                            :key=\"idx\"\r\n                            class=\"text-xs text-gray-600 py-1 px-2 bg-gray-50 rounded\"\r\n                          >\r\n                            {{ email }}\r\n                          </div>\r\n                          <div v-if=\"!group.emails || group.emails.length === 0\" class=\"text-xs text-gray-400 italic\">\r\n                            No members loaded\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <!-- Individual Email Pills -->\r\n                    <div\r\n                      v-for=\"(email, index) in emailPills\"\r\n                      :key=\"'email-' + index\"\r\n                      :class=\"[\r\n                        'inline-flex items-center gap-1 px-3 py-1 rounded-full text-sm relative group',\r\n                        email.status === 'valid' ? 'bg-green-100 text-green-800' :\r\n                        email.status === 'invalid' ? 'bg-red-100 text-red-800' :\r\n                        email.status === 'duplicate' ? 'bg-yellow-100 text-yellow-800' : 'bg-gray-100 text-gray-800'\r\n                      ]\"\r\n                      :title=\"email.reason || ''\"\r\n                    >\r\n                      <!-- Status Icon -->\r\n                      <span v-if=\"email.status === 'invalid'\" class=\"text-red-600\">⚠️</span>\r\n                      <span v-if=\"email.status === 'duplicate'\" class=\"text-yellow-600\">⚠</span>\r\n                      <span v-if=\"email.status === 'valid'\" class=\"text-green-600\">✓</span>\r\n\r\n                      <span>{{ email.address }}</span>\r\n                      <button\r\n                        type=\"button\"\r\n                        @click=\"removeEmailPill(index)\"\r\n                        :class=\"[\r\n                          'hover:bg-opacity-50 rounded-full p-0.5',\r\n                          email.status === 'valid' ? 'hover:bg-green-300' :\r\n                          email.status === 'invalid' ? 'hover:bg-red-300' :\r\n                          email.status === 'duplicate' ? 'hover:bg-yellow-300' : 'hover:bg-gray-300'\r\n                        ]\"\r\n                      >\r\n                        <FeatherIcon name=\"x\" class=\"w-3 h-3\" />\r\n                      </button>\r\n\r\n                      <!-- Enhanced Tooltip -->\r\n                      <div\r\n                        v-if=\"email.reason\"\r\n                        class=\"absolute bottom-full left-1/2 -translate-x-1/2 mb-2 px-3 py-2 text-xs text-white rounded-lg shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 whitespace-nowrap z-30\"\r\n                        :class=\"[\r\n                          email.status === 'invalid' ? 'bg-red-600' :\r\n                          email.status === 'duplicate' ? 'bg-yellow-600' : 'bg-gray-600'\r\n                        ]\"\r\n                      >\r\n                        {{ email.reason }}\r\n                        <!-- Tooltip Arrow -->\r\n                        <div\r\n                          class=\"absolute top-full left-1/2 -translate-x-1/2 -mt-1 w-0 h-0 border-l-4 border-r-4 border-t-4 border-transparent\"\r\n                          :class=\"[\r\n                            email.status === 'invalid' ? 'border-t-red-600' :\r\n                            email.status === 'duplicate' ? 'border-t-yellow-600' : 'border-t-gray-600'\r\n                          ]\"\r\n                        ></div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <!-- Input Field -->\r\n                  <input\r\n                    ref=\"recipientInput\"\r\n                    v-model=\"currentEmailInput\"\r\n                    @keydown=\"handleEmailInputKeydown\"\r\n                    @paste=\"handleEmailPaste\"\r\n                    @blur=\"handleEmailInputBlur\"\r\n                    type=\"text\"\r\n                    placeholder=\"Type email and press comma or enter...\"\r\n                    class=\"w-full outline-none text-sm\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <Button\r\n                @click=\"showGroupSelector = true\"\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                class=\"mt-1\"\r\n              >\r\n                <template #prefix>\r\n                  <FeatherIcon name=\"users\" class=\"w-4 h-4\" />\r\n                </template>\r\n                Select Group\r\n              </Button>\r\n            </div>\r\n            <p class=\"text-xs text-gray-500 mt-1\">\r\n              Total Recipients: {{ totalRecipientCount }} ({{ validEmailCount }} valid, {{ invalidEmailCount }} invalid, {{ duplicateEmailCount }} duplicates)\r\n            </p>\r\n          </div>\r\n\r\n          <!-- Subject -->\r\n          <div>\r\n            <label class=\"block text-sm font-medium text-gray-700 mb-1\">Subject <span class=\"text-red-500\">*</span></label>\r\n            <input\r\n              v-model=\"formData.subject\"\r\n              type=\"text\"\r\n              placeholder=\"Enter email subject\"\r\n              class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <!-- Content Type Selection -->\r\n          <div>\r\n            <label class=\"block text-sm font-medium text-gray-700 mb-1\">Content Type</label>\r\n            <select\r\n              v-model=\"formData.content_type\"\r\n              class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n            >\r\n              <option value=\"Rich Text\">Rich Text</option>\r\n              <option value=\"Markdown\">Markdown</option>\r\n              <option value=\"HTML\">HTML</option>\r\n            </select>\r\n          </div>\r\n\r\n          <!-- Message Content -->\r\n          <div>\r\n            <label class=\"block text-sm font-medium text-gray-700 mb-2\">Message <span class=\"text-red-500\">*</span></label>\r\n\r\n            <!-- Rich Text Editor -->\r\n            <div v-if=\"formData.content_type === 'Rich Text'\" class=\"border border-gray-300 rounded-lg overflow-hidden\">\r\n              <!-- Tiptap Toolbar -->\r\n              <div v-if=\"editor\" class=\"bg-gray-50 p-2 border-b border-gray-300\">\r\n                <!-- Row 1: Text Formatting -->\r\n                <div class=\"flex flex-wrap gap-1 mb-2\">\r\n                  <button\r\n                    type=\"button\"\r\n                    @click=\"editor.chain().focus().toggleBold().run()\"\r\n                    :class=\"{ 'bg-gray-200': editor.isActive('bold') }\"\r\n                    class=\"px-3 py-1 text-sm border border-gray-200 rounded hover:bg-gray-100 font-bold\"\r\n                    title=\"Bold (Ctrl+B)\"\r\n                  >\r\n                    B\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    @click=\"editor.chain().focus().toggleItalic().run()\"\r\n                    :class=\"{ 'bg-gray-200': editor.isActive('italic') }\"\r\n                    class=\"px-3 py-1 text-sm border border-gray-200 rounded hover:bg-gray-100 italic\"\r\n                    title=\"Italic (Ctrl+I)\"\r\n                  >\r\n                    I\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    @click=\"editor.chain().focus().toggleUnderline().run()\"\r\n                    :class=\"{ 'bg-gray-200': editor.isActive('underline') }\"\r\n                    class=\"px-3 py-1 text-sm border border-gray-200 rounded hover:bg-gray-100 underline\"\r\n                    title=\"Underline (Ctrl+U)\"\r\n                  >\r\n                    U\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    @click=\"editor.chain().focus().toggleStrike().run()\"\r\n                    :class=\"{ 'bg-gray-200': editor.isActive('strike') }\"\r\n                    class=\"px-3 py-1 text-sm border border-gray-200 rounded hover:bg-gray-100 line-through\"\r\n                    title=\"Strikethrough\"\r\n                  >\r\n                    S\r\n                  </button>\r\n\r\n                  <div class=\"border-l border-gray-300 mx-1\"></div>\r\n\r\n                  <!-- Color Picker -->\r\n                  <div class=\"relative inline-block\">\r\n                    <button\r\n                      type=\"button\"\r\n                      @click=\"showTextColorPicker = !showTextColorPicker\"\r\n                      class=\"px-3 py-1 text-sm border border-gray-200 rounded hover:bg-gray-100 flex items-center gap-1\"\r\n                      title=\"Text Color\"\r\n                    >\r\n                      A\r\n                      <span class=\"w-4 h-1 bg-current\"></span>\r\n                    </button>\r\n                    <div v-if=\"showTextColorPicker\" class=\"absolute z-10 mt-1 p-2 bg-white border border-gray-300 rounded shadow-lg\">\r\n                      <input\r\n                        type=\"color\"\r\n                        v-model=\"textColor\"\r\n                        @change=\"applyTextColor(textColor)\"\r\n                        class=\"w-20 h-8\"\r\n                      />\r\n                      <button\r\n                        @click=\"editor.chain().focus().unsetColor().run(); showTextColorPicker = false\"\r\n                        class=\"mt-1 px-2 py-1 text-xs bg-gray-100 rounded hover:bg-gray-200 w-full\"\r\n                      >\r\n                        Clear\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <!-- Highlight Color -->\r\n                  <div class=\"relative inline-block\">\r\n                    <button\r\n                      type=\"button\"\r\n                      @click=\"showHighlightColorPicker = !showHighlightColorPicker\"\r\n                      :class=\"{ 'bg-gray-200': editor.isActive('highlight') }\"\r\n                      class=\"px-3 py-1 text-sm border border-gray-200 rounded hover:bg-gray-100\"\r\n                      title=\"Highlight\"\r\n                    >\r\n                      🎨\r\n                    </button>\r\n                    <div v-if=\"showHighlightColorPicker\" class=\"absolute z-10 mt-1 p-2 bg-white border border-gray-300 rounded shadow-lg\">\r\n                      <input\r\n                        type=\"color\"\r\n                        v-model=\"highlightColor\"\r\n                        @change=\"applyHighlight(highlightColor)\"\r\n                        class=\"w-20 h-8\"\r\n                      />\r\n                      <button\r\n                        @click=\"editor.chain().focus().unsetHighlight().run(); showHighlightColorPicker = false\"\r\n                        class=\"mt-1 px-2 py-1 text-xs bg-gray-100 rounded hover:bg-gray-200 w-full\"\r\n                      >\r\n                        Clear\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- Row 2: Headings & Alignment -->\r\n                <div class=\"flex flex-wrap gap-1 mb-2\">\r\n                  <button\r\n                    type=\"button\"\r\n                    @click=\"editor.chain().focus().toggleHeading({ level: 1 }).run()\"\r\n                    :class=\"{ 'bg-gray-200': editor.isActive('heading', { level: 1 }) }\"\r\n                    class=\"px-3 py-1 text-sm border border-gray-200 rounded hover:bg-gray-100 font-bold\"\r\n                    title=\"Heading 1\"\r\n                  >\r\n                    H1\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    @click=\"editor.chain().focus().toggleHeading({ level: 2 }).run()\"\r\n                    :class=\"{ 'bg-gray-200': editor.isActive('heading', { level: 2 }) }\"\r\n                    class=\"px-3 py-1 text-sm border border-gray-200 rounded hover:bg-gray-100 font-bold\"\r\n                    title=\"Heading 2\"\r\n                  >\r\n                    H2\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    @click=\"editor.chain().focus().toggleHeading({ level: 3 }).run()\"\r\n                    :class=\"{ 'bg-gray-200': editor.isActive('heading', { level: 3 }) }\"\r\n                    class=\"px-3 py-1 text-sm border border-gray-200 rounded hover:bg-gray-100 font-bold\"\r\n                    title=\"Heading 3\"\r\n                  >\r\n                    H3\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    @click=\"editor.chain().focus().setParagraph().run()\"\r\n                    :class=\"{ 'bg-gray-200': editor.isActive('paragraph') }\"\r\n                    class=\"px-3 py-1 text-sm border border-gray-200 rounded hover:bg-gray-100\"\r\n                    title=\"Paragraph\"\r\n                  >\r\n                    P\r\n                  </button>\r\n\r\n                  <div class=\"border-l border-gray-300 mx-1\"></div>\r\n\r\n                  <!-- Text Alignment -->\r\n                  <button\r\n                    type=\"button\"\r\n                    @click=\"editor.chain().focus().setTextAlign('left').run()\"\r\n                    :class=\"{ 'bg-gray-200': editor.isActive({ textAlign: 'left' }) }\"\r\n                    class=\"px-3 py-1 text-sm border border-gray-200 rounded hover:bg-gray-100\"\r\n                    title=\"Align Left\"\r\n                  >\r\n                    ⫷\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    @click=\"editor.chain().focus().setTextAlign('center').run()\"\r\n                    :class=\"{ 'bg-gray-200': editor.isActive({ textAlign: 'center' }) }\"\r\n                    class=\"px-3 py-1 text-sm border border-gray-200 rounded hover:bg-gray-100\"\r\n                    title=\"Align Center\"\r\n                  >\r\n                    ≡\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    @click=\"editor.chain().focus().setTextAlign('right').run()\"\r\n                    :class=\"{ 'bg-gray-200': editor.isActive({ textAlign: 'right' }) }\"\r\n                    class=\"px-3 py-1 text-sm border border-gray-200 rounded hover:bg-gray-100\"\r\n                    title=\"Align Right\"\r\n                  >\r\n                    ⫸\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    @click=\"editor.chain().focus().setTextAlign('justify').run()\"\r\n                    :class=\"{ 'bg-gray-200': editor.isActive({ textAlign: 'justify' }) }\"\r\n                    class=\"px-3 py-1 text-sm border border-gray-200 rounded hover:bg-gray-100\"\r\n                    title=\"Justify\"\r\n                  >\r\n                    ▤\r\n                  </button>\r\n                </div>\r\n\r\n                <!-- Row 3: Lists, Images & Tables -->\r\n                <div class=\"flex flex-wrap gap-1\">\r\n                  <button\r\n                    type=\"button\"\r\n                    @click=\"editor.chain().focus().toggleBulletList().run()\"\r\n                    :class=\"{ 'bg-gray-200': editor.isActive('bulletList') }\"\r\n                    class=\"px-3 py-1 text-sm border border-gray-200 rounded hover:bg-gray-100\"\r\n                    title=\"Bullet List\"\r\n                  >\r\n                    •\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    @click=\"editor.chain().focus().toggleOrderedList().run()\"\r\n                    :class=\"{ 'bg-gray-200': editor.isActive('orderedList') }\"\r\n                    class=\"px-3 py-1 text-sm border border-gray-200 rounded hover:bg-gray-100\"\r\n                    title=\"Numbered List\"\r\n                  >\r\n                    1.\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    @click=\"editor.chain().focus().toggleBlockquote().run()\"\r\n                    :class=\"{ 'bg-gray-200': editor.isActive('blockquote') }\"\r\n                    class=\"px-3 py-1 text-sm border border-gray-200 rounded hover:bg-gray-100\"\r\n                    title=\"Quote\"\r\n                  >\r\n                    \"\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    @click=\"editor.chain().focus().toggleCodeBlock().run()\"\r\n                    :class=\"{ 'bg-gray-200': editor.isActive('codeBlock') }\"\r\n                    class=\"px-3 py-1 text-sm border border-gray-200 rounded hover:bg-gray-100 font-mono\"\r\n                    title=\"Code Block\"\r\n                  >\r\n                    &lt;/&gt;\r\n                  </button>\r\n\r\n                  <div class=\"border-l border-gray-300 mx-1\"></div>\r\n\r\n                  <!-- Image Upload -->\r\n                  <button\r\n                    type=\"button\"\r\n                    @click=\"$refs.imageInput.click()\"\r\n                    class=\"px-3 py-1 text-sm border border-gray-200 rounded hover:bg-gray-100\"\r\n                    title=\"Upload Image\"\r\n                  >\r\n                    📷\r\n                  </button>\r\n                  <input\r\n                    ref=\"imageInput\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    @change=\"uploadImage\"\r\n                    class=\"hidden\"\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    @click=\"addImage\"\r\n                    class=\"px-3 py-1 text-sm border border-gray-200 rounded hover:bg-gray-100\"\r\n                    title=\"Insert Image URL\"\r\n                  >\r\n                    🖼️\r\n                  </button>\r\n\r\n                  <!-- Table -->\r\n                  <button\r\n                    type=\"button\"\r\n                    @click=\"insertTable\"\r\n                    class=\"px-3 py-1 text-sm border border-gray-200 rounded hover:bg-gray-100\"\r\n                    title=\"Insert Table\"\r\n                  >\r\n                    ⊞\r\n                  </button>\r\n\r\n                  <div class=\"border-l border-gray-300 mx-1\"></div>\r\n\r\n                  <button\r\n                    type=\"button\"\r\n                    @click=\"editor.chain().focus().setHorizontalRule().run()\"\r\n                    class=\"px-3 py-1 text-sm border border-gray-200 rounded hover:bg-gray-100\"\r\n                    title=\"Horizontal Line\"\r\n                  >\r\n                    —\r\n                  </button>\r\n\r\n                  <div class=\"border-l border-gray-300 mx-1\"></div>\r\n\r\n                  <button\r\n                    type=\"button\"\r\n                    @click=\"editor.chain().focus().undo().run()\"\r\n                    :disabled=\"!editor.can().undo()\"\r\n                    class=\"px-3 py-1 text-sm border border-gray-200 rounded hover:bg-gray-100 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                    title=\"Undo\"\r\n                  >\r\n                    ↶\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    @click=\"editor.chain().focus().redo().run()\"\r\n                    :disabled=\"!editor.can().redo()\"\r\n                    class=\"px-3 py-1 text-sm border border-gray-200 rounded hover:bg-gray-100 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                    title=\"Redo\"\r\n                  >\r\n                    ↷\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Tiptap Content Area -->\r\n              <EditorContent :editor=\"editor\" class=\"tiptap-editor\" />\r\n            </div>\r\n\r\n            <!-- Markdown Editor -->\r\n            <div v-else-if=\"formData.content_type === 'Markdown'\">\r\n              <textarea\r\n                v-model=\"formData.message_md\"\r\n                placeholder=\"Compose your email message in Markdown...\"\r\n                rows=\"10\"\r\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 font-mono text-sm\"\r\n              ></textarea>\r\n            </div>\r\n\r\n            <!-- HTML Editor -->\r\n            <div v-else-if=\"formData.content_type === 'HTML'\">\r\n              <textarea\r\n                v-model=\"formData.message_html\"\r\n                placeholder=\"Compose your email message in HTML...\"\r\n                rows=\"10\"\r\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 font-mono text-sm\"\r\n              ></textarea>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Attachments Section -->\r\n          <div>\r\n            <label class=\"block text-sm font-medium text-gray-700 mb-2\">Attachments</label>\r\n            <div class=\"border border-gray-300 rounded-lg p-4 bg-gray-50\">\r\n              <!-- Attachment Pills -->\r\n              <div v-if=\"attachments.length > 0\" class=\"flex flex-wrap gap-2 mb-3\">\r\n                <div\r\n                  v-for=\"(file, index) in attachments\"\r\n                  :key=\"'attachment-' + index\"\r\n                  class=\"inline-flex items-center gap-2 px-3 py-2 bg-white border border-gray-300 rounded-lg text-sm hover:bg-gray-50 transition-colors\"\r\n                >\r\n                  <!-- File Icon -->\r\n                  <div class=\"flex-shrink-0\">\r\n                    <svg v-if=\"isImageFile(file)\" class=\"w-5 h-5 text-blue-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\" />\r\n                    </svg>\r\n                    <svg v-else-if=\"isPDFFile(file)\" class=\"w-5 h-5 text-red-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z\" />\r\n                    </svg>\r\n                    <svg v-else class=\"w-5 h-5 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n                    </svg>\r\n                  </div>\r\n\r\n                  <!-- File Info -->\r\n                  <div class=\"flex-1 min-w-0\">\r\n                    <div class=\"font-medium text-gray-900 truncate\">{{ file.name }}</div>\r\n                    <div class=\"text-xs text-gray-500\">{{ formatFileSize(file.size) }}</div>\r\n                  </div>\r\n\r\n                  <!-- Remove Button -->\r\n                  <button\r\n                    type=\"button\"\r\n                    @click=\"removeAttachment(index)\"\r\n                    class=\"flex-shrink-0 text-gray-400 hover:text-red-600 transition-colors\"\r\n                    title=\"Remove attachment\"\r\n                  >\r\n                    <FeatherIcon name=\"x\" class=\"w-4 h-4\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Upload Button -->\r\n              <div class=\"flex items-center gap-2\">\r\n                <input\r\n                  ref=\"attachmentInput\"\r\n                  type=\"file\"\r\n                  multiple\r\n                  @change=\"handleFileAttachment\"\r\n                  class=\"hidden\"\r\n                />\r\n                <Button\r\n                  @click=\"$refs.attachmentInput.click()\"\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                >\r\n                  <template #prefix>\r\n                    <FeatherIcon name=\"paperclip\" class=\"w-4 h-4\" />\r\n                  </template>\r\n                  Add Attachments\r\n                </Button>\r\n                <span v-if=\"attachments.length > 0\" class=\"text-xs text-gray-500\">\r\n                  {{ attachments.length }} file{{ attachments.length !== 1 ? 's' : '' }} ({{ formatFileSize(totalAttachmentSize) }})\r\n                </span>\r\n              </div>\r\n\r\n              <!-- Max Size Warning -->\r\n              <p class=\"text-xs text-gray-500 mt-2\">\r\n                Maximum file size: 10MB per file. Supported formats: All common file types.\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Email Options -->\r\n          <div class=\"bg-gray-50 p-4 rounded-lg\">\r\n            <h3 class=\"text-sm font-medium text-gray-700 mb-3\">Email Options</h3>\r\n            <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <div class=\"space-y-3\">\r\n                <label class=\"flex items-center\">\r\n                  <input type=\"checkbox\" v-model=\"formData.send_unsubscribe_link\" class=\"mr-2\" />\r\n                  <span class=\"text-sm text-gray-700\">Send Unsubscribe Link</span>\r\n                </label>\r\n                <!-- <label class=\"flex items-center\">\r\n                  <input type=\"checkbox\" v-model=\"formData.send_webview_link\" class=\"mr-2\" />\r\n                  <span class=\"text-sm text-gray-700\">Send Web View Link</span>\r\n                </label> -->\r\n                <!-- <label class=\"flex items-center\">\r\n                  <input type=\"checkbox\" v-model=\"formData.published\" class=\"mr-2\" />\r\n                  <span class=\"text-sm text-gray-700\">Publish as Web Page</span>\r\n                </label> -->\r\n              </div>\r\n              <div class=\"space-y-3\">\r\n                <label class=\"flex items-center\">\r\n                  <input type=\"checkbox\" v-model=\"sendLater\" class=\"mr-2\" />\r\n                  <span class=\"text-sm text-gray-700\">Schedule sending at a later time</span>\r\n                </label>\r\n                <div v-if=\"sendLater\">\r\n                  <label class=\"block text-sm font-medium text-gray-700 mb-1\">Send Email At</label>\r\n                  <input\r\n                    v-model=\"formData.schedule_send\"\r\n                    type=\"datetime-local\"\r\n                    class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Campaign and Route -->\r\n          <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div>\r\n              <label class=\"block text-sm font-medium text-gray-700 mb-1\">Campaign (Optional)</label>\r\n              <input\r\n                v-model=\"formData.campaign\"\r\n                type=\"text\"\r\n                placeholder=\"Enter campaign name\"\r\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n              />\r\n            </div>\r\n            <div v-if=\"formData.published\">\r\n              <label class=\"block text-sm font-medium text-gray-700 mb-1\">Route</label>\r\n              <input\r\n                v-model=\"formData.route\"\r\n                type=\"text\"\r\n                placeholder=\"e.g., newsletter/my-newsletter\"\r\n                class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Footer -->\r\n      <div class=\"flex items-center justify-between p-6 border-t border-gray-200 bg-gray-50\">\r\n        <Button @click=\"closeDialog\" variant=\"outline\">\r\n          Cancel\r\n        </Button>\r\n        <div class=\"flex items-center space-x-3\">\r\n          <Button @click=\"saveDraft\" variant=\"outline\" :loading=\"isSaving\">\r\n            <template #prefix>\r\n              <FeatherIcon name=\"save\" class=\"w-4 h-4\" />\r\n            </template>\r\n            Save Draft\r\n          </Button>\r\n          <Button @click=\"sendEmail\" variant=\"solid\" :loading=\"isSubmitting\">\r\n            {{ sendLater ? 'Schedule Email' : 'Send Email' }}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Group Selector Dialog -->\r\n  <GroupSelectorDialog\r\n    v-model:show=\"showGroupSelector\"\r\n    @groups-selected=\"handleGroupsSelected\"\r\n  />\r\n\r\n  <!-- Group Naming Dialog -->\r\n  <div v-if=\"showGroupNamingDialog\" class=\"fixed inset-0 z-50 flex items-center justify-center\">\r\n    <!-- Backdrop -->\r\n    <div class=\"fixed inset-0 bg-black bg-opacity-50\" @click=\"cancelGroupNaming\"></div>\r\n\r\n    <!-- Dialog -->\r\n    <div class=\"relative bg-white rounded-lg shadow-xl max-w-md w-full mx-4\">\r\n      <!-- Header -->\r\n      <div class=\"flex items-center justify-between p-6 border-b border-gray-200\">\r\n        <h2 class=\"text-lg font-semibold text-gray-900\">Save Email Group</h2>\r\n        <button @click=\"cancelGroupNaming\" class=\"text-gray-400 hover:text-gray-600\">\r\n          <FeatherIcon name=\"x\" class=\"w-5 h-5\" />\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Content -->\r\n      <div class=\"p-6\">\r\n        <p class=\"text-sm text-gray-600 mb-4\">\r\n          {{ groupNamingMessage }}\r\n        </p>\r\n\r\n        <div class=\"mb-4\">\r\n          <label class=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Group Name (Optional)\r\n          </label>\r\n          <input\r\n            ref=\"groupNameInput\"\r\n            v-model=\"newGroupName\"\r\n            type=\"text\"\r\n            placeholder=\"e.g., Marketing Team\"\r\n            class=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n            @keydown.enter=\"confirmGroupNaming\"\r\n          />\r\n          <p class=\"text-xs text-gray-500 mt-1\">\r\n            Leave empty to create a temporary group\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"bg-blue-50 border border-blue-200 rounded-lg p-3\">\r\n          <h4 class=\"text-sm font-medium text-blue-900 mb-2\">Recipients to be saved:</h4>\r\n          <div class=\"text-xs text-blue-800 space-y-1 max-h-32 overflow-y-auto\">\r\n            <div v-for=\"email in pendingGroupEmails\" :key=\"email\" class=\"py-1\">\r\n              {{ email }}\r\n            </div>\r\n          </div>\r\n          <div class=\"mt-2 pt-2 border-t border-blue-200 text-sm font-medium text-blue-900\">\r\n            Total: {{ pendingGroupEmails.length }} recipients\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Footer -->\r\n      <div class=\"flex items-center justify-end space-x-3 p-6 border-t border-gray-200 bg-gray-50\">\r\n        <Button @click=\"cancelGroupNaming\" variant=\"outline\">\r\n          Cancel\r\n        </Button>\r\n        <Button @click=\"skipGroupNaming\" variant=\"outline\">\r\n          Skip (Create Temporary)\r\n        </Button>\r\n        <Button @click=\"confirmGroupNaming\" variant=\"solid\">\r\n          {{ newGroupName ? 'Save Group' : 'Continue' }}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, watch, defineEmits, defineProps, onMounted, onBeforeUnmount } from 'vue'\r\nimport { Button, FeatherIcon, createResource, call } from 'frappe-ui'\r\nimport { useEditor, EditorContent } from '@tiptap/vue-3'\r\nimport StarterKit from '@tiptap/starter-kit'\r\nimport Underline from '@tiptap/extension-underline'\r\nimport ResizableImageExtension from 'tiptap-extension-resize-image'\r\nimport TextAlign from '@tiptap/extension-text-align'\r\nimport TextStyle from '@tiptap/extension-text-style'\r\nimport Color from '@tiptap/extension-color'\r\nimport FontFamily from '@tiptap/extension-font-family'\r\nimport Highlight from '@tiptap/extension-highlight'\r\nimport Table from '@tiptap/extension-table'\r\nimport TableRow from '@tiptap/extension-table-row'\r\nimport TableHeader from '@tiptap/extension-table-header'\r\nimport TableCell from '@tiptap/extension-table-cell'\r\nimport GroupSelectorDialog from './GroupSelectorDialog.vue'\r\nimport { session } from '../data/session'\r\n\r\n// Props\r\nconst props = defineProps({\r\n  show: {\r\n    type: Boolean,\r\n    default: false\r\n  }\r\n})\r\n\r\n// Emits\r\nconst emit = defineEmits(['update:show', 'email-sent'])\r\n\r\n// Dialog state\r\nconst isDialogOpen = computed({\r\n  get: () => props.show,\r\n  set: (value) => emit('update:show', value)\r\n})\r\n\r\n// Form state\r\nconst isSubmitting = ref(false)\r\nconst isSaving = ref(false)\r\nconst showGroupSelector = ref(false)\r\nconst sendLater = ref(false)\r\n\r\n// Group naming dialog state\r\nconst showGroupNamingDialog = ref(false)\r\nconst newGroupName = ref('')\r\nconst groupNameInput = ref(null)\r\nconst pendingGroupEmails = ref([])\r\nconst groupNamingMessage = ref('')\r\nconst groupNamingCallback = ref(null)\r\n\r\n// Tiptap Editor\r\nconst editor = useEditor({\r\n  extensions: [\r\n    StarterKit,\r\n    Underline,\r\n    ResizableImageExtension.configure({\r\n      inline: true,\r\n      allowBase64: true,\r\n    }),\r\n    TextAlign.configure({\r\n      types: ['heading', 'paragraph'],\r\n    }),\r\n    TextStyle,\r\n    Color,\r\n    FontFamily,\r\n    Highlight.configure({\r\n      multicolor: true,\r\n    }),\r\n    Table.configure({\r\n      resizable: true,\r\n    }),\r\n    TableRow,\r\n    TableHeader,\r\n    TableCell,\r\n  ],\r\n  content: '',\r\n  editorProps: {\r\n    attributes: {\r\n      class: 'w-full px-3 py-2 focus:outline-none min-h-[200px] max-h-[400px] overflow-y-auto prose prose-sm max-w-none',\r\n    },\r\n  },\r\n  onUpdate: ({ editor }) => {\r\n    formData.value.message = editor.getHTML()\r\n  },\r\n})\r\n\r\n// Image upload handler\r\nconst imageInput = ref(null)\r\nconst addImage = () => {\r\n  const url = prompt('Enter image URL (or paste base64 data URI):')\r\n  if (url) {\r\n    editor.value.chain().focus().setImage({ src: url }).run()\r\n  }\r\n}\r\n\r\nconst uploadImage = (event) => {\r\n  const file = event.target.files[0]\r\n  if (file && file.type.startsWith('image/')) {\r\n    const reader = new FileReader()\r\n    reader.onload = (e) => {\r\n      editor.value.chain().focus().setImage({ src: e.target.result }).run()\r\n    }\r\n    reader.readAsDataURL(file)\r\n  }\r\n}\r\n\r\n// Color picker refs\r\nconst showTextColorPicker = ref(false)\r\nconst showHighlightColorPicker = ref(false)\r\nconst textColor = ref('#000000')\r\nconst highlightColor = ref('#ffff00')\r\n\r\nconst applyTextColor = (color) => {\r\n  editor.value.chain().focus().setColor(color).run()\r\n  showTextColorPicker.value = false\r\n}\r\n\r\nconst applyHighlight = (color) => {\r\n  editor.value.chain().focus().toggleHighlight({ color }).run()\r\n  showHighlightColorPicker.value = false\r\n}\r\n\r\nconst applyFontSize = () => {\r\n  const size = prompt('Enter font size (e.g., 16px, 1.5em):')\r\n  if (size) {\r\n    editor.value.chain().focus().setMark('textStyle', { fontSize: size }).run()\r\n  }\r\n}\r\n\r\nconst insertTable = () => {\r\n  editor.value.chain().focus().insertTable({ rows: 3, cols: 3, withHeaderRow: true }).run()\r\n}\r\n\r\n// Recipients handling\r\nconst recipientInput = ref(null)\r\nconst currentEmailInput = ref('')\r\nconst emailPills = ref([]) // Array of { address: string, status: 'valid' | 'invalid' | 'duplicate', reason: string }\r\nconst selectedGroups = ref([])\r\nconst expandedGroups = ref([])\r\n\r\n// Attachments handling\r\nconst attachmentInput = ref(null)\r\nconst attachments = ref([]) // Array of File objects\r\nconst MAX_FILE_SIZE = 10 * 1024 * 1024 // 10MB in bytes\r\n\r\n// Email validation regex\r\nconst validateEmail = (email) => {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n  return emailRegex.test(email.trim())\r\n}\r\n\r\n// Get validation error message\r\nconst getValidationError = (email) => {\r\n  const trimmed = email.trim()\r\n\r\n  if (!trimmed) {\r\n    return 'Email cannot be empty'\r\n  }\r\n\r\n  if (!trimmed.includes('@')) {\r\n    return 'Email must contain @ symbol'\r\n  }\r\n\r\n  const parts = trimmed.split('@')\r\n  if (parts.length !== 2) {\r\n    return 'Email must have exactly one @ symbol'\r\n  }\r\n\r\n  if (!parts[0]) {\r\n    return 'Email must have a username before @'\r\n  }\r\n\r\n  if (!parts[1]) {\r\n    return 'Email must have a domain after @'\r\n  }\r\n\r\n  if (!parts[1].includes('.')) {\r\n    return 'Domain must contain a dot (.)'\r\n  }\r\n\r\n  const domainParts = parts[1].split('.')\r\n  if (domainParts.some(part => !part)) {\r\n    return 'Domain parts cannot be empty'\r\n  }\r\n\r\n  if (/\\s/.test(trimmed)) {\r\n    return 'Email cannot contain spaces'\r\n  }\r\n\r\n  return 'Invalid email format'\r\n}\r\n\r\n// Get all emails including from groups\r\nconst getAllEmails = () => {\r\n  const emails = new Set()\r\n\r\n  // Add emails from groups\r\n  selectedGroups.value.forEach(group => {\r\n    if (group.emails && Array.isArray(group.emails)) {\r\n      group.emails.forEach(email => emails.add(email.toLowerCase()))\r\n    }\r\n  })\r\n\r\n  // Add emails from pills\r\n  emailPills.value.forEach(pill => {\r\n    emails.add(pill.address.toLowerCase())\r\n  })\r\n\r\n  return emails\r\n}\r\n\r\n// Check if email is duplicate and return source\r\nconst getDuplicateSource = (email) => {\r\n  const normalizedEmail = email.toLowerCase().trim()\r\n\r\n  // Check in existing pills\r\n  const pillIndex = emailPills.value.findIndex(pill =>\r\n    pill.address.toLowerCase() === normalizedEmail\r\n  )\r\n\r\n  if (pillIndex > -1) {\r\n    return `Already added manually`\r\n  }\r\n\r\n  // Check in groups\r\n  for (const group of selectedGroups.value) {\r\n    if (group.emails && group.emails.some(groupEmail =>\r\n      groupEmail.toLowerCase() === normalizedEmail\r\n    )) {\r\n      return `Already in group: ${group.name}`\r\n    }\r\n  }\r\n\r\n  return null\r\n}\r\n\r\n// Add email pill\r\nconst addEmailPill = (email) => {\r\n  const trimmedEmail = email.trim()\r\n  if (!trimmedEmail) return\r\n\r\n  let status = 'valid'\r\n  let reason = ''\r\n\r\n  // Validate email format\r\n  if (!validateEmail(trimmedEmail)) {\r\n    status = 'invalid'\r\n    reason = getValidationError(trimmedEmail)\r\n  } else {\r\n    // Check for duplicates\r\n    const duplicateSource = getDuplicateSource(trimmedEmail)\r\n    if (duplicateSource) {\r\n      status = 'duplicate'\r\n      reason = duplicateSource\r\n    }\r\n  }\r\n\r\n  emailPills.value.push({\r\n    address: trimmedEmail,\r\n    status: status,\r\n    reason: reason\r\n  })\r\n\r\n  currentEmailInput.value = ''\r\n}\r\n\r\n// Remove email pill\r\nconst removeEmailPill = (index) => {\r\n  emailPills.value.splice(index, 1)\r\n}\r\n\r\n// Handle email input keydown\r\nconst handleEmailInputKeydown = (event) => {\r\n  if (event.key === ',' || event.key === 'Enter') {\r\n    event.preventDefault()\r\n    addEmailPill(currentEmailInput.value)\r\n  } else if (event.key === 'Backspace' && currentEmailInput.value === '' && emailPills.value.length > 0) {\r\n    // Remove last pill on backspace if input is empty\r\n    emailPills.value.pop()\r\n  }\r\n}\r\n\r\n// Handle email paste\r\nconst handleEmailPaste = (event) => {\r\n  event.preventDefault()\r\n  const pastedText = event.clipboardData?.getData('text') || ''\r\n\r\n  // Split by common separators\r\n  const emails = pastedText.split(/[,;\\s\\n]+/).filter(e => e.trim())\r\n\r\n  emails.forEach(email => {\r\n    addEmailPill(email)\r\n  })\r\n}\r\n\r\n// Handle email input blur\r\nconst handleEmailInputBlur = () => {\r\n  if (currentEmailInput.value.trim()) {\r\n    addEmailPill(currentEmailInput.value)\r\n  }\r\n}\r\n\r\n// Toggle group expansion\r\nconst toggleGroupExpansion = (groupName) => {\r\n  const index = expandedGroups.value.indexOf(groupName)\r\n  if (index > -1) {\r\n    expandedGroups.value.splice(index, 1)\r\n  } else {\r\n    expandedGroups.value.push(groupName)\r\n  }\r\n}\r\n\r\n// Remove group\r\nconst removeGroup = (groupName) => {\r\n  const index = selectedGroups.value.findIndex(g => g.name === groupName)\r\n  if (index > -1) {\r\n    selectedGroups.value.splice(index, 1)\r\n    // Remove from expanded groups if present\r\n    const expandedIndex = expandedGroups.value.indexOf(groupName)\r\n    if (expandedIndex > -1) {\r\n      expandedGroups.value.splice(expandedIndex, 1)\r\n    }\r\n  }\r\n  // Update form data\r\n  formData.value.email_group = selectedGroups.value.map(group => ({\r\n    email_group: group.name\r\n  }))\r\n}\r\n\r\n// Attachment handling functions\r\nconst handleFileAttachment = (event) => {\r\n  const files = Array.from(event.target.files || [])\r\n\r\n  files.forEach(file => {\r\n    // Check file size\r\n    if (file.size > MAX_FILE_SIZE) {\r\n      alert(`File \"${file.name}\" is too large. Maximum size is 10MB.`)\r\n      return\r\n    }\r\n\r\n    // Check for duplicates\r\n    const isDuplicate = attachments.value.some(\r\n      existing => existing.name === file.name && existing.size === file.size\r\n    )\r\n\r\n    if (isDuplicate) {\r\n      alert(`File \"${file.name}\" is already attached.`)\r\n      return\r\n    }\r\n\r\n    // Add file to attachments\r\n    attachments.value.push(file)\r\n  })\r\n\r\n  // Reset input\r\n  if (attachmentInput.value) {\r\n    attachmentInput.value.value = ''\r\n  }\r\n}\r\n\r\nconst removeAttachment = (index) => {\r\n  attachments.value.splice(index, 1)\r\n}\r\n\r\nconst formatFileSize = (bytes) => {\r\n  if (bytes === 0) return '0 Bytes'\r\n\r\n  const k = 1024\r\n  const sizes = ['Bytes', 'KB', 'MB', 'GB']\r\n  const i = Math.floor(Math.log(bytes) / Math.log(k))\r\n\r\n  return Math.round((bytes / Math.pow(k, i)) * 100) / 100 + ' ' + sizes[i]\r\n}\r\n\r\nconst isImageFile = (file) => {\r\n  return file.type.startsWith('image/')\r\n}\r\n\r\nconst isPDFFile = (file) => {\r\n  return file.type === 'application/pdf' || file.name.toLowerCase().endsWith('.pdf')\r\n}\r\n\r\nconst totalAttachmentSize = computed(() => {\r\n  return attachments.value.reduce((total, file) => total + file.size, 0)\r\n})\r\n\r\n// Group creation helper functions\r\nconst generateTempGroupName = () => {\r\n  const randomSuffix = Math.random().toString(36).substring(2, 8)\r\n  return `temp-grp-${randomSuffix}`\r\n}\r\n\r\nconst createEmailGroup = async (groupName, emails, isTemporary = false) => {\r\n  try {\r\n    console.log(`Creating email group: ${groupName}`, emails)\r\n\r\n    // Create Email Group document\r\n    const emailGroupDoc = {\r\n      doctype: 'Email Group',\r\n      title: groupName,\r\n    }\r\n\r\n    const createdGroup = await call('frappe.client.insert', {\r\n      doc: emailGroupDoc\r\n    })\r\n\r\n    console.log('Email Group created:', createdGroup)\r\n\r\n    // Add emails to the group as separate Email Group Member documents\r\n    for (const email of emails) {\r\n      const emailGroupMember = {\r\n        doctype: 'Email Group Member',\r\n        email_group: createdGroup.name, // Link to the Email Group\r\n        email: email,\r\n        unsubscribed: 0\r\n      }\r\n\r\n      await call('frappe.client.insert', {\r\n        doc: emailGroupMember\r\n      })\r\n    }\r\n\r\n    console.log(`Added ${emails.length} members to group ${groupName}`)\r\n\r\n    return {\r\n      name: createdGroup.name,\r\n      title: groupName,\r\n      email_count: emails.length,\r\n      emails: emails,\r\n      isTemporary: isTemporary\r\n    }\r\n  } catch (error) {\r\n    console.error('Error creating email group:', error)\r\n    throw new Error(`Failed to create email group: ${error.message || error}`)\r\n  }\r\n}\r\n\r\nconst showGroupNamingPrompt = (emails, message, callback) => {\r\n  pendingGroupEmails.value = emails\r\n  groupNamingMessage.value = message\r\n  groupNamingCallback.value = callback\r\n  newGroupName.value = ''\r\n  showGroupNamingDialog.value = true\r\n\r\n  // Focus the input after dialog opens\r\n  setTimeout(() => {\r\n    if (groupNameInput.value) {\r\n      groupNameInput.value.focus()\r\n    }\r\n  }, 100)\r\n}\r\n\r\nconst cancelGroupNaming = () => {\r\n  showGroupNamingDialog.value = false\r\n  pendingGroupEmails.value = []\r\n  groupNamingMessage.value = ''\r\n  groupNamingCallback.value = null\r\n  newGroupName.value = ''\r\n}\r\n\r\nconst skipGroupNaming = async () => {\r\n  showGroupNamingDialog.value = false\r\n\r\n  if (groupNamingCallback.value) {\r\n    // Create temporary group\r\n    const tempGroupName = generateTempGroupName()\r\n    const createdGroup = await createEmailGroup(tempGroupName, pendingGroupEmails.value, true)\r\n    groupNamingCallback.value(createdGroup)\r\n  }\r\n\r\n  cancelGroupNaming()\r\n}\r\n\r\nconst confirmGroupNaming = async () => {\r\n  showGroupNamingDialog.value = false\r\n\r\n  if (groupNamingCallback.value) {\r\n    const groupName = newGroupName.value.trim() || generateTempGroupName()\r\n    const isTemporary = !newGroupName.value.trim()\r\n    const createdGroup = await createEmailGroup(groupName, pendingGroupEmails.value, isTemporary)\r\n    groupNamingCallback.value(createdGroup)\r\n  }\r\n\r\n  cancelGroupNaming()\r\n}\r\n\r\n// Form data based on Newsletter doctype\r\nconst formData = ref({\r\n  // From section\r\n  sender_name: '',\r\n  sender_email: '',\r\n  send_from: '',\r\n\r\n  // Recipients (will be handled separately)\r\n  email_group: [],\r\n\r\n  // Subject & Content\r\n  subject: '',\r\n  content_type: 'Rich Text',\r\n  message: '',\r\n  message_md: '',\r\n  message_html: '',\r\n\r\n  // Options\r\n  send_unsubscribe_link: true,\r\n  send_webview_link: false,\r\n  published: false,\r\n  route: '',\r\n\r\n  // Scheduling\r\n  schedule_sending: false,\r\n  schedule_send: '',\r\n\r\n  // Campaign\r\n  campaign: '',\r\n\r\n  // Attachments (to be implemented later if needed)\r\n  attachments: []\r\n})\r\n\r\n// Computed properties\r\nconst validEmailCount = computed(() => {\r\n  return emailPills.value.filter(pill => pill.status === 'valid').length\r\n})\r\n\r\nconst invalidEmailCount = computed(() => {\r\n  return emailPills.value.filter(pill => pill.status === 'invalid').length\r\n})\r\n\r\nconst duplicateEmailCount = computed(() => {\r\n  return emailPills.value.filter(pill => pill.status === 'duplicate').length\r\n})\r\n\r\nconst totalRecipientCount = computed(() => {\r\n  const groupEmailCount = selectedGroups.value.reduce((count, group) => count + (group.email_count || 0), 0)\r\n  const validPillCount = validEmailCount.value\r\n  return groupEmailCount + validPillCount\r\n})\r\n\r\n// Watch for content type changes to clear other message fields\r\nwatch(() => formData.value.content_type, (newType, oldType) => {\r\n  if (newType !== 'Rich Text') formData.value.message = ''\r\n  if (newType !== 'Markdown') formData.value.message_md = ''\r\n  if (newType !== 'HTML') formData.value.message_html = ''\r\n})\r\n\r\n// Watch for message changes to sync with Tiptap editor\r\nwatch(() => formData.value.message, (newMessage) => {\r\n  if (editor.value && editor.value.getHTML() !== newMessage) {\r\n    editor.value.commands.setContent(newMessage || '', false)\r\n  }\r\n})\r\n\r\n// Watch sendLater to update schedule_sending\r\nwatch(sendLater, (value) => {\r\n  formData.value.schedule_sending = value\r\n  if (!value) {\r\n    formData.value.schedule_send = ''\r\n  }\r\n})\r\n\r\n// Watch published to generate route\r\nwatch(() => formData.value.published, (isPublished) => {\r\n  if (isPublished && formData.value.subject && !formData.value.route) {\r\n    formData.value.route = `newsletter/${formData.value.subject.toLowerCase().replace(/\\s+/g, '-').replace(/[^a-z0-9-]/g, '')}`\r\n  } else if (!isPublished) {\r\n    formData.value.route = ''\r\n  }\r\n})\r\n\r\n// Methods\r\nconst closeDialog = () => {\r\n  emit('close')\r\n  isDialogOpen.value = false\r\n}\r\n\r\nconst resetForm = () => {\r\n  // Auto-populate sender info with current user\r\n  const currentUser = session.user || 'Administrator'\r\n\r\n  console.log('Resetting form for user:', currentUser)\r\n  console.log('Session object:', session)\r\n\r\n  // Default values - ensure these are NEVER empty\r\n  let userEmail = currentUser.includes('@') ? currentUser : `${currentUser}@yourcompany.com`\r\n  let senderName = currentUser === 'Administrator' ? 'System Administrator' : currentUser\r\n\r\n  console.log('Default sender email:', userEmail)\r\n  console.log('Default sender name:', senderName)\r\n\r\n  // Initialize form with defaults first\r\n  formData.value = {\r\n    sender_name: senderName,\r\n    sender_email: userEmail,  // This MUST have a value\r\n    send_from: senderName,\r\n    email_group: [],\r\n    subject: '',\r\n    content_type: 'Rich Text',\r\n    message: '',\r\n    message_md: '',\r\n    message_html: '',\r\n    send_unsubscribe_link: true,\r\n    send_webview_link: false,\r\n    published: false,\r\n    route: '',\r\n    schedule_sending: false,\r\n    schedule_send: '',\r\n    campaign: '',\r\n    attachments: []\r\n  }\r\n\r\n  console.log('Form initialized with sender_email:', formData.value.sender_email)\r\n\r\n  // Fetch user's actual email from Frappe asynchronously (non-blocking)\r\n  call('frappe.client.get', {\r\n    doctype: 'User',\r\n    name: currentUser\r\n  }).then(userDoc => {\r\n    console.log('Fetched user document:', userDoc)\r\n    if (userDoc && userDoc.email) {\r\n      const realEmail = userDoc.email\r\n      const realName = userDoc.full_name || userDoc.first_name || currentUser\r\n\r\n      console.log('Updating sender email to:', realEmail)\r\n      console.log('Updating sender name to:', realName)\r\n\r\n      formData.value.sender_email = realEmail\r\n      formData.value.sender_name = realName\r\n      formData.value.send_from = realName\r\n\r\n      console.log('Updated form sender_email:', formData.value.sender_email)\r\n    } else {\r\n      console.warn('User document missing email field, keeping default')\r\n    }\r\n  }).catch(error => {\r\n    console.error('Error fetching user email:', error)\r\n    console.log('Keeping default sender email:', formData.value.sender_email)\r\n    // Keep the default values already set - they should NEVER be empty\r\n  })\r\n\r\n  // Clear recipients\r\n  emailPills.value = []\r\n  currentEmailInput.value = ''\r\n  selectedGroups.value = []\r\n  expandedGroups.value = []\r\n  sendLater.value = false\r\n\r\n  // Clear attachments\r\n  attachments.value = []\r\n\r\n  // Clear Tiptap editor\r\n  if (editor.value) {\r\n    editor.value.commands.setContent('', false)\r\n  }\r\n}\r\n\r\nconst handleGroupsSelected = (groups) => {\r\n  selectedGroups.value = groups\r\n  formData.value.email_group = groups.map(group => ({\r\n    email_group: group.name\r\n  }))\r\n}\r\n\r\nconst saveDraft = async () => {\r\n  const proceedWithSave = async (finalGroups) => {\r\n    try {\r\n      isSaving.value = true\r\n\r\n      // Prepare Newsletter document data\r\n      const newsletterData = {\r\n        doctype: 'Newsletter',\r\n        subject: formData.value.subject,\r\n        sender_name: formData.value.sender_name || session.user,\r\n        sender_email: formData.value.sender_email,\r\n        send_from: formData.value.send_from || `${formData.value.sender_name} <${formData.value.sender_email}>`,\r\n        content_type: formData.value.content_type,\r\n        message: formData.value.message || '',\r\n        message_md: formData.value.message_md || '',\r\n        message_html: formData.value.message_html || '',\r\n        send_unsubscribe_link: formData.value.send_unsubscribe_link ? 1 : 0,\r\n        send_webview_link: formData.value.send_webview_link ? 1 : 0,\r\n        published: formData.value.published ? 1 : 0,\r\n        route: formData.value.route || '',\r\n        schedule_sending: formData.value.schedule_sending ? 1 : 0,\r\n        schedule_send: formData.value.schedule_send || null,\r\n        campaign: formData.value.campaign || '',\r\n        email_group: finalGroups.map(group => ({\r\n          email_group: group.name\r\n        })),\r\n      }\r\n\r\n      console.log('Saving Newsletter draft:', newsletterData)\r\n\r\n      // Save Newsletter document using Frappe API\r\n      const result = await call('frappe.client.insert', {\r\n        doc: newsletterData\r\n      })\r\n\r\n      console.log('Newsletter saved:', result)\r\n\r\n      // Emit success event\r\n      emit('email-sent', {\r\n        type: 'success',\r\n        subject: result.subject,\r\n        name: result.name,\r\n        recipientCount: totalRecipientCount.value,\r\n        action: 'draft_saved',\r\n        message: `Newsletter draft \"${result.subject}\" saved successfully!`\r\n      })\r\n\r\n      // Close dialog\r\n      closeDialog()\r\n\r\n    } catch (error) {\r\n      console.error('Error saving newsletter:', error)\r\n\r\n      // Emit error event\r\n      emit('email-sent', {\r\n        type: 'error',\r\n        subject: formData.value.subject,\r\n        name: null,\r\n        recipientCount: 0,\r\n        action: 'draft_save_failed',\r\n        message: `Failed to save newsletter: ${error.message || error}`\r\n      })\r\n    } finally {\r\n      isSaving.value = false\r\n    }\r\n  }\r\n\r\n  try {\r\n    // Validate required fields for Newsletter doctype\r\n    if (!formData.value.subject) {\r\n      throw new Error('Subject is required')\r\n    }\r\n\r\n    if (!formData.value.sender_email) {\r\n      throw new Error('Sender Email is required')\r\n    }\r\n\r\n    // Validate at least one recipient group is selected\r\n    if (selectedGroups.value.length === 0 && validEmailCount.value === 0) {\r\n      throw new Error('At least one email group or recipient is required')\r\n    }\r\n\r\n    const validEmails = emailPills.value\r\n      .filter(pill => pill.status === 'valid')\r\n      .map(pill => pill.address)\r\n\r\n    const hasSelectedGroups = selectedGroups.value.length > 0\r\n    const hasManualEmails = validEmails.length > 0\r\n\r\n    // Scenario 1: Only email groups selected - no prompt needed\r\n    if (hasSelectedGroups && !hasManualEmails) {\r\n      await proceedWithSave(selectedGroups.value)\r\n      return\r\n    }\r\n\r\n    // Scenario 2: Only 1 manual email - create temp group automatically\r\n    if (!hasSelectedGroups && validEmails.length === 1) {\r\n      const tempGroupName = generateTempGroupName()\r\n      const createdGroup = await createEmailGroup(tempGroupName, validEmails, true)\r\n      await proceedWithSave([createdGroup])\r\n      return\r\n    }\r\n\r\n    // Scenario 3: Multiple manual emails OR mix of groups + manual emails - ask for group name\r\n    let emailsToGroup = [...validEmails]\r\n    let message = ''\r\n\r\n    if (hasSelectedGroups && hasManualEmails) {\r\n      // Mix: Include emails from selected groups + manual emails\r\n      selectedGroups.value.forEach(group => {\r\n        if (group.emails) {\r\n          emailsToGroup.push(...group.emails)\r\n        }\r\n      })\r\n      // Remove duplicates\r\n      emailsToGroup = [...new Set(emailsToGroup)]\r\n      message = 'You have selected email groups and added individual emails. Would you like to save all recipients as a new group for future use?'\r\n    } else {\r\n      // Only multiple manual emails\r\n      message = 'Would you like to save these recipients as a group for future use?'\r\n    }\r\n\r\n    showGroupNamingPrompt(emailsToGroup, message, async (createdGroup) => {\r\n      // If mixing with existing groups, use only the newly created group\r\n      // Otherwise use the created group\r\n      const finalGroups = hasSelectedGroups ? [createdGroup] : [createdGroup]\r\n      await proceedWithSave(finalGroups)\r\n    })\r\n\r\n  } catch (error) {\r\n    console.error('Error in save draft:', error)\r\n    alert(`Error: ${error.message || error}`)\r\n    isSaving.value = false\r\n  }\r\n}\r\n\r\nconst sendEmail = async () => {\r\n  const proceedWithSend = async (finalGroups) => {\r\n    try {\r\n      isSubmitting.value = true\r\n\r\n      // Prepare Newsletter document data\r\n      const newsletterData = {\r\n        doctype: 'Newsletter',\r\n        subject: formData.value.subject,\r\n        sender_name: formData.value.sender_name || session.user,\r\n        sender_email: formData.value.sender_email,\r\n        send_from: formData.value.send_from || `${formData.value.sender_name} <${formData.value.sender_email}>`,\r\n        content_type: formData.value.content_type,\r\n        message: formData.value.message || '',\r\n        message_md: formData.value.message_md || '',\r\n        message_html: formData.value.message_html || '',\r\n        send_unsubscribe_link: formData.value.send_unsubscribe_link ? 1 : 0,\r\n        send_webview_link: formData.value.send_webview_link ? 1 : 0,\r\n        published: formData.value.published ? 1 : 0,\r\n        route: formData.value.route || '',\r\n        schedule_sending: formData.value.schedule_sending ? 1 : 0,\r\n        schedule_send: formData.value.schedule_send || null,\r\n        campaign: formData.value.campaign || '',\r\n        email_group: finalGroups.map(group => ({\r\n          email_group: group.name\r\n        })),\r\n      }\r\n\r\n      console.log('Creating Newsletter:', newsletterData)\r\n\r\n      // Step 1: Save Newsletter document using Frappe API\r\n      // Note: Frappe will auto-generate a unique name based on the subject if there's a duplicate\r\n      let savedNewsletter\r\n      try {\r\n        savedNewsletter = await call('frappe.client.insert', {\r\n          doc: newsletterData\r\n        })\r\n      } catch (error) {\r\n        // If duplicate entry error, try with a timestamp suffix\r\n        if (error.message && error.message.includes('DuplicateEntryError')) {\r\n          const timestamp = Date.now()\r\n          newsletterData.subject = `${formData.value.subject} (${timestamp})`\r\n          savedNewsletter = await call('frappe.client.insert', {\r\n            doc: newsletterData\r\n          })\r\n        } else {\r\n          throw error\r\n        }\r\n      }\r\n\r\n      console.log('Newsletter saved:', savedNewsletter)\r\n      console.log('Email groups in newsletter:', finalGroups.map(g => g.name))\r\n\r\n      // Log email group members to verify they exist\r\n      for (const group of finalGroups) {\r\n        console.log(`Checking members for group: ${group.name}`)\r\n        try {\r\n          const members = await call('frappe.client.get_list', {\r\n            doctype: 'Email Group Member',\r\n            fields: ['email', 'email_group', 'unsubscribed'],\r\n            filters: [['email_group', '=', group.name]],\r\n            limit_page_length: 1000\r\n          })\r\n          console.log(`Group ${group.name} has ${members.length} members:`, members)\r\n        } catch (err) {\r\n          console.error(`Error checking members for ${group.name}:`, err)\r\n        }\r\n      }\r\n\r\n      // Step 2: Send the newsletter immediately (or schedule if configured)\r\n      if (formData.value.schedule_sending && formData.value.schedule_send) {\r\n        // Newsletter will be sent at scheduled time\r\n        emit('email-sent', {\r\n          type: 'info',\r\n          subject: savedNewsletter.subject,\r\n          name: savedNewsletter.name,\r\n          recipientCount: totalRecipientCount.value,\r\n          scheduled: true,\r\n          action: 'scheduled',\r\n          message: `Newsletter \"${savedNewsletter.subject}\" scheduled to send at ${formData.value.schedule_send}`\r\n        })\r\n      } else {\r\n        // Send immediately using the Newsletter.send_emails() whitelisted method\r\n        console.log('Sending newsletter:', savedNewsletter.name)\r\n\r\n        // Call send_emails on the saved newsletter using Frappe's run_doc_method API\r\n        // This requires the full document object\r\n        await call('run_doc_method', {\r\n          docs: savedNewsletter,\r\n          method: 'send_emails'\r\n        })\r\n\r\n        // Emit success event\r\n        emit('email-sent', {\r\n          type: 'success',\r\n          subject: savedNewsletter.subject,\r\n          name: savedNewsletter.name,\r\n          recipientCount: totalRecipientCount.value,\r\n          scheduled: false,\r\n          action: 'sent',\r\n          message: `Newsletter \"${savedNewsletter.subject}\" has been queued for sending to ${totalRecipientCount.value} recipients!`\r\n        })\r\n      }\r\n\r\n      // Close dialog and reset form\r\n      closeDialog()\r\n\r\n    } catch (error) {\r\n      console.error('Error sending newsletter:', error)\r\n\r\n      // Emit error event\r\n      emit('email-sent', {\r\n        type: 'error',\r\n        subject: formData.value.subject,\r\n        name: null,\r\n        recipientCount: 0,\r\n        scheduled: false,\r\n        action: 'send_failed',\r\n        message: `Failed to send newsletter: ${error.message || error}`\r\n      })\r\n    } finally {\r\n      isSubmitting.value = false\r\n    }\r\n  }\r\n\r\n  try {\r\n    // Validate required fields for Newsletter doctype\r\n    if (!formData.value.subject) {\r\n      throw new Error('Subject is required')\r\n    }\r\n\r\n    if (!formData.value.sender_email) {\r\n      console.error('Sender email is missing! Current formData:', formData.value)\r\n      throw new Error('Sender Email is required')\r\n    }\r\n\r\n    console.log('Sending email with sender:', formData.value.sender_email)\r\n\r\n    // Validate message content based on type\r\n    const messageField = {\r\n      'Rich Text': 'message',\r\n      'Markdown': 'message_md',\r\n      'HTML': 'message_html'\r\n    }[formData.value.content_type]\r\n\r\n    if (!formData.value[messageField]) {\r\n      throw new Error('Message content is required')\r\n    }\r\n\r\n    // Validate at least one recipient group is selected\r\n    if (selectedGroups.value.length === 0 && validEmailCount.value === 0) {\r\n      throw new Error('At least one email group or recipient is required')\r\n    }\r\n\r\n    const validEmails = emailPills.value\r\n      .filter(pill => pill.status === 'valid')\r\n      .map(pill => pill.address)\r\n\r\n    const hasSelectedGroups = selectedGroups.value.length > 0\r\n    const hasManualEmails = validEmails.length > 0\r\n\r\n    // Scenario 1: Only email groups selected - no prompt needed\r\n    if (hasSelectedGroups && !hasManualEmails) {\r\n      await proceedWithSend(selectedGroups.value)\r\n      return\r\n    }\r\n\r\n    // Scenario 2: Only 1 manual email - create temp group automatically\r\n    if (!hasSelectedGroups && validEmails.length === 1) {\r\n      const tempGroupName = generateTempGroupName()\r\n      const createdGroup = await createEmailGroup(tempGroupName, validEmails, true)\r\n      await proceedWithSend([createdGroup])\r\n      return\r\n    }\r\n\r\n    // Scenario 3: Multiple manual emails OR mix of groups + manual emails - ask for group name\r\n    let emailsToGroup = [...validEmails]\r\n    let message = ''\r\n\r\n    if (hasSelectedGroups && hasManualEmails) {\r\n      // Mix: Include emails from selected groups + manual emails\r\n      selectedGroups.value.forEach(group => {\r\n        if (group.emails) {\r\n          emailsToGroup.push(...group.emails)\r\n        }\r\n      })\r\n      // Remove duplicates\r\n      emailsToGroup = [...new Set(emailsToGroup)]\r\n      message = 'You have selected email groups and added individual emails. Would you like to save all recipients as a new group for future use?'\r\n    } else {\r\n      // Only multiple manual emails\r\n      message = 'Would you like to save these recipients as a group for future use?'\r\n    }\r\n\r\n    showGroupNamingPrompt(emailsToGroup, message, async (createdGroup) => {\r\n      // If mixing with existing groups, use only the newly created group\r\n      const finalGroups = hasSelectedGroups ? [createdGroup] : [createdGroup]\r\n      await proceedWithSend(finalGroups)\r\n    })\r\n\r\n  } catch (error) {\r\n    console.error('Error in send email:', error)\r\n    alert(`Error: ${error.message || error}`)\r\n    isSubmitting.value = false\r\n  }\r\n}\r\n\r\n// Reset form when dialog is opened\r\nwatch(() => props.show, (isOpen) => {\r\n  if (isOpen) {\r\n    resetForm()\r\n  }\r\n})\r\n\r\n// Cleanup editor on component unmount\r\nonBeforeUnmount(() => {\r\n  if (editor.value) {\r\n    editor.value.destroy()\r\n  }\r\n})\r\n</script>\r\n\r\n<style>\r\n/* Tiptap Editor Styles */\r\n.tiptap-editor {\r\n  @apply w-full;\r\n}\r\n\r\n.tiptap-editor .ProseMirror {\r\n  @apply px-3 py-2 focus:outline-none min-h-[200px] max-h-[400px] overflow-y-auto;\r\n}\r\n\r\n.tiptap-editor .ProseMirror:focus {\r\n  @apply outline-none;\r\n}\r\n\r\n/* Placeholder */\r\n.tiptap-editor .ProseMirror p.is-editor-empty:first-child::before {\r\n  content: 'Compose your email message...';\r\n  @apply text-gray-400;\r\n  float: left;\r\n  height: 0;\r\n  pointer-events: none;\r\n}\r\n\r\n/* Typography */\r\n.tiptap-editor .ProseMirror h1 {\r\n  @apply text-2xl font-bold mt-4 mb-2;\r\n}\r\n\r\n.tiptap-editor .ProseMirror h2 {\r\n  @apply text-xl font-bold mt-3 mb-2;\r\n}\r\n\r\n.tiptap-editor .ProseMirror h3 {\r\n  @apply text-lg font-bold mt-2 mb-1;\r\n}\r\n\r\n.tiptap-editor .ProseMirror p {\r\n  @apply my-2;\r\n}\r\n\r\n.tiptap-editor .ProseMirror ul {\r\n  @apply list-disc ml-6 my-2;\r\n}\r\n\r\n.tiptap-editor .ProseMirror ol {\r\n  @apply list-decimal ml-6 my-2;\r\n}\r\n\r\n.tiptap-editor .ProseMirror li {\r\n  @apply my-1;\r\n}\r\n\r\n.tiptap-editor .ProseMirror blockquote {\r\n  @apply border-l-4 border-gray-300 pl-4 italic my-2;\r\n}\r\n\r\n.tiptap-editor .ProseMirror hr {\r\n  @apply my-4 border-t border-gray-300;\r\n}\r\n\r\n.tiptap-editor .ProseMirror strong {\r\n  @apply font-bold;\r\n}\r\n\r\n.tiptap-editor .ProseMirror em {\r\n  @apply italic;\r\n}\r\n\r\n.tiptap-editor .ProseMirror u {\r\n  @apply underline;\r\n}\r\n\r\n.tiptap-editor .ProseMirror s {\r\n  @apply line-through;\r\n}\r\n\r\n.tiptap-editor .ProseMirror code {\r\n  @apply bg-gray-100 px-1 py-0.5 rounded text-sm font-mono;\r\n}\r\n\r\n.tiptap-editor .ProseMirror pre {\r\n  @apply bg-gray-100 p-3 rounded my-2 overflow-x-auto;\r\n}\r\n\r\n.tiptap-editor .ProseMirror pre code {\r\n  @apply bg-transparent p-0;\r\n}\r\n\r\n/* Images with Resize */\r\n.tiptap-editor .ProseMirror img {\r\n  @apply max-w-full h-auto rounded my-2;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n}\r\n\r\n.tiptap-editor .ProseMirror img.ProseMirror-selectednode {\r\n  @apply outline outline-2 outline-blue-500;\r\n}\r\n\r\n/* Image Resize Wrapper */\r\n.tiptap-editor .ProseMirror .image-resizer {\r\n  display: inline-block;\r\n  position: relative;\r\n  line-height: 0;\r\n}\r\n\r\n.tiptap-editor .ProseMirror .image-resizer img {\r\n  display: block;\r\n  margin: 0;\r\n}\r\n\r\n/* Resize Handles */\r\n.tiptap-editor .ProseMirror .image-resizer .resize-trigger {\r\n  position: absolute;\r\n  width: 10px;\r\n  height: 10px;\r\n  background: #3b82f6;\r\n  border: 2px solid white;\r\n  border-radius: 50%;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\r\n  cursor: nwse-resize;\r\n  z-index: 10;\r\n}\r\n\r\n.tiptap-editor .ProseMirror .image-resizer .resize-trigger.right {\r\n  right: -5px;\r\n  bottom: -5px;\r\n}\r\n\r\n.tiptap-editor .ProseMirror .image-resizer .resize-trigger.left {\r\n  left: -5px;\r\n  bottom: -5px;\r\n  cursor: nesw-resize;\r\n}\r\n\r\n.tiptap-editor .ProseMirror .image-resizer .resize-trigger.top-right {\r\n  right: -5px;\r\n  top: -5px;\r\n  cursor: nesw-resize;\r\n}\r\n\r\n.tiptap-editor .ProseMirror .image-resizer .resize-trigger.top-left {\r\n  left: -5px;\r\n  top: -5px;\r\n  cursor: nwse-resize;\r\n}\r\n\r\n/* Resize cursor during drag */\r\n.tiptap-editor .ProseMirror .image-resizer.resizing {\r\n  cursor: nwse-resize;\r\n}\r\n\r\n.tiptap-editor .ProseMirror .image-resizer.resizing img {\r\n  pointer-events: none;\r\n}\r\n\r\n/* Tables */\r\n.tiptap-editor .ProseMirror table {\r\n  @apply border-collapse table-auto w-full my-4;\r\n}\r\n\r\n.tiptap-editor .ProseMirror table td,\r\n.tiptap-editor .ProseMirror table th {\r\n  @apply border border-gray-300 px-3 py-2 text-left min-w-[100px];\r\n  position: relative;\r\n}\r\n\r\n.tiptap-editor .ProseMirror table th {\r\n  @apply bg-gray-100 font-bold;\r\n}\r\n\r\n.tiptap-editor .ProseMirror table .selectedCell {\r\n  @apply bg-blue-50;\r\n}\r\n\r\n.tiptap-editor .ProseMirror table .column-resize-handle {\r\n  position: absolute;\r\n  right: -2px;\r\n  top: 0;\r\n  bottom: 0;\r\n  width: 4px;\r\n  background-color: #3b82f6;\r\n  pointer-events: none;\r\n}\r\n\r\n/* Text Alignment */\r\n.tiptap-editor .ProseMirror [style*=\"text-align: left\"] {\r\n  text-align: left;\r\n}\r\n\r\n.tiptap-editor .ProseMirror [style*=\"text-align: center\"] {\r\n  text-align: center;\r\n}\r\n\r\n.tiptap-editor .ProseMirror [style*=\"text-align: right\"] {\r\n  text-align: right;\r\n}\r\n\r\n.tiptap-editor .ProseMirror [style*=\"text-align: justify\"] {\r\n  text-align: justify;\r\n}\r\n\r\n/* Highlights */\r\n.tiptap-editor .ProseMirror mark {\r\n  @apply px-1 rounded;\r\n}\r\n</style>"],"names":["call","_0","_1","__async","method","args","options","headers","path","res","data","warning","text","e","response","error","exception","errorParts","m","Underline","Mark","style","HTMLAttributes","mergeAttributes","commands","inputRegex","Image","Node","nodeInputRule","match","alt","src","title","ImageResize","element","width","node","editor","getPos","view","editable","$positionContainer","$container","$img","iconStyle","dispatchNodeView","newAttrs","paintPositionContoller","$postionController","$leftController","$centerController","$rightController","justifyContent","key","value","dotsPosition","isResizing","startX","startWidth","startHeight","i","_","index","$dot","onMouseMove","deltaX","aspectRatio","newWidth","newHeight","onMouseUp","$target","containerStyle","newStyle","Color","Extension","_a","attributes","color","chain","FontFamily","fontFamily","pasteRegex","Highlight","markInputRule","markPasteRule","props","__props","emit","__emit","isDialogOpen","computed","searchQuery","ref","isLoading","emailGroups","selectedGroups","groupMembersCache","filteredGroups","query","group","totalSelectedRecipients","total","loadEmailGroups","loadGroupMembers","groupName","emails","member","isGroupSelected","selected","toggleGroup","__spreadProps","__spreadValues","selectGroups","closeDialog","formatDate","dateString","onMounted","watch","isOpen","_openBlock","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_cache","_createVNode","_unref","FeatherIcon","_hoisted_4","_hoisted_5","_hoisted_6","$event","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_Fragment","_renderList","_hoisted_12","_hoisted_13","_hoisted_15","_toDisplayString","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","Button","MAX_FILE_SIZE","isSubmitting","isSaving","showGroupSelector","sendLater","showGroupNamingDialog","newGroupName","groupNameInput","pendingGroupEmails","groupNamingMessage","groupNamingCallback","useEditor","StarterKit","ResizableImageExtension","TextAlign","TextStyle","Table","TableRow","TableHeader","TableCell","formData","imageInput","addImage","url","uploadImage","event","file","reader","showTextColorPicker","showHighlightColorPicker","textColor","highlightColor","applyTextColor","applyHighlight","insertTable","recipientInput","currentEmailInput","emailPills","expandedGroups","attachmentInput","attachments","validateEmail","email","getValidationError","trimmed","parts","part","getDuplicateSource","normalizedEmail","pill","groupEmail","addEmailPill","trimmedEmail","status","reason","duplicateSource","removeEmailPill","handleEmailInputKeydown","handleEmailPaste","handleEmailInputBlur","toggleGroupExpansion","removeGroup","g","expandedIndex","handleFileAttachment","existing","removeAttachment","formatFileSize","bytes","k","sizes","isImageFile","isPDFFile","totalAttachmentSize","generateTempGroupName","createEmailGroup","isTemporary","createdGroup","emailGroupMember","showGroupNamingPrompt","message","callback","cancelGroupNaming","skipGroupNaming","tempGroupName","confirmGroupNaming","validEmailCount","invalidEmailCount","duplicateEmailCount","totalRecipientCount","groupEmailCount","count","validPillCount","newType","oldType","newMessage","isPublished","resetForm","currentUser","session","userEmail","senderName","userDoc","realEmail","realName","handleGroupsSelected","groups","saveDraft","proceedWithSave","finalGroups","newsletterData","result","validEmails","hasSelectedGroups","hasManualEmails","emailsToGroup","sendEmail","proceedWithSend","savedNewsletter","timestamp","members","err","messageField","onBeforeUnmount","_hoisted_11","_withModifiers","_hoisted_14","idx","_normalizeClass","_vModelText","_vModelSelect","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","$refs","_hoisted_35","_hoisted_36","EditorContent","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_vModelCheckbox","_hoisted_55","_hoisted_56","_hoisted_57","_hoisted_58","_hoisted_59","_hoisted_60","_hoisted_61","GroupSelectorDialog","_hoisted_62","_hoisted_63","_hoisted_64","_hoisted_65","_hoisted_66","_hoisted_67","_hoisted_68","_hoisted_69","_hoisted_70","_hoisted_71"],"mappings":"ogCAAe,SAAeA,EAAKC,EAAQC,EAAoB,QAAAC,EAAA,yBAA5BC,EAAQC,EAAMC,EAAU,CAAA,EAAI,CACxDD,IACHA,EAAO,CAAA,GAGT,IAAIE,EAAU,OAAO,OACnB,CACE,OAAQ,mBACR,eAAgB,kCAChB,qBAAsB,OAAO,SAAS,QACvC,EACDD,EAAQ,SAAW,CAAE,CACzB,EAEM,OAAO,YAAc,OAAO,aAAe,qBAC7CC,EAAQ,qBAAqB,EAAI,OAAO,YAG1C,IAAIC,EAAOJ,EAAO,WAAW,GAAG,EAAIA,EAAS,eAAeA,CAAM,GAClE,MAAMK,EAAM,MAAM,MAAMD,EAAM,CAC5B,OAAQ,OACR,QAAAD,EACA,KAAM,KAAK,UAAUF,CAAI,CAC1B,CAAA,EAED,GAAII,EAAI,GAAI,CACV,MAAMC,EAAO,MAAMD,EAAI,KAAI,EAC3B,GAAIC,EAAK,MAAQN,IAAW,QAC1B,OAAOM,EAET,GAAIA,EAAK,IACP,GAAI,CACF,QAAQ,eAAeN,CAAM,EAC7B,QAAQ,IAAI,WAAWA,CAAM,EAAE,EAC/B,QAAQ,IAAI,UAAWC,CAAI,EAC3B,IAAIM,EAAU,KAAK,MAAMD,EAAK,GAAG,EACjC,QAASE,KAAQD,EACf,QAAQ,IAAIC,CAAI,EAElB,QAAQ,SAAQ,CACjB,OAAQC,EAAG,CACV,QAAQ,KAAK,gCAAiCA,CAAC,CACvD,CAEI,OAAOH,EAAK,OAChB,KAAS,CACL,IAAII,EAAW,MAAML,EAAI,KAAI,EACzBM,EAAOC,EACX,GAAI,CACFD,EAAQ,KAAK,MAAMD,CAAQ,CAE5B,OAAQD,EAAG,CAAA,CACZ,IAAII,EAAa,CACf,CAACb,EAAQW,EAAM,SAAUA,EAAM,cAAc,EAAE,OAAO,OAAO,EAAE,KAAK,GAAG,CAC7E,EACI,GAAIA,EAAM,IAAK,CACbC,EAAYD,EAAM,IAClB,GAAI,CACFC,EAAY,KAAK,MAAMA,CAAS,EAAE,CAAC,EACnC,QAAQ,IAAIA,CAAS,CAEtB,OAAQH,EAAG,CAAA,CAClB,CACI,IAAIA,EAAI,IAAI,MAAMI,EAAW,KAAK;AAAA,CAAI,CAAC,EACvC,MAAAJ,EAAE,SAAWE,EAAM,SACnBF,EAAE,IAAMG,EACRH,EAAE,OAASJ,EAAI,OACfI,EAAE,SAAWE,EAAM,iBACf,KAAK,MAAMA,EAAM,gBAAgB,EACjC,CAAA,EACJF,EAAE,SAAWA,EAAE,SAAS,OAAOE,EAAM,OAAO,EAC5CF,EAAE,SAAWA,EAAE,SAAS,IAAKK,GAAM,CACjC,GAAI,CACF,OAAO,KAAK,MAAMA,CAAC,EAAE,OACtB,OAAQH,EAAO,CACd,OAAOG,CACf,CACK,CAAA,EACDL,EAAE,SAAWA,EAAE,SAAS,OAAO,OAAO,EACjCA,EAAE,SAAS,SACdA,EAAE,SAAWE,EAAM,eACf,CAACA,EAAM,cAAc,EACrB,CAAC,uBAAuB,GAG1BT,EAAQ,SACVA,EAAQ,QAAQ,CAAE,SAAUG,EAAK,OAAQA,EAAI,OAAQ,MAAOI,CAAG,CAAA,EAG3DA,CACV,CACA,GCzFA,MAAMM,GAAYC,GAAK,OAAO,CAC1B,KAAM,YACN,YAAa,CACT,MAAO,CACH,eAAgB,CAAE,CAC9B,CACK,EACD,WAAY,CACR,MAAO,CACH,CACI,IAAK,GACR,EACD,CACI,MAAO,kBACP,UAAW,GACX,SAAUC,GAAUA,EAAM,SAAS,WAAW,EAAI,CAAE,EAAG,EAC1D,CACb,CACK,EACD,WAAW,CAAE,eAAAC,GAAkB,CAC3B,MAAO,CAAC,IAAKC,GAAgB,KAAK,QAAQ,eAAgBD,CAAc,EAAG,CAAC,CAC/E,EACD,aAAc,CACV,MAAO,CACH,aAAc,IAAM,CAAC,CAAE,SAAAE,KACZA,EAAS,QAAQ,KAAK,IAAI,EAErC,gBAAiB,IAAM,CAAC,CAAE,SAAAA,KACfA,EAAS,WAAW,KAAK,IAAI,EAExC,eAAgB,IAAM,CAAC,CAAE,SAAAA,KACdA,EAAS,UAAU,KAAK,IAAI,CAEnD,CACK,EACD,sBAAuB,CACnB,MAAO,CACH,QAAS,IAAM,KAAK,OAAO,SAAS,gBAAiB,EACrD,QAAS,IAAM,KAAK,OAAO,SAAS,gBAAiB,CACjE,CACK,CACL,CAAC,ECzCKC,GAAa,2DACbC,GAAQC,GAAK,OAAO,CACtB,KAAM,QACN,YAAa,CACT,MAAO,CACH,OAAQ,GACR,YAAa,GACb,eAAgB,CAAE,CAC9B,CACK,EACD,QAAS,CACL,OAAO,KAAK,QAAQ,MACvB,EACD,OAAQ,CACJ,OAAO,KAAK,QAAQ,OAAS,SAAW,OAC3C,EACD,UAAW,GACX,eAAgB,CACZ,MAAO,CACH,IAAK,CACD,QAAS,IACZ,EACD,IAAK,CACD,QAAS,IACZ,EACD,MAAO,CACH,QAAS,IACZ,CACb,CACK,EACD,WAAY,CACR,MAAO,CACH,CACI,IAAK,KAAK,QAAQ,YACZ,WACA,8BACT,CACb,CACK,EACD,WAAW,CAAE,eAAAL,GAAkB,CAC3B,MAAO,CAAC,MAAOC,GAAgB,KAAK,QAAQ,eAAgBD,CAAc,CAAC,CAC9E,EACD,aAAc,CACV,MAAO,CACH,SAAUhB,GAAW,CAAC,CAAE,SAAAkB,KACbA,EAAS,cAAc,CAC1B,KAAM,KAAK,KACX,MAAOlB,CAC3B,CAAiB,CAEjB,CACK,EACD,eAAgB,CACZ,MAAO,CACHsB,GAAc,CACV,KAAMH,GACN,KAAM,KAAK,KACX,cAAeI,GAAS,CACpB,KAAM,CAAK,CAAA,CAAAC,EAAKC,EAAKC,CAAK,EAAIH,EAC9B,MAAO,CAAE,IAAAE,EAAK,IAAAD,EAAK,MAAAE,EACtB,CACjB,CAAa,CACb,CACK,CACL,CAAC,EChEKC,GAAcP,GAAM,OAAO,CAC7B,eAAgB,CACZ,MAAO,CACH,IAAK,CACD,QAAS,IACZ,EACD,IAAK,CACD,QAAS,IACZ,EACD,MAAO,CACH,QAAS,8CACT,UAAWQ,GAAW,CAClB,MAAMC,EAAQD,EAAQ,aAAa,OAAO,EAC1C,OAAOC,EACD,UAAUA,CAAK,qCACf,GAAGD,EAAQ,MAAM,OAAO,EACjC,CACJ,EACD,MAAO,CACH,QAAS,IACZ,EACD,QAAS,CACL,QAAS,IACZ,EACD,OAAQ,CACJ,QAAS,IACZ,EACD,MAAO,CACH,QAAS,IACZ,EACD,YAAa,CACT,QAAS,IACZ,EACD,OAAQ,CACJ,QAAS,IACZ,EACD,MAAO,CACH,QAAS,IACZ,EACD,MAAO,CACH,QAAS,IACZ,EACD,OAAQ,CACJ,QAAS,IACZ,EACD,eAAgB,CACZ,QAAS,IACZ,EACD,SAAU,CACN,QAAS,IACZ,EACD,SAAU,CACN,QAAS,IACZ,EACD,MAAO,CACH,QAAS,IACZ,EACD,GAAI,CACA,QAAS,IACZ,EACD,KAAM,CACF,QAAS,IACZ,EACD,UAAW,CACP,QAAS,EACZ,EACD,SAAU,CACN,QAAS,IACZ,EACD,aAAc,CACV,QAAS,IACZ,EACD,kBAAmB,CACf,QAAS,IACZ,EACD,mBAAoB,CAChB,QAAS,IACZ,CACJ,CACJ,EACD,aAAc,CACV,MAAO,CAAC,CAAE,KAAAE,EAAM,OAAAC,EAAQ,OAAAC,CAAM,IAAO,CACjC,KAAM,CAAE,KAAAC,EAAM,QAAS,CAAE,SAAAC,CAAQ,CAAK,EAAGH,EACnC,CAAE,MAAAhB,GAAUe,EAAK,MACjBK,EAAqB,SAAS,cAAc,KAAK,EACjDC,EAAa,SAAS,cAAc,KAAK,EACzCC,EAAO,SAAS,cAAc,KAAK,EACnCC,EAAY,8CACZC,EAAmB,IAAM,CAC3B,GAAI,OAAOP,GAAW,WAAY,CAC9B,MAAMQ,EAAW,OAAO,OAAO,OAAO,OAAO,CAAA,EAAIV,EAAK,KAAK,EAAG,CAAE,MAAO,GAAGO,EAAK,MAAM,OAAO,GAAI,EAChGJ,EAAK,SAASA,EAAK,MAAM,GAAG,cAAcD,EAAQ,EAAE,KAAMQ,CAAQ,CAAC,CACvF,CACa,EACKC,EAAyB,IAAM,CACjC,MAAMC,EAAqB,SAAS,cAAc,KAAK,EACjDC,EAAkB,SAAS,cAAc,KAAK,EAC9CC,EAAoB,SAAS,cAAc,KAAK,EAChDC,EAAmB,SAAS,cAAc,KAAK,EACrDH,EAAmB,aAAa,QAAS,sTAAsT,EAC/VC,EAAgB,aAAa,MAAO,6GAA6G,EACjJA,EAAgB,aAAa,QAASL,CAAS,EAC/CM,EAAkB,aAAa,MAAO,+GAA+G,EACrJA,EAAkB,aAAa,QAASN,CAAS,EACjDO,EAAiB,aAAa,MAAO,8GAA8G,EACnJA,EAAiB,aAAa,QAASP,CAAS,EAChDK,EAAgB,iBAAiB,QAAS,IAAM,CAC5CR,EAAmB,aAAa,QAAS,6CAA6C,EACtFE,EAAK,aAAa,QAAS,GAAGA,EAAK,MAAM,OAAO,+BAA+B,EAC/EE,EAAkB,CACtC,CAAiB,EACDK,EAAkB,iBAAiB,QAAS,IAAM,CAC9CT,EAAmB,aAAa,QAAS,yCAAyC,EAClFE,EAAK,aAAa,QAAS,GAAGA,EAAK,MAAM,OAAO,2BAA2B,EAC3EE,EAAkB,CACtC,CAAiB,EACDM,EAAiB,iBAAiB,QAAS,IAAM,CAC7CV,EAAmB,aAAa,QAAS,2CAA2C,EACpFE,EAAK,aAAa,QAAS,GAAGA,EAAK,MAAM,OAAO,6BAA6B,EAC7EE,EAAkB,CACtC,CAAiB,EACDG,EAAmB,YAAYC,CAAe,EAC9CD,EAAmB,YAAYE,CAAiB,EAChDF,EAAmB,YAAYG,CAAgB,EAC/CT,EAAW,YAAYM,CAAkB,CAC5C,EAEDP,EAAmB,YAAYC,CAAU,EACzC,MAAMU,EAAiB/B,EAAM,MAAM,yBAAyB,EAY5D,GAXAoB,EAAmB,aAAa,QAAS,kBAAkBW,EAAiBA,EAAe,CAAC,EAAI,EAAE,EAAE,EAChGA,IACAT,EAAK,UAAY,gBAAgBS,EAAe,CAAC,CAAC,IAEtDV,EAAW,aAAa,QAAS,GAAGrB,CAAK,EAAE,EAC3CqB,EAAW,YAAYC,CAAI,EAC3B,OAAO,QAAQP,EAAK,KAAK,EAAE,QAAQ,CAAC,CAACiB,EAAKC,CAAK,IAAM,CACtBA,GAAU,MAErCX,EAAK,aAAaU,EAAKC,CAAK,CAC5C,CAAa,EACG,CAACd,EACD,MAAO,CAAE,IAAKG,CAAM,EACxB,MAAMY,EAAe,CACjB,8CACA,+CACA,iDACA,iDACH,EACD,IAAIC,EAAa,GACbC,EAAQC,GAAYC,EACxB,OAAAjB,EAAW,iBAAiB,QAAS,IAAM,CAEvC,GAAIA,EAAW,kBAAoB,EAC/B,QAASkB,EAAI,EAAGA,EAAI,EAAGA,IACnBlB,EAAW,YAAYA,EAAW,SAAS,EAGnDK,EAAwB,EACxBL,EAAW,aAAa,QAAS,mDAAmDrB,CAAK,mBAAmB,EAC5G,MAAM,KAAK,CAAE,OAAQ,CAAC,EAAI,CAACwC,EAAGC,IAAU,CACpC,MAAMC,EAAO,SAAS,cAAc,KAAK,EACzCA,EAAK,aAAa,QAAS,iGAAiGR,EAAaO,CAAK,CAAC,EAAE,EACjJC,EAAK,iBAAiB,YAAalD,GAAK,CACpCA,EAAE,eAAgB,EAClB2C,EAAa,GACbC,EAAS5C,EAAE,QACX6C,GAAahB,EAAW,YACxBiB,EAAcjB,EAAW,aACzB,MAAMsB,EAAenD,IAAM,CACvB,GAAI,CAAC2C,EACD,OACJ,MAAMS,GAASH,EAAQ,IAAM,EAAI,EAAEjD,GAAE,QAAU4C,GAAU5C,GAAE,QAAU4C,EAC/DS,GAAcR,GAAaC,EAC3BQ,EAAWT,GAAaO,GACxBG,EAAYD,EAAWD,GAC7BxB,EAAW,MAAM,MAAQyB,EAAW,KACpCzB,EAAW,MAAM,OAAS0B,EAAY,KACtCzB,EAAK,MAAM,MAAQwB,EAAW,KAC9BxB,EAAK,MAAM,OAASyB,EAAY,IACnC,EACKC,GAAY,IAAM,CAChBb,IACAA,EAAa,IAEjBX,EAAkB,EAClB,SAAS,oBAAoB,YAAamB,CAAW,EACrD,SAAS,oBAAoB,UAAWK,EAAS,CACpD,EACD,SAAS,iBAAiB,YAAaL,CAAW,EAClD,SAAS,iBAAiB,UAAWK,EAAS,CACtE,CAAqB,EACD3B,EAAW,YAAYqB,CAAI,CAC/C,CAAiB,CACjB,CAAa,EACD,SAAS,iBAAiB,QAAUlD,GAAM,CACtC,MAAMyD,EAAUzD,EAAE,OAElB,GAAI,EADkB6B,EAAW,SAAS4B,CAAO,GAAKA,EAAQ,MAAM,UAAY1B,GAC5D,CAChB,MAAM2B,EAAiB7B,EAAW,aAAa,OAAO,EAChD8B,EAAWD,GAAmB,KAAoC,OAASA,EAAe,QAAQ,8BAA+B,EAAE,EAEzI,GADA7B,EAAW,aAAa,QAAS8B,CAAQ,EACrC9B,EAAW,kBAAoB,EAC/B,QAASkB,GAAI,EAAGA,GAAI,EAAGA,KACnBlB,EAAW,YAAYA,EAAW,SAAS,CAGvE,CACA,CAAa,EACM,CACH,IAAKD,CACR,CACJ,CACJ,CACL,CAAC,ECpNKgC,GAAQC,GAAU,OAAO,CAC3B,KAAM,QACN,YAAa,CACT,MAAO,CACH,MAAO,CAAC,WAAW,CAC/B,CACK,EACD,qBAAsB,CAClB,MAAO,CACH,CACI,MAAO,KAAK,QAAQ,MACpB,WAAY,CACR,MAAO,CACH,QAAS,KACT,UAAWxC,GAAW,CAAE,IAAIyC,EAAI,OAAQA,EAAKzC,EAAQ,MAAM,SAAW,MAAQyC,IAAO,OAAS,OAASA,EAAG,QAAQ,SAAU,EAAE,CAAI,EAClI,WAAYC,GACHA,EAAW,MAGT,CACH,MAAO,UAAUA,EAAW,KAAK,EACjE,EAJuC,EAMlB,CACJ,CACJ,CACb,CACK,EACD,aAAc,CACV,MAAO,CACH,SAAUC,GAAS,CAAC,CAAE,MAAAC,KACXA,EAAO,EACT,QAAQ,YAAa,CAAE,MAAAD,EAAO,EAC9B,MAET,WAAY,IAAM,CAAC,CAAE,MAAAC,KACVA,EAAO,EACT,QAAQ,YAAa,CAAE,MAAO,IAAI,CAAE,EACpC,qBAAsB,EACtB,KAErB,CACK,CACL,CAAC,EC3CKC,GAAaL,GAAU,OAAO,CAChC,KAAM,aACN,YAAa,CACT,MAAO,CACH,MAAO,CAAC,WAAW,CAC/B,CACK,EACD,qBAAsB,CAClB,MAAO,CACH,CACI,MAAO,KAAK,QAAQ,MACpB,WAAY,CACR,WAAY,CACR,QAAS,KACT,UAAWxC,GAAW,CAAE,IAAIyC,EAAI,OAAQA,EAAKzC,EAAQ,MAAM,cAAgB,MAAQyC,IAAO,OAAS,OAASA,EAAG,QAAQ,SAAU,EAAE,CAAI,EACvI,WAAYC,GACHA,EAAW,WAGT,CACH,MAAO,gBAAgBA,EAAW,UAAU,EAC5E,EAJuC,EAMlB,CACJ,CACJ,CACb,CACK,EACD,aAAc,CACV,MAAO,CACH,cAAeI,GAAc,CAAC,CAAE,MAAAF,KACrBA,EAAO,EACT,QAAQ,YAAa,CAAE,WAAAE,EAAY,EACnC,MAET,gBAAiB,IAAM,CAAC,CAAE,MAAAF,KACfA,EAAO,EACT,QAAQ,YAAa,CAAE,WAAY,IAAI,CAAE,EACzC,qBAAsB,EACtB,KAErB,CACK,CACL,CAAC,EC5CKrD,GAAa,sCACbwD,GAAa,sCACbC,GAAY9D,GAAK,OAAO,CAC1B,KAAM,YACN,YAAa,CACT,MAAO,CACH,WAAY,GACZ,eAAgB,CAAE,CAC9B,CACK,EACD,eAAgB,CACZ,OAAK,KAAK,QAAQ,WAGX,CACH,MAAO,CACH,QAAS,KACT,UAAWc,GAAWA,EAAQ,aAAa,YAAY,GAAKA,EAAQ,MAAM,gBAC1E,WAAY0C,GACHA,EAAW,MAGT,CACH,aAAcA,EAAW,MACzB,MAAO,qBAAqBA,EAAW,KAAK,kBACpE,EAL+B,EAOlB,CACb,EAhBmB,EAiBd,EACD,WAAY,CACR,MAAO,CACH,CACI,IAAK,MACR,CACb,CACK,EACD,WAAW,CAAE,eAAAtD,GAAkB,CAC3B,MAAO,CAAC,OAAQC,GAAgB,KAAK,QAAQ,eAAgBD,CAAc,EAAG,CAAC,CAClF,EACD,aAAc,CACV,MAAO,CACH,aAAcsD,GAAc,CAAC,CAAE,SAAApD,KACpBA,EAAS,QAAQ,KAAK,KAAMoD,CAAU,EAEjD,gBAAiBA,GAAc,CAAC,CAAE,SAAApD,KACvBA,EAAS,WAAW,KAAK,KAAMoD,CAAU,EAEpD,eAAgB,IAAM,CAAC,CAAE,SAAApD,KACdA,EAAS,UAAU,KAAK,IAAI,CAEnD,CACK,EACD,sBAAuB,CACnB,MAAO,CACH,cAAe,IAAM,KAAK,OAAO,SAAS,gBAAiB,CACvE,CACK,EACD,eAAgB,CACZ,MAAO,CACH2D,GAAc,CACV,KAAM1D,GACN,KAAM,KAAK,IAC3B,CAAa,CACb,CACK,EACD,eAAgB,CACZ,MAAO,CACH2D,GAAc,CACV,KAAMH,GACN,KAAM,KAAK,IAC3B,CAAa,CACb,CACK,CACL,CAAC,23CC+CD,MAAMI,EAAQC,EAQRC,EAAOC,EAGPC,EAAeC,EAAS,CAC5B,IAAK,IAAML,EAAM,KACjB,IAAM/B,GAAUiC,EAAK,cAAejC,CAAK,CAC3C,CAAC,EAGKqC,EAAcC,EAAI,EAAE,EACpBC,EAAYD,EAAI,EAAK,EACrBE,EAAcF,EAAI,EAAE,EACpBG,EAAiBH,EAAI,EAAE,EACvBI,EAAoBJ,EAAI,EAAE,EAG1BK,EAAiBP,EAAS,IAAM,CACpC,GAAI,CAACC,EAAY,MACf,OAAOG,EAAY,MAGrB,MAAMI,EAAQP,EAAY,MAAM,YAAa,EAC7C,OAAOG,EAAY,MAAM,OAAOK,GAC9BA,EAAM,KAAK,cAAc,SAASD,CAAK,GACtCC,EAAM,aAAeA,EAAM,YAAY,cAAc,SAASD,CAAK,CACrE,CACH,CAAC,EAEKE,EAA0BV,EAAS,IAChCK,EAAe,MAAM,OAAO,CAACM,EAAOF,IAAUE,GAASF,EAAM,aAAe,GAAI,CAAC,CACzF,EAGKG,EAAkB,IAAYnG,EAAA,sBAClC0F,EAAU,MAAQ,GAClB,GAAI,CACF,QAAQ,IAAI,qCAAqC,EAGjD,MAAM/E,EAAW,MAAMd,EAAK,yBAA0B,CACpD,QAAS,cACT,OAAQ,CAAC,OAAQ,QAAS,oBAAqB,WAAY,UAAU,EACrE,QAAS,CAEP,CAAC,QAAS,WAAY,YAAY,CACnC,EACD,SAAU,gBACV,kBAAmB,GACzB,CAAK,EAED,QAAQ,IAAI,uBAAwBc,CAAQ,EAG5CgF,EAAY,MAAQhF,EAAS,IAAIqF,IAAU,CACzC,KAAMA,EAAM,KACZ,MAAOA,EAAM,OAASA,EAAM,KAC5B,YAAaA,EAAM,mBAAqB,EACxC,YAAa,GACb,SAAUA,EAAM,SAChB,SAAUA,EAAM,SAChB,OAAQ,CAAE,CAChB,EAAM,CAEH,OAAQpF,EAAO,CACd,QAAQ,MAAM,8BAA+BA,CAAK,EAClD+E,EAAY,MAAQ,CAAE,CAC1B,QAAY,CACRD,EAAU,MAAQ,EACnB,CACH,GAEMU,EAA0BC,GAAcrG,EAAA,sBAE5C,GAAI6F,EAAkB,MAAMQ,CAAS,EACnC,OAAOR,EAAkB,MAAMQ,CAAS,EAG1C,GAAI,CACF,QAAQ,IAAI,6BAA8BA,CAAS,EAWnD,MAAMC,GATW,MAAMzG,EAAK,yBAA0B,CACpD,QAAS,qBACT,OAAQ,CAAC,QAAS,aAAa,EAC/B,QAAS,CACP,CAAC,cAAe,IAAKwG,CAAS,CAC/B,EACD,kBAAmB,GACzB,CAAK,GAEuB,IAAIE,GAAUA,EAAO,KAAK,EAGlD,OAAAV,EAAkB,MAAMQ,CAAS,EAAIC,EAE9BA,CACR,OAAQ1F,EAAO,CACd,eAAQ,MAAM,+BAAgCA,CAAK,EAC5C,CAAE,CACV,CACH,GAEM4F,EAAmBR,GAChBJ,EAAe,MAAM,KAAKa,GAAYA,EAAS,OAAST,EAAM,IAAI,EAGrEU,EAAqBV,GAAUhG,EAAA,sBACnC,MAAM2D,EAAQiC,EAAe,MAAM,UAAUa,GAAYA,EAAS,OAAST,EAAM,IAAI,EACrF,GAAIrC,EAAQ,GACViC,EAAe,MAAM,OAAOjC,EAAO,CAAC,MAC/B,CAEL,MAAM2C,EAAS,MAAMF,EAAiBJ,EAAM,IAAI,EAChDJ,EAAe,MAAM,KAAKe,GAAAC,GAAA,GACrBZ,GADqB,CAExB,OAAQM,CACd,EAAK,CACF,CACH,GAEMO,GAAe,IAAM,CACzBzB,EAAK,kBAAmB,CAAC,GAAGQ,EAAe,KAAK,CAAC,EACjDkB,EAAa,CACf,EAEMA,EAAc,IAAM,CACxBxB,EAAa,MAAQ,GAErBM,EAAe,MAAQ,CAAE,EACzBJ,EAAY,MAAQ,EACtB,EAEMuB,EAAcC,GAAe,CACjC,GAAI,CAACA,EAAY,MAAO,MACxB,GAAI,CAEF,OADa,IAAI,KAAKA,CAAU,EACpB,mBAAmB,QAAS,CACtC,KAAM,UACN,MAAO,QACP,IAAK,SACX,CAAK,CACF,OAAQpG,EAAO,CACd,MAAO,cACR,CACH,EAGA,OAAAqG,GAAU,IAAM,CACV/B,EAAM,MACRiB,EAAiB,CAErB,CAAC,EAGDe,GAAM,IAAMhC,EAAM,KAAOiC,GAAW,CAC9BA,GACFhB,EAAiB,CAErB,CAAC,SA/RYb,EAAY,OAAvB8B,IAAAC,EAkHM,MAlHNC,GAkHM,CAhHJC,EAA6E,MAAA,CAAxE,MAAM,uCAAwC,QAAOT,IAG1DS,EA4GM,MA5GNC,GA4GM,CA1GJD,EAKM,MALNE,GAKM,CAJJC,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAH,EAAwE,KAApE,CAAA,MAAM,qCAAqC,EAAC,sBAAmB,EAAA,GACnEA,EAES,SAAA,CAFA,QAAOT,EAAa,MAAM,sCACjCa,EAAwCC,EAAAC,CAAA,EAAA,CAA3B,KAAK,IAAI,MAAM,gBAKhCN,EAuFM,MAvFNO,GAuFM,CAtFRP,EAqFM,MArFNQ,GAqFM,CAnFJR,EAQM,MARNS,GAQM,CAPJL,EAAiFC,EAAAC,CAAA,EAAA,CAApE,KAAK,SAAS,MAAM,kDACjCN,EAKE,QAAA,sCAJS/B,EAAW,MAAAyC,GACpB,KAAK,OACL,YAAY,yBACZ,MAAM,oJAHGzC,EAAW,KAAA,MAQxB+B,EAmDM,MAnDNW,GAmDM,CAlDOxC,EAAS,OAApB0B,EAAA,EAAAC,EAKM,MALNc,GAKMT,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,CAJJH,EAGM,MAAA,CAHD,MAAM,kCAAkC,EAAA,CAC3CA,EAAqF,MAAA,CAAhF,MAAM,mEAAmE,CAAA,IAAO,2BAEvF,WAGczB,EAAA,MAAe,SAAM,GAArCsB,IAAAC,EAIM,MAJNe,GAIM,CAHJT,EAAuEC,EAAAC,CAAA,EAAA,CAA1D,KAAK,QAAQ,MAAM,uCAChCH,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAH,EAA4B,SAAzB,wBAAqB,EAAA,GACxBG,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAH,EAA8E,IAA3E,CAAA,MAAM,cAAc,EAAC,qDAAkD,EAAA,OAG5EH,IAAAC,EAoCM,MApCNgB,GAoCM,QAnCJhB,EAkCMiB,EAAA,KAAAC,GAjCYzC,EAAc,MAAvBE,QADTqB,EAkCM,MAAA,CAhCH,IAAKrB,EAAM,KACZ,MAAM,wDACL,QAAKiC,GAAEvB,EAAYV,CAAK,IAEzBuB,EA2BM,MA3BNiB,GA2BM,CA1BJjB,EAiBM,MAjBNkB,GAiBM,CAhBJlB,EAME,QAAA,CALA,KAAK,WACJ,QAASf,EAAgBR,CAAK,EAC9B,SAAMiC,GAAEvB,EAAYV,CAAK,EACzB,uBAAD,IAAW,CAAA,EAAA,CAAA,MAAA,CAAA,GACX,MAAM,0GAERuB,EAQM,MAAA,KAAA,CAPJA,EAA4E,MAA5EmB,GAA0CC,EAAA3C,EAAM,OAASA,EAAM,IAAI,EAAA,CAAA,EACnEuB,EAEM,MAFNqB,GAEMD,EADD3C,EAAM,gBAAmB,eAC9B,CAAA,EACWA,EAAM,aAAjBoB,EAAA,EAAAC,EAEM,MAFNwB,GACKF,EAAA3C,EAAM,WAAW,EAAA,CAAA,gBAI1BuB,EAOM,MAPNuB,GAOM,CANJvB,EAEM,MAFNwB,GAAmC,eACrBhC,EAAWf,EAAM,QAAQ,CAAA,EAAA,CAAA,EAE5BA,EAAM,WAAaA,EAAM,cAApCqB,EAEM,MAFN2B,GAA4E,gBAC7DjC,EAAWf,EAAM,QAAQ,CAAA,EAAA,CAAA,oCASvCJ,EAAA,MAAe,OAAM,GAAhCwB,IAAAC,EAiBM,MAjBN4B,GAiBM,CAhBJ1B,EAA6F,KAA7F2B,GAA2C,sBAAoBtD,EAAc,MAAC,MAAM,EAAG,IAAC,CAAA,EACxF2B,EASM,MATN4B,GASM,QARJ9B,EAOMiB,EAAA,KAAAC,GANY3C,EAAc,MAAvBI,QADTqB,EAOM,MAAA,CALH,IAAKrB,EAAM,KACZ,MAAM,8CAENuB,EAAkE,OAAlE6B,GAA+BT,EAAA3C,EAAM,OAASA,EAAM,IAAI,EAAA,CAAA,EACxDuB,EAA0E,OAA1E8B,GAA0EV,EAA3C3C,EAAM,gBAAmB,cAAW,CAAA,cAGvEuB,EAIM,MAJN+B,GAIM,CAHJ/B,EAEO,OAFPgC,GAAwC,wBACjBtD,EAAuB,KAAA,EAAA,CAAA,oBAQlDsB,EAOM,MAPNiC,GAOM,CANJ7B,EAESC,EAAA6B,CAAA,EAAA,CAFA,QAAO3C,EAAa,QAAQ,sBAAU,IAE/CY,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,GAF+C,UAE/C,kBACAC,EAESC,EAAA6B,CAAA,EAAA,CAFA,QAAO5C,GAAc,QAAQ,oBAAQ,IAE9Ca,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,GAF8C,QAE9C,qyGCyvBFgC,GAAgB,GAAK,KAAO,iIA3HlC,MAAMxE,EAAQC,EAQRC,EAAOC,EAGPC,EAAeC,EAAS,CAC5B,IAAK,IAAML,EAAM,KACjB,IAAM/B,GAAUiC,EAAK,cAAejC,CAAK,CAC3C,CAAC,EAGKwG,EAAelE,EAAI,EAAK,EACxBmE,EAAWnE,EAAI,EAAK,EACpBoE,EAAoBpE,EAAI,EAAK,EAC7BqE,EAAYrE,EAAI,EAAK,EAGrBsE,EAAwBtE,EAAI,EAAK,EACjCuE,EAAevE,EAAI,EAAE,EACrBwE,EAAiBxE,EAAI,IAAI,EACzByE,EAAqBzE,EAAI,EAAE,EAC3B0E,EAAqB1E,EAAI,EAAE,EAC3B2E,EAAsB3E,EAAI,IAAI,EAG9BvD,EAASmI,GAAU,CACvB,WAAY,CACVC,GACAtJ,GACAuJ,GAAwB,UAAU,CAChC,OAAQ,GACR,YAAa,EACnB,CAAK,EACDC,GAAU,UAAU,CAClB,MAAO,CAAC,UAAW,WAAW,CACpC,CAAK,EACDC,GACAnG,GACAM,GACAG,GAAU,UAAU,CAClB,WAAY,EAClB,CAAK,EACD2F,GAAM,UAAU,CACd,UAAW,EACjB,CAAK,EACDC,GACAC,GACAC,EACD,EACD,QAAS,GACT,YAAa,CACX,WAAY,CACV,MAAO,2GACR,CACF,EACD,SAAU,CAAC,CAAE,OAAA3I,KAAa,CACxB4I,EAAS,MAAM,QAAU5I,EAAO,QAAS,CAC1C,CACH,CAAC,EAGK6I,GAAatF,EAAI,IAAI,EACrBuF,EAAW,IAAM,CACrB,MAAMC,EAAM,OAAO,6CAA6C,EAC5DA,GACF/I,EAAO,MAAM,MAAO,EAAC,MAAO,EAAC,SAAS,CAAE,IAAK+I,EAAK,EAAE,IAAK,CAE7D,EAEMC,EAAeC,GAAU,CAC7B,MAAMC,EAAOD,EAAM,OAAO,MAAM,CAAC,EACjC,GAAIC,GAAQA,EAAK,KAAK,WAAW,QAAQ,EAAG,CAC1C,MAAMC,EAAS,IAAI,WACnBA,EAAO,OAAU3K,GAAM,CACrBwB,EAAO,MAAM,QAAQ,MAAO,EAAC,SAAS,CAAE,IAAKxB,EAAE,OAAO,MAAQ,CAAA,EAAE,IAAK,CACtE,EACD2K,EAAO,cAAcD,CAAI,CAC1B,CACH,EAGME,EAAsB7F,EAAI,EAAK,EAC/B8F,EAA2B9F,EAAI,EAAK,EACpC+F,EAAY/F,EAAI,SAAS,EACzBgG,EAAiBhG,EAAI,SAAS,EAE9BiG,GAAkBhH,GAAU,CAChCxC,EAAO,MAAM,QAAQ,MAAO,EAAC,SAASwC,CAAK,EAAE,IAAK,EAClD4G,EAAoB,MAAQ,EAC9B,EAEMK,GAAkBjH,GAAU,CAChCxC,EAAO,MAAM,MAAK,EAAG,MAAK,EAAG,gBAAgB,CAAE,MAAAwC,EAAO,EAAE,IAAK,EAC7D6G,EAAyB,MAAQ,EACnC,EASMK,GAAc,IAAM,CACxB1J,EAAO,MAAM,MAAK,EAAG,MAAO,EAAC,YAAY,CAAE,KAAM,EAAG,KAAM,EAAG,cAAe,EAAM,CAAA,EAAE,IAAK,CAC3F,EAGM2J,GAAiBpG,EAAI,IAAI,EACzBqG,EAAoBrG,EAAI,EAAE,EAC1BsG,EAAatG,EAAI,EAAE,EACnBG,EAAiBH,EAAI,EAAE,EACvBuG,GAAiBvG,EAAI,EAAE,EAGvBwG,GAAkBxG,EAAI,IAAI,EAC1ByG,EAAczG,EAAI,EAAE,EAIpB0G,GAAiBC,GACF,6BACD,KAAKA,EAAM,KAAI,CAAE,EAI/BC,GAAsBD,GAAU,CACpC,MAAME,EAAUF,EAAM,KAAM,EAE5B,GAAI,CAACE,EACH,MAAO,wBAGT,GAAI,CAACA,EAAQ,SAAS,GAAG,EACvB,MAAO,8BAGT,MAAMC,EAAQD,EAAQ,MAAM,GAAG,EAC/B,OAAIC,EAAM,SAAW,EACZ,uCAGJA,EAAM,CAAC,EAIPA,EAAM,CAAC,EAIPA,EAAM,CAAC,EAAE,SAAS,GAAG,EAINA,EAAM,CAAC,EAAE,MAAM,GAAG,EACtB,KAAKC,GAAQ,CAACA,CAAI,EACzB,+BAGL,KAAK,KAAKF,CAAO,EACZ,8BAGF,uBAZE,gCAJA,mCAJA,qCAqBX,EAsBMG,GAAsBL,GAAU,CACpC,MAAMM,EAAkBN,EAAM,YAAW,EAAG,KAAM,EAOlD,GAJkBL,EAAW,MAAM,UAAUY,GAC3CA,EAAK,QAAQ,YAAW,IAAOD,CAChC,EAEe,GACd,MAAO,yBAIT,UAAW1G,KAASJ,EAAe,MACjC,GAAII,EAAM,QAAUA,EAAM,OAAO,KAAK4G,GACpCA,EAAW,YAAW,IAAOF,CACnC,EACM,MAAO,qBAAqB1G,EAAM,IAAI,GAI1C,OAAO,IACT,EAGM6G,GAAgBT,GAAU,CAC9B,MAAMU,EAAeV,EAAM,KAAM,EACjC,GAAI,CAACU,EAAc,OAEnB,IAAIC,EAAS,QACTC,EAAS,GAGb,GAAI,CAACb,GAAcW,CAAY,EAC7BC,EAAS,UACTC,EAASX,GAAmBS,CAAY,MACnC,CAEL,MAAMG,EAAkBR,GAAmBK,CAAY,EACnDG,IACFF,EAAS,YACTC,EAASC,EAEZ,CAEDlB,EAAW,MAAM,KAAK,CACpB,QAASe,EACT,OAAQC,EACR,OAAQC,CACZ,CAAG,EAEDlB,EAAkB,MAAQ,EAC5B,EAGMoB,GAAmBvJ,GAAU,CACjCoI,EAAW,MAAM,OAAOpI,EAAO,CAAC,CAClC,EAGMwJ,GAA2BhC,GAAU,CACrCA,EAAM,MAAQ,KAAOA,EAAM,MAAQ,SACrCA,EAAM,eAAgB,EACtB0B,GAAaf,EAAkB,KAAK,GAC3BX,EAAM,MAAQ,aAAeW,EAAkB,QAAU,IAAMC,EAAW,MAAM,OAAS,GAElGA,EAAW,MAAM,IAAK,CAE1B,EAGMqB,GAAoBjC,GAAU,OAClCA,EAAM,eAAgB,KACH3G,EAAA2G,EAAM,gBAAN,YAAA3G,EAAqB,QAAQ,UAAW,IAGjC,MAAM,WAAW,EAAE,OAAO9D,GAAKA,EAAE,MAAM,EAE1D,QAAQ0L,GAAS,CACtBS,GAAaT,CAAK,CACtB,CAAG,CACH,EAGMiB,GAAuB,IAAM,CAC7BvB,EAAkB,MAAM,QAC1Be,GAAaf,EAAkB,KAAK,CAExC,EAGMwB,GAAwBjH,GAAc,CAC1C,MAAM1C,EAAQqI,GAAe,MAAM,QAAQ3F,CAAS,EAChD1C,EAAQ,GACVqI,GAAe,MAAM,OAAOrI,EAAO,CAAC,EAEpCqI,GAAe,MAAM,KAAK3F,CAAS,CAEvC,EAGMkH,GAAelH,GAAc,CACjC,MAAM1C,EAAQiC,EAAe,MAAM,UAAU4H,GAAKA,EAAE,OAASnH,CAAS,EACtE,GAAI1C,EAAQ,GAAI,CACdiC,EAAe,MAAM,OAAOjC,EAAO,CAAC,EAEpC,MAAM8J,EAAgBzB,GAAe,MAAM,QAAQ3F,CAAS,EACxDoH,EAAgB,IAClBzB,GAAe,MAAM,OAAOyB,EAAe,CAAC,CAE/C,CAED3C,EAAS,MAAM,YAAclF,EAAe,MAAM,IAAII,IAAU,CAC9D,YAAaA,EAAM,IACvB,EAAI,CACJ,EAGM0H,GAAwBvC,GAAU,CACxB,MAAM,KAAKA,EAAM,OAAO,OAAS,EAAE,EAE3C,QAAQC,GAAQ,CAEpB,GAAIA,EAAK,KAAO1B,GAAe,CAC7B,MAAM,SAAS0B,EAAK,IAAI,uCAAuC,EAC/D,MACD,CAOD,GAJoBc,EAAY,MAAM,KACpCyB,GAAYA,EAAS,OAASvC,EAAK,MAAQuC,EAAS,OAASvC,EAAK,IACnE,EAEgB,CACf,MAAM,SAASA,EAAK,IAAI,wBAAwB,EAChD,MACD,CAGDc,EAAY,MAAM,KAAKd,CAAI,CAC/B,CAAG,EAGGa,GAAgB,QAClBA,GAAgB,MAAM,MAAQ,GAElC,EAEM2B,GAAoBjK,GAAU,CAClCuI,EAAY,MAAM,OAAOvI,EAAO,CAAC,CACnC,EAEMkK,GAAkBC,GAAU,CAChC,GAAIA,IAAU,EAAG,MAAO,UAExB,MAAMC,EAAI,KACJC,EAAQ,CAAC,QAAS,KAAM,KAAM,IAAI,EAClCvK,EAAI,KAAK,MAAM,KAAK,IAAIqK,CAAK,EAAI,KAAK,IAAIC,CAAC,CAAC,EAElD,OAAO,KAAK,MAAOD,EAAQ,KAAK,IAAIC,EAAGtK,CAAC,EAAK,GAAG,EAAI,IAAM,IAAMuK,EAAMvK,CAAC,CACzE,EAEMwK,GAAe7C,GACZA,EAAK,KAAK,WAAW,QAAQ,EAGhC8C,GAAa9C,GACVA,EAAK,OAAS,mBAAqBA,EAAK,KAAK,YAAW,EAAG,SAAS,MAAM,EAG7E+C,GAAsB5I,EAAS,IAC5B2G,EAAY,MAAM,OAAO,CAAChG,EAAOkF,IAASlF,EAAQkF,EAAK,KAAM,CAAC,CACtE,EAGKgD,GAAwB,IAErB,YADc,KAAK,SAAS,SAAS,EAAE,EAAE,UAAU,EAAG,CAAC,CAC/B,GAG3BC,GAAmB,CAAOhI,EAAWC,EAAQgI,EAAc,KAAUtO,EAAA,sBACzE,GAAI,CACF,QAAQ,IAAI,yBAAyBqG,CAAS,GAAIC,CAAM,EAQxD,MAAMiI,EAAe,MAAM1O,EAAK,uBAAwB,CACtD,IANoB,CACpB,QAAS,cACT,MAAOwG,CACR,CAIL,CAAK,EAED,QAAQ,IAAI,uBAAwBkI,CAAY,EAGhD,UAAWnC,KAAS9F,EAAQ,CAC1B,MAAMkI,EAAmB,CACvB,QAAS,qBACT,YAAaD,EAAa,KAC1B,MAAOnC,EACP,aAAc,CACf,EAED,MAAMvM,EAAK,uBAAwB,CACjC,IAAK2O,CACb,CAAO,CACF,CAED,eAAQ,IAAI,SAASlI,EAAO,MAAM,qBAAqBD,CAAS,EAAE,EAE3D,CACL,KAAMkI,EAAa,KACnB,MAAOlI,EACP,YAAaC,EAAO,OACpB,OAAQA,EACR,YAAagI,CACd,CACF,OAAQ1N,EAAO,CACd,cAAQ,MAAM,8BAA+BA,CAAK,EAC5C,IAAI,MAAM,iCAAiCA,EAAM,SAAWA,CAAK,EAAE,CAC1E,CACH,GAEM6N,GAAwB,CAACnI,EAAQoI,EAASC,IAAa,CAC3DzE,EAAmB,MAAQ5D,EAC3B6D,EAAmB,MAAQuE,EAC3BtE,EAAoB,MAAQuE,EAC5B3E,EAAa,MAAQ,GACrBD,EAAsB,MAAQ,GAG9B,WAAW,IAAM,CACXE,EAAe,OACjBA,EAAe,MAAM,MAAO,CAE/B,EAAE,GAAG,CACR,EAEM2E,GAAoB,IAAM,CAC9B7E,EAAsB,MAAQ,GAC9BG,EAAmB,MAAQ,CAAE,EAC7BC,EAAmB,MAAQ,GAC3BC,EAAoB,MAAQ,KAC5BJ,EAAa,MAAQ,EACvB,EAEM6E,GAAkB,IAAY7O,EAAA,sBAGlC,GAFA+J,EAAsB,MAAQ,GAE1BK,EAAoB,MAAO,CAE7B,MAAM0E,EAAgBV,GAAuB,EACvCG,EAAe,MAAMF,GAAiBS,EAAe5E,EAAmB,MAAO,EAAI,EACzFE,EAAoB,MAAMmE,CAAY,CACvC,CAEDK,GAAmB,CACrB,GAEMG,GAAqB,IAAY/O,EAAA,sBAGrC,GAFA+J,EAAsB,MAAQ,GAE1BK,EAAoB,MAAO,CAC7B,MAAM/D,EAAY2D,EAAa,MAAM,KAAI,GAAMoE,GAAuB,EAChEE,EAAc,CAACtE,EAAa,MAAM,KAAM,EACxCuE,EAAe,MAAMF,GAAiBhI,EAAW6D,EAAmB,MAAOoE,CAAW,EAC5FlE,EAAoB,MAAMmE,CAAY,CACvC,CAEDK,GAAmB,CACrB,GAGM9D,EAAWrF,EAAI,CAEnB,YAAa,GACb,aAAc,GACd,UAAW,GAGX,YAAa,CAAE,EAGf,QAAS,GACT,aAAc,YACd,QAAS,GACT,WAAY,GACZ,aAAc,GAGd,sBAAuB,GACvB,kBAAmB,GACnB,UAAW,GACX,MAAO,GAGP,iBAAkB,GAClB,cAAe,GAGf,SAAU,GAGV,YAAa,CAAE,CACjB,CAAC,EAGKuJ,GAAkBzJ,EAAS,IACxBwG,EAAW,MAAM,OAAOY,GAAQA,EAAK,SAAW,OAAO,EAAE,MACjE,EAEKsC,GAAoB1J,EAAS,IAC1BwG,EAAW,MAAM,OAAOY,GAAQA,EAAK,SAAW,SAAS,EAAE,MACnE,EAEKuC,GAAsB3J,EAAS,IAC5BwG,EAAW,MAAM,OAAOY,GAAQA,EAAK,SAAW,WAAW,EAAE,MACrE,EAEKwC,GAAsB5J,EAAS,IAAM,CACzC,MAAM6J,EAAkBxJ,EAAe,MAAM,OAAO,CAACyJ,EAAOrJ,IAAUqJ,GAASrJ,EAAM,aAAe,GAAI,CAAC,EACnGsJ,EAAiBN,GAAgB,MACvC,OAAOI,EAAkBE,CAC3B,CAAC,EAGDpI,GAAM,IAAM4D,EAAS,MAAM,aAAc,CAACyE,EAASC,IAAY,CACzDD,IAAY,cAAazE,EAAS,MAAM,QAAU,IAClDyE,IAAY,aAAYzE,EAAS,MAAM,WAAa,IACpDyE,IAAY,SAAQzE,EAAS,MAAM,aAAe,GACxD,CAAC,EAGD5D,GAAM,IAAM4D,EAAS,MAAM,QAAU2E,GAAe,CAC9CvN,EAAO,OAASA,EAAO,MAAM,QAAS,IAAKuN,GAC7CvN,EAAO,MAAM,SAAS,WAAWuN,GAAc,GAAI,EAAK,CAE5D,CAAC,EAGDvI,GAAM4C,EAAY3G,GAAU,CAC1B2H,EAAS,MAAM,iBAAmB3H,EAC7BA,IACH2H,EAAS,MAAM,cAAgB,GAEnC,CAAC,EAGD5D,GAAM,IAAM4D,EAAS,MAAM,UAAY4E,GAAgB,CACjDA,GAAe5E,EAAS,MAAM,SAAW,CAACA,EAAS,MAAM,MAC3DA,EAAS,MAAM,MAAQ,cAAcA,EAAS,MAAM,QAAQ,YAAa,EAAC,QAAQ,OAAQ,GAAG,EAAE,QAAQ,cAAe,EAAE,CAAC,GAC/G4E,IACV5E,EAAS,MAAM,MAAQ,GAE3B,CAAC,EAGD,MAAMhE,GAAc,IAAM,CACxB1B,EAAK,OAAO,EACZE,EAAa,MAAQ,EACvB,EAEMqK,GAAY,IAAM,CAEtB,MAAMC,EAAcC,GAAQ,MAAQ,gBAEpC,QAAQ,IAAI,2BAA4BD,CAAW,EACnD,QAAQ,IAAI,kBAAmBC,EAAO,EAGtC,IAAIC,EAAYF,EAAY,SAAS,GAAG,EAAIA,EAAc,GAAGA,CAAW,mBACpEG,EAAaH,IAAgB,gBAAkB,uBAAyBA,EAE5E,QAAQ,IAAI,wBAAyBE,CAAS,EAC9C,QAAQ,IAAI,uBAAwBC,CAAU,EAG9CjF,EAAS,MAAQ,CACf,YAAaiF,EACb,aAAcD,EACd,UAAWC,EACX,YAAa,CAAE,EACf,QAAS,GACT,aAAc,YACd,QAAS,GACT,WAAY,GACZ,aAAc,GACd,sBAAuB,GACvB,kBAAmB,GACnB,UAAW,GACX,MAAO,GACP,iBAAkB,GAClB,cAAe,GACf,SAAU,GACV,YAAa,CAAE,CAChB,EAED,QAAQ,IAAI,sCAAuCjF,EAAS,MAAM,YAAY,EAG9EjL,EAAK,oBAAqB,CACxB,QAAS,OACT,KAAM+P,CACV,CAAG,EAAE,KAAKI,GAAW,CAEjB,GADA,QAAQ,IAAI,yBAA0BA,CAAO,EACzCA,GAAWA,EAAQ,MAAO,CAC5B,MAAMC,EAAYD,EAAQ,MACpBE,EAAWF,EAAQ,WAAaA,EAAQ,YAAcJ,EAE5D,QAAQ,IAAI,4BAA6BK,CAAS,EAClD,QAAQ,IAAI,2BAA4BC,CAAQ,EAEhDpF,EAAS,MAAM,aAAemF,EAC9BnF,EAAS,MAAM,YAAcoF,EAC7BpF,EAAS,MAAM,UAAYoF,EAE3B,QAAQ,IAAI,6BAA8BpF,EAAS,MAAM,YAAY,CAC3E,MACM,QAAQ,KAAK,oDAAoD,CAEvE,CAAG,EAAE,MAAMlK,GAAS,CAChB,QAAQ,MAAM,6BAA8BA,CAAK,EACjD,QAAQ,IAAI,gCAAiCkK,EAAS,MAAM,YAAY,CAE5E,CAAG,EAGDiB,EAAW,MAAQ,CAAE,EACrBD,EAAkB,MAAQ,GAC1BlG,EAAe,MAAQ,CAAE,EACzBoG,GAAe,MAAQ,CAAE,EACzBlC,EAAU,MAAQ,GAGlBoC,EAAY,MAAQ,CAAE,EAGlBhK,EAAO,OACTA,EAAO,MAAM,SAAS,WAAW,GAAI,EAAK,CAE9C,EAEMiO,GAAwBC,GAAW,CACvCxK,EAAe,MAAQwK,EACvBtF,EAAS,MAAM,YAAcsF,EAAO,IAAIpK,IAAU,CAChD,YAAaA,EAAM,IACvB,EAAI,CACJ,EAEMqK,GAAY,IAAYrQ,EAAA,sBAC5B,MAAMsQ,EAAyBC,GAAgBvQ,EAAA,sBAC7C,GAAI,CACF4J,EAAS,MAAQ,GAGjB,MAAM4G,EAAiB,CACrB,QAAS,aACT,QAAS1F,EAAS,MAAM,QACxB,YAAaA,EAAS,MAAM,aAAe+E,GAAQ,KACnD,aAAc/E,EAAS,MAAM,aAC7B,UAAWA,EAAS,MAAM,WAAa,GAAGA,EAAS,MAAM,WAAW,KAAKA,EAAS,MAAM,YAAY,IACpG,aAAcA,EAAS,MAAM,aAC7B,QAASA,EAAS,MAAM,SAAW,GACnC,WAAYA,EAAS,MAAM,YAAc,GACzC,aAAcA,EAAS,MAAM,cAAgB,GAC7C,sBAAuBA,EAAS,MAAM,sBAAwB,EAAI,EAClE,kBAAmBA,EAAS,MAAM,kBAAoB,EAAI,EAC1D,UAAWA,EAAS,MAAM,UAAY,EAAI,EAC1C,MAAOA,EAAS,MAAM,OAAS,GAC/B,iBAAkBA,EAAS,MAAM,iBAAmB,EAAI,EACxD,cAAeA,EAAS,MAAM,eAAiB,KAC/C,SAAUA,EAAS,MAAM,UAAY,GACrC,YAAayF,EAAY,IAAIvK,IAAU,CACrC,YAAaA,EAAM,IAC7B,EAAU,CACH,EAED,QAAQ,IAAI,2BAA4BwK,CAAc,EAGtD,MAAMC,EAAS,MAAM5Q,EAAK,uBAAwB,CAChD,IAAK2Q,CACb,CAAO,EAED,QAAQ,IAAI,oBAAqBC,CAAM,EAGvCrL,EAAK,aAAc,CACjB,KAAM,UACN,QAASqL,EAAO,QAChB,KAAMA,EAAO,KACb,eAAgBtB,GAAoB,MACpC,OAAQ,cACR,QAAS,qBAAqBsB,EAAO,OAAO,uBACpD,CAAO,EAGD3J,GAAa,CAEd,OAAQlG,EAAO,CACd,QAAQ,MAAM,2BAA4BA,CAAK,EAG/CwE,EAAK,aAAc,CACjB,KAAM,QACN,QAAS0F,EAAS,MAAM,QACxB,KAAM,KACN,eAAgB,EAChB,OAAQ,oBACR,QAAS,8BAA8BlK,EAAM,SAAWA,CAAK,EACrE,CAAO,CACP,QAAc,CACRgJ,EAAS,MAAQ,EAClB,CACF,GAED,GAAI,CAEF,GAAI,CAACkB,EAAS,MAAM,QAClB,MAAM,IAAI,MAAM,qBAAqB,EAGvC,GAAI,CAACA,EAAS,MAAM,aAClB,MAAM,IAAI,MAAM,0BAA0B,EAI5C,GAAIlF,EAAe,MAAM,SAAW,GAAKoJ,GAAgB,QAAU,EACjE,MAAM,IAAI,MAAM,mDAAmD,EAGrE,MAAM0B,EAAc3E,EAAW,MAC5B,OAAOY,GAAQA,EAAK,SAAW,OAAO,EACtC,IAAIA,GAAQA,EAAK,OAAO,EAErBgE,EAAoB/K,EAAe,MAAM,OAAS,EAClDgL,EAAkBF,EAAY,OAAS,EAG7C,GAAIC,GAAqB,CAACC,EAAiB,CACzC,MAAMN,EAAgB1K,EAAe,KAAK,EAC1C,MACD,CAGD,GAAI,CAAC+K,GAAqBD,EAAY,SAAW,EAAG,CAClD,MAAM5B,EAAgBV,GAAuB,EACvCG,EAAe,MAAMF,GAAiBS,EAAe4B,EAAa,EAAI,EAC5E,MAAMJ,EAAgB,CAAC/B,CAAY,CAAC,EACpC,MACD,CAGD,IAAIsC,EAAgB,CAAC,GAAGH,CAAW,EAC/BhC,EAAU,GAEViC,GAAqBC,GAEvBhL,EAAe,MAAM,QAAQI,GAAS,CAChCA,EAAM,QACR6K,EAAc,KAAK,GAAG7K,EAAM,MAAM,CAE5C,CAAO,EAED6K,EAAgB,CAAC,GAAG,IAAI,IAAIA,CAAa,CAAC,EAC1CnC,EAAU,oIAGVA,EAAU,qEAGZD,GAAsBoC,EAAenC,EAAgBH,GAAiBvO,EAAA,sBAIpE,MAAMsQ,EADcK,EAAoB,CAACpC,CAAY,EAAI,CAACA,CAAY,CACrC,CACvC,EAAK,CAEF,OAAQ3N,EAAO,CACd,QAAQ,MAAM,uBAAwBA,CAAK,EAC3C,MAAM,UAAUA,EAAM,SAAWA,CAAK,EAAE,EACxCgJ,EAAS,MAAQ,EAClB,CACH,GAEMkH,GAAY,IAAY9Q,EAAA,sBAC5B,MAAM+Q,EAAyBR,GAAgBvQ,EAAA,sBAC7C,GAAI,CACF2J,EAAa,MAAQ,GAGrB,MAAM6G,EAAiB,CACrB,QAAS,aACT,QAAS1F,EAAS,MAAM,QACxB,YAAaA,EAAS,MAAM,aAAe+E,GAAQ,KACnD,aAAc/E,EAAS,MAAM,aAC7B,UAAWA,EAAS,MAAM,WAAa,GAAGA,EAAS,MAAM,WAAW,KAAKA,EAAS,MAAM,YAAY,IACpG,aAAcA,EAAS,MAAM,aAC7B,QAASA,EAAS,MAAM,SAAW,GACnC,WAAYA,EAAS,MAAM,YAAc,GACzC,aAAcA,EAAS,MAAM,cAAgB,GAC7C,sBAAuBA,EAAS,MAAM,sBAAwB,EAAI,EAClE,kBAAmBA,EAAS,MAAM,kBAAoB,EAAI,EAC1D,UAAWA,EAAS,MAAM,UAAY,EAAI,EAC1C,MAAOA,EAAS,MAAM,OAAS,GAC/B,iBAAkBA,EAAS,MAAM,iBAAmB,EAAI,EACxD,cAAeA,EAAS,MAAM,eAAiB,KAC/C,SAAUA,EAAS,MAAM,UAAY,GACrC,YAAayF,EAAY,IAAIvK,IAAU,CACrC,YAAaA,EAAM,IAC7B,EAAU,CACH,EAED,QAAQ,IAAI,uBAAwBwK,CAAc,EAIlD,IAAIQ,EACJ,GAAI,CACFA,EAAkB,MAAMnR,EAAK,uBAAwB,CACnD,IAAK2Q,CACf,CAAS,CACF,OAAQ5P,EAAO,CAEd,GAAIA,EAAM,SAAWA,EAAM,QAAQ,SAAS,qBAAqB,EAAG,CAClE,MAAMqQ,EAAY,KAAK,IAAK,EAC5BT,EAAe,QAAU,GAAG1F,EAAS,MAAM,OAAO,KAAKmG,CAAS,IAChED,EAAkB,MAAMnR,EAAK,uBAAwB,CACnD,IAAK2Q,CACjB,CAAW,CACX,KACU,OAAM5P,CAET,CAED,QAAQ,IAAI,oBAAqBoQ,CAAe,EAChD,QAAQ,IAAI,8BAA+BT,EAAY,IAAI/C,GAAKA,EAAE,IAAI,CAAC,EAGvE,UAAWxH,KAASuK,EAAa,CAC/B,QAAQ,IAAI,+BAA+BvK,EAAM,IAAI,EAAE,EACvD,GAAI,CACF,MAAMkL,EAAU,MAAMrR,EAAK,yBAA0B,CACnD,QAAS,qBACT,OAAQ,CAAC,QAAS,cAAe,cAAc,EAC/C,QAAS,CAAC,CAAC,cAAe,IAAKmG,EAAM,IAAI,CAAC,EAC1C,kBAAmB,GAC/B,CAAW,EACD,QAAQ,IAAI,SAASA,EAAM,IAAI,QAAQkL,EAAQ,MAAM,YAAaA,CAAO,CAC1E,OAAQC,EAAK,CACZ,QAAQ,MAAM,8BAA8BnL,EAAM,IAAI,IAAKmL,CAAG,CAC/D,CACF,CAGGrG,EAAS,MAAM,kBAAoBA,EAAS,MAAM,cAEpD1F,EAAK,aAAc,CACjB,KAAM,OACN,QAAS4L,EAAgB,QACzB,KAAMA,EAAgB,KACtB,eAAgB7B,GAAoB,MACpC,UAAW,GACX,OAAQ,YACR,QAAS,eAAe6B,EAAgB,OAAO,0BAA0BlG,EAAS,MAAM,aAAa,EAC/G,CAAS,GAGD,QAAQ,IAAI,sBAAuBkG,EAAgB,IAAI,EAIvD,MAAMnR,EAAK,iBAAkB,CAC3B,KAAMmR,EACN,OAAQ,aAClB,CAAS,EAGD5L,EAAK,aAAc,CACjB,KAAM,UACN,QAAS4L,EAAgB,QACzB,KAAMA,EAAgB,KACtB,eAAgB7B,GAAoB,MACpC,UAAW,GACX,OAAQ,OACR,QAAS,eAAe6B,EAAgB,OAAO,oCAAoC7B,GAAoB,KAAK,cACtH,CAAS,GAIHrI,GAAa,CAEd,OAAQlG,EAAO,CACd,QAAQ,MAAM,4BAA6BA,CAAK,EAGhDwE,EAAK,aAAc,CACjB,KAAM,QACN,QAAS0F,EAAS,MAAM,QACxB,KAAM,KACN,eAAgB,EAChB,UAAW,GACX,OAAQ,cACR,QAAS,8BAA8BlK,EAAM,SAAWA,CAAK,EACrE,CAAO,CACP,QAAc,CACR+I,EAAa,MAAQ,EACtB,CACF,GAED,GAAI,CAEF,GAAI,CAACmB,EAAS,MAAM,QAClB,MAAM,IAAI,MAAM,qBAAqB,EAGvC,GAAI,CAACA,EAAS,MAAM,aAClB,cAAQ,MAAM,6CAA8CA,EAAS,KAAK,EACpE,IAAI,MAAM,0BAA0B,EAG5C,QAAQ,IAAI,6BAA8BA,EAAS,MAAM,YAAY,EAGrE,MAAMsG,EAAe,CACnB,YAAa,UACb,SAAY,aACZ,KAAQ,cACd,EAAMtG,EAAS,MAAM,YAAY,EAE7B,GAAI,CAACA,EAAS,MAAMsG,CAAY,EAC9B,MAAM,IAAI,MAAM,6BAA6B,EAI/C,GAAIxL,EAAe,MAAM,SAAW,GAAKoJ,GAAgB,QAAU,EACjE,MAAM,IAAI,MAAM,mDAAmD,EAGrE,MAAM0B,EAAc3E,EAAW,MAC5B,OAAOY,GAAQA,EAAK,SAAW,OAAO,EACtC,IAAIA,GAAQA,EAAK,OAAO,EAErBgE,EAAoB/K,EAAe,MAAM,OAAS,EAClDgL,EAAkBF,EAAY,OAAS,EAG7C,GAAIC,GAAqB,CAACC,EAAiB,CACzC,MAAMG,EAAgBnL,EAAe,KAAK,EAC1C,MACD,CAGD,GAAI,CAAC+K,GAAqBD,EAAY,SAAW,EAAG,CAClD,MAAM5B,EAAgBV,GAAuB,EACvCG,GAAe,MAAMF,GAAiBS,EAAe4B,EAAa,EAAI,EAC5E,MAAMK,EAAgB,CAACxC,EAAY,CAAC,EACpC,MACD,CAGD,IAAIsC,EAAgB,CAAC,GAAGH,CAAW,EAC/BhC,EAAU,GAEViC,GAAqBC,GAEvBhL,EAAe,MAAM,QAAQI,GAAS,CAChCA,EAAM,QACR6K,EAAc,KAAK,GAAG7K,EAAM,MAAM,CAE5C,CAAO,EAED6K,EAAgB,CAAC,GAAG,IAAI,IAAIA,CAAa,CAAC,EAC1CnC,EAAU,oIAGVA,EAAU,qEAGZD,GAAsBoC,EAAenC,EAAgBH,GAAiBvO,EAAA,sBAGpE,MAAM+Q,EADcJ,EAAoB,CAACpC,CAAY,EAAI,CAACA,CAAY,CACrC,CACvC,EAAK,CAEF,OAAQ3N,EAAO,CACd,QAAQ,MAAM,uBAAwBA,CAAK,EAC3C,MAAM,UAAUA,EAAM,SAAWA,CAAK,EAAE,EACxC+I,EAAa,MAAQ,EACtB,CACH,GAGA,OAAAzC,GAAM,IAAMhC,EAAM,KAAOiC,GAAW,CAC9BA,GACFwI,GAAW,CAEf,CAAC,EAGD0B,GAAgB,IAAM,CAChBnP,EAAO,OACTA,EAAO,MAAM,QAAS,CAE1B,CAAC,wBAntDYoD,EAAY,OAAvB8B,IAAAC,EA8oBM,MA9oBNC,GA8oBM,CA5oBJC,EAA6E,MAAA,CAAxE,MAAM,uCAAwC,QAAOT,KAG1DS,EAwoBM,MAxoBNC,GAwoBM,CAtoBJD,EAKM,MALNE,GAKM,CAJJC,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAH,EAAkE,KAA9D,CAAA,MAAM,qCAAqC,EAAC,gBAAa,EAAA,GAC7DA,EAES,SAAA,CAFA,QAAOT,GAAa,MAAM,sCACjCa,EAAwCC,EAAAC,CAAA,EAAA,CAA3B,KAAK,IAAI,MAAM,gBAKhCN,EA2mBM,MA3mBNO,GA2mBM,CA1mBJP,EAymBM,MAzmBNQ,GAymBM,CAvmBJR,EA4IM,MAAA,KAAA,eA3IJA,EAAkH,QAAA,CAA3G,MAAM,gDAA8C,GAAC,aAAW,EAAAA,EAAmC,OAA7B,CAAA,MAAM,gBAAe,GAAC,QACnGA,EAsIM,MAtINS,GAsIM,CArIJT,EAyHM,MAzHNW,GAyHM,CAvHJX,EAsHM,MAtHNY,GAsHM,CArHJZ,EAwGM,MAxGNa,GAwGM,QAtGJf,EAiDMiB,EAAA,KAAAC,GAhDY3C,EAAc,MAAvBI,QADTqB,EAiDM,MAAA,CA/CH,IAAG,SAAarB,EAAM,KACvB,MAAM,mBAENuB,EAcM,MAAA,CAbJ,MAAM,6IACL,QAAOU,GAAAqF,GAAqBtH,EAAM,IAAI,IAEvC2B,EAA4CC,EAAAC,CAAA,EAAA,CAA/B,KAAK,QAAQ,MAAM,YAChCN,EAAgE,OAAhE+J,GAA6B3I,EAAA3C,EAAM,OAASA,EAAM,IAAI,EAAA,CAAA,EACtDuB,EAAyE,OAAzEiB,GAAoC,MAAIxC,EAAM,aAAW,CAAA,EAAQ,IAAC,CAAA,EAClEuB,EAMS,SAAA,CALP,KAAK,SACJ,QAAYgK,GAAAtJ,GAAAsF,GAAYvH,EAAM,IAAI,EAAA,CAAA,MAAA,CAAA,EACnC,MAAM,8CAEN2B,EAAwCC,EAAAC,CAAA,EAAA,CAA3B,KAAK,IAAI,MAAM,0BAMxBmE,GAAA,MAAe,SAAShG,EAAM,IAAI,GAD1CoB,IAAAC,EA0BM,MA1BNmK,GA0BM,CAtBJjK,EASM,MATNmB,GASM,CARJnB,EAA4F,KAA5FqB,GAA4FD,EAAzC3C,EAAM,OAASA,EAAM,IAAI,EAAG,WAAQ,CAAA,EACvFuB,EAMS,SAAA,CALP,KAAK,SACJ,QAAOU,GAAAqF,GAAqBtH,EAAM,IAAI,EACvC,MAAM,sCAEN2B,EAAwCC,EAAAC,CAAA,EAAA,CAA3B,KAAK,IAAI,MAAM,qBAGhCN,EAWM,MAXNuB,GAWM,EAVJ1B,EAAA,EAAA,EAAAC,EAMMiB,UALoBtC,EAAM,QAAtB,CAAA,EAAA,CAAAoG,EAAOqF,SADjBpK,EAMM,MAAA,CAJH,IAAKoK,EACN,MAAM,wDAEHrF,CAAK,EAAA,CAAA,UAEE,CAAApG,EAAM,QAAUA,EAAM,OAAO,SAAM,OAA/CqB,EAEM,MAFN0B,GAA4F,qBAE5F,qCAMN3B,EAAA,EAAA,EAAAC,EAiDMiB,EAhDqB,KAAAC,GAAAwD,EAAA,MAAjB,CAAAK,EAAOzI,SADjB0D,EAiDM,MAAA,CA/CH,aAAgB1D,EAChB,MAAK+N,EAAA,gFAAsItF,EAAM,SAAM,QAAA,8BAAwEA,EAAM,SAAM,UAAA,0BAAsEA,EAAM,SAAM,YAAA,gCAAA,8BAM7T,MAAOA,EAAM,QAAM,KAGRA,EAAM,SAAM,eAAxB/E,EAAsE,OAAtE4B,GAA6D,IAAE,YACnDmD,EAAM,SAAM,iBAAxB/E,EAA0E,OAA1E6B,GAAkE,GAAC,YACvDkD,EAAM,SAAM,aAAxB/E,EAAqE,OAArE8B,GAA6D,GAAC,YAE9D5B,EAAgC,OAAA,KAAAoB,EAAvByD,EAAM,OAAO,EAAA,CAAA,EACtB7E,EAWS,SAAA,CAVP,KAAK,SACJ,QAAKU,GAAEiF,GAAgBvJ,CAAK,EAC5B,MAAK+N,EAAA,0CAAoGtF,EAAM,SAAM,QAAA,qBAAiEA,EAAM,SAAM,UAAA,mBAAiEA,EAAM,SAAM,YAAA,sBAAA,wBAOhRzE,EAAwCC,EAAAC,CAAA,EAAA,CAA3B,KAAK,IAAI,MAAM,oBAKtBuE,EAAM,YADd/E,EAiBM,MAAA,OAfJ,SAAM,2NAA0N,CAC3L+E,EAAM,SAAM,UAAA,aAA2DA,EAAM,SAAM,YAAA,gBAAA,uBAKrHA,EAAM,MAAM,EAAG,IAElB,CAAA,EAAA7E,EAMO,MAAA,CALL,SAAM,gHAA+G,CAC9E6E,EAAM,SAAM,UAAA,mBAAmEA,EAAM,SAAM,YAAA,sBAAA,kEAU1I7E,EASE,QAAA,SARI,iBAAJ,IAAIsE,wCACKC,EAAiB,MAAA7D,GACzB,UAASkF,GACT,QAAOC,GACP,OAAMC,GACP,KAAK,OACL,YAAY,yCACZ,MAAM,6CANGvB,EAAiB,KAAA,QAUhCnE,EAUSC,EAAA6B,CAAA,EAAA,CATN,uBAAOI,EAAiB,MAAA,IACzB,QAAQ,UACR,KAAK,KACL,MAAM,SAEK,SACT,IAA4C,CAA5ClC,EAA4CC,EAAAC,CAAA,EAAA,CAA/B,KAAK,QAAQ,MAAM,wBACvB,IAEb,iBAFa,gBAEb,qBAEFN,EAEI,IAFJ8B,GAAsC,sBACfV,EAAAwG,GAAA,KAAmB,EAAG,KAAExG,EAAGqG,QAAe,EAAG,aAAWC,GAAiB,KAAA,EAAG,aAAatG,EAAAuG,GAAA,KAAmB,EAAG,gBACtI,CAAA,IAIF3H,EASM,MAAA,KAAA,eARJA,EAA+G,QAAA,CAAxG,MAAM,gDAA8C,GAAC,UAAQ,EAAAA,EAAmC,OAA7B,CAAA,MAAM,gBAAe,GAAC,UAChGA,EAME,QAAA,CALS,sBAAAG,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAO,GAAA6C,EAAA,MAAS,QAAO7C,GACzB,KAAK,OACL,YAAY,sBACZ,MAAM,+HACN,SAAA,eAJS,CAAA0J,EAAA7G,EAAA,MAAS,OAAO,MAS7BvD,EAUM,MAAA,KAAA,CATJG,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAH,EAAgF,QAAzE,CAAA,MAAM,8CAA8C,EAAC,eAAY,EAAA,KACxEA,EAOS,SAAA,CANE,sBAAAG,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAO,GAAA6C,EAAA,MAAS,aAAY7C,GAC9B,MAAM,+IAENV,EAA4C,SAApC,CAAA,MAAM,WAAW,EAAC,YAAS,EAAA,EACnCA,EAA0C,SAAlC,CAAA,MAAM,UAAU,EAAC,WAAQ,EAAA,EACjCA,EAAkC,SAA1B,CAAA,MAAM,QAAO,OAAI,EAAA,UALhB,CAAAqK,GAAA9G,EAAA,MAAS,YAAY,MAUlCvD,EA4TM,MAAA,KAAA,eA3TJA,EAA+G,QAAA,CAAxG,MAAM,gDAA8C,GAAC,UAAQ,EAAAA,EAAmC,OAA7B,CAAA,MAAM,gBAAe,GAAC,QAGrFuD,EAAA,MAAS,eAAY,aAAhC1D,IAAAC,EAmSM,MAnSNiC,GAmSM,CAjSO1B,EAAM1F,CAAA,GAAjBkF,IAAAC,EA6RM,MA7RNkC,GA6RM,CA3RJhC,EA6FM,MA7FNiC,GA6FM,CA5FJjC,EAQS,SAAA,CAPP,KAAK,SACJ,QAAKG,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAO,GAAEL,KAAO,MAAK,EAAG,MAAK,EAAG,WAAU,EAAG,IAAG,GAC9C,MAAwB8J,EAAA,CAAA,CAAA,cAAA9J,EAAA1F,CAAA,EAAO,kBAC1B,8EAA8E,CAAA,EACpF,MAAM,iBACP,MAED,CAAA,EACAqF,EAQS,SAAA,CAPP,KAAK,SACJ,QAAKG,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAO,GAAEL,KAAO,MAAK,EAAG,MAAK,EAAG,aAAY,EAAG,IAAG,GAChD,MAAwB8J,EAAA,CAAA,CAAA,cAAA9J,EAAA1F,CAAA,EAAO,oBAC1B,2EAA2E,CAAA,EACjF,MAAM,mBACP,MAED,CAAA,EACAqF,EAQS,SAAA,CAPP,KAAK,SACJ,QAAKG,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAO,GAAEL,KAAO,MAAK,EAAG,MAAK,EAAG,gBAAe,EAAG,IAAG,GACnD,MAAwB8J,EAAA,CAAA,CAAA,cAAA9J,EAAA1F,CAAA,EAAO,uBAC1B,8EAA8E,CAAA,EACpF,MAAM,sBACP,MAED,CAAA,EACAqF,EAQS,SAAA,CAPP,KAAK,SACJ,QAAKG,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAO,GAAEL,KAAO,MAAK,EAAG,MAAK,EAAG,aAAY,EAAG,IAAG,GAChD,MAAwB8J,EAAA,CAAA,CAAA,cAAA9J,EAAA1F,CAAA,EAAO,oBAC1B,iFAAiF,CAAA,EACvF,MAAM,iBACP,MAED,CAAA,gBAEAqF,EAAiD,MAAA,CAA5C,MAAM,+BAA+B,EAAA,KAAA,EAAA,GAG1CA,EAwBM,MAxBNsK,GAwBM,CAvBJtK,EAQS,SAAA,CAPP,KAAK,SACJ,QAAKG,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAAO,GAAEqD,EAAmB,MAAA,CAAIA,EAAmB,OAClD,MAAM,6FACN,MAAM,+BACP,KAEC,EAAA/D,EAAwC,OAAA,CAAlC,MAAM,oBAAoB,EAAA,KAAA,EAAA,KAEvB+D,EAAmB,OAA9BlE,IAAAC,EAaM,MAbNyK,GAaM,GAZJvK,EAKE,QAAA,CAJA,KAAK,6CACIiE,EAAS,MAAAvD,GACjB,SAAMP,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAO,GAAEyD,GAAeF,EAAS,KAAA,GACjC,MAAM,0BAFGA,EAAS,KAAA,IAIpBjE,EAKS,SAAA,CAJN,QAAKG,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAO,GAAA,CAAEL,EAAM1F,CAAA,EAAC,QAAQ,QAAQ,aAAa,IAAG,EAAIoJ,EAAmB,MAAA,EAAA,GACtE,MAAM,uEACP,SAED,gBAKJ/D,EAwBM,MAxBNwK,GAwBM,CAvBJxK,EAQS,SAAA,CAPP,KAAK,SACJ,QAAKG,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAO,GAAEsD,EAAwB,MAAA,CAAIA,EAAwB,OAC3D,MAAwBmG,EAAA,CAAA,CAAA,cAAA9J,EAAA1F,CAAA,EAAO,uBAC1B,oEAAoE,CAAA,EAC1E,MAAM,aACP,OAED,CAAA,EACWqJ,EAAwB,OAAnCnE,IAAAC,EAaM,MAbN2K,GAaM,GAZJzK,EAKE,QAAA,CAJA,KAAK,+CACIkE,EAAc,MAAAxD,GACtB,SAAMP,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAO,GAAE0D,GAAeF,EAAc,KAAA,GACtC,MAAM,0BAFGA,EAAc,KAAA,IAIzBlE,EAKS,SAAA,CAJN,QAAKG,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAO,GAAA,CAAEL,EAAM1F,CAAA,EAAC,QAAQ,QAAQ,iBAAiB,IAAG,EAAIqJ,EAAwB,MAAA,EAAA,GAC/E,MAAM,uEACP,SAED,kBAMNhE,EA6EM,MA7EN0K,GA6EM,CA5EJ1K,EAQS,SAAA,CAPP,KAAK,SACJ,QAAKG,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAO,GAAEL,KAAO,QAAQ,MAAK,EAAG,cAAa,CAAA,MAAA,CAAA,CAAA,EAAe,IAAG,GAC7D,MAAwB8J,EAAA,CAAA,CAAA,cAAA9J,EAAA1F,CAAA,EAAO,+BAC1B,8EAA8E,CAAA,EACpF,MAAM,aACP,OAED,CAAA,EACAqF,EAQS,SAAA,CAPP,KAAK,SACJ,QAAKG,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAO,GAAEL,KAAO,QAAQ,MAAK,EAAG,cAAa,CAAA,MAAA,CAAA,CAAA,EAAe,IAAG,GAC7D,MAAwB8J,EAAA,CAAA,CAAA,cAAA9J,EAAA1F,CAAA,EAAO,+BAC1B,8EAA8E,CAAA,EACpF,MAAM,aACP,OAED,CAAA,EACAqF,EAQS,SAAA,CAPP,KAAK,SACJ,QAAKG,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAO,GAAEL,KAAO,QAAQ,MAAK,EAAG,cAAa,CAAA,MAAA,CAAA,CAAA,EAAe,IAAG,GAC7D,MAAwB8J,EAAA,CAAA,CAAA,cAAA9J,EAAA1F,CAAA,EAAO,+BAC1B,8EAA8E,CAAA,EACpF,MAAM,aACP,OAED,CAAA,EACAqF,EAQS,SAAA,CAPP,KAAK,SACJ,QAAKG,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAO,GAAEL,KAAO,MAAK,EAAG,MAAK,EAAG,aAAY,EAAG,IAAG,GAChD,MAAwB8J,EAAA,CAAA,CAAA,cAAA9J,EAAA1F,CAAA,EAAO,uBAC1B,oEAAoE,CAAA,EAC1E,MAAM,aACP,MAED,CAAA,gBAEAqF,EAAiD,MAAA,CAA5C,MAAM,+BAA+B,EAAA,KAAA,EAAA,GAG1CA,EAQS,SAAA,CAPP,KAAK,SACJ,QAAKG,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAO,GAAEL,KAAO,QAAQ,MAAK,EAAG,aAAY,MAAA,EAAS,IAAG,GACtD,MAAwB8J,EAAA,CAAA,CAAA,cAAA9J,EAAA1F,CAAA,EAAO,8BAC1B,oEAAoE,CAAA,EAC1E,MAAM,cACP,MAED,CAAA,EACAqF,EAQS,SAAA,CAPP,KAAK,SACJ,QAAKG,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAO,GAAEL,KAAO,QAAQ,MAAK,EAAG,aAAY,QAAA,EAAW,IAAG,GACxD,MAAwB8J,EAAA,CAAA,CAAA,cAAA9J,EAAA1F,CAAA,EAAO,gCAC1B,oEAAoE,CAAA,EAC1E,MAAM,gBACP,MAED,CAAA,EACAqF,EAQS,SAAA,CAPP,KAAK,SACJ,QAAKG,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAO,GAAEL,KAAO,QAAQ,MAAK,EAAG,aAAY,OAAA,EAAU,IAAG,GACvD,MAAwB8J,EAAA,CAAA,CAAA,cAAA9J,EAAA1F,CAAA,EAAO,+BAC1B,oEAAoE,CAAA,EAC1E,MAAM,eACP,MAED,CAAA,EACAqF,EAQS,SAAA,CAPP,KAAK,SACJ,QAAKG,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAO,GAAEL,KAAO,QAAQ,MAAK,EAAG,aAAY,SAAA,EAAY,IAAG,GACzD,MAAwB8J,EAAA,CAAA,CAAA,cAAA9J,EAAA1F,CAAA,EAAO,iCAC1B,oEAAoE,CAAA,EAC1E,MAAM,WACP,MAED,CAAA,IAIFqF,EA0GM,MA1GN2K,GA0GM,CAzGJ3K,EAQS,SAAA,CAPP,KAAK,SACJ,QAAKG,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAO,GAAEL,KAAO,MAAK,EAAG,MAAK,EAAG,iBAAgB,EAAG,IAAG,GACpD,MAAwB8J,EAAA,CAAA,CAAA,cAAA9J,EAAA1F,CAAA,EAAO,wBAC1B,oEAAoE,CAAA,EAC1E,MAAM,eACP,MAED,CAAA,EACAqF,EAQS,SAAA,CAPP,KAAK,SACJ,QAAKG,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAO,GAAEL,KAAO,MAAK,EAAG,MAAK,EAAG,kBAAiB,EAAG,IAAG,GACrD,MAAwB8J,EAAA,CAAA,CAAA,cAAA9J,EAAA1F,CAAA,EAAO,yBAC1B,oEAAoE,CAAA,EAC1E,MAAM,iBACP,OAED,CAAA,EACAqF,EAQS,SAAA,CAPP,KAAK,SACJ,QAAKG,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAO,GAAEL,KAAO,MAAK,EAAG,MAAK,EAAG,iBAAgB,EAAG,IAAG,GACpD,MAAwB8J,EAAA,CAAA,CAAA,cAAA9J,EAAA1F,CAAA,EAAO,wBAC1B,oEAAoE,CAAA,EAC1E,MAAM,SACP,MAED,CAAA,EACAqF,EAQS,SAAA,CAPP,KAAK,SACJ,QAAKG,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAO,GAAEL,KAAO,MAAK,EAAG,MAAK,EAAG,gBAAe,EAAG,IAAG,GACnD,MAAwB8J,EAAA,CAAA,CAAA,cAAA9J,EAAA1F,CAAA,EAAO,uBAC1B,8EAA8E,CAAA,EACpF,MAAM,cACP,QAED,CAAA,gBAEAqF,EAAiD,MAAA,CAA5C,MAAM,+BAA+B,EAAA,KAAA,EAAA,GAG1CA,EAOS,SAAA,CANP,KAAK,SACJ,QAAO4K,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,MAAM,WAAW,MAAK,GAC9B,MAAM,qEACN,MAAM,gBACP,MAED,EACA5K,EAME,QAAA,SALI,aAAJ,IAAIwD,GACJ,KAAK,OACL,OAAO,UACN,SAAQG,EACT,MAAM,oBAER3D,EAOS,SAAA,CANP,KAAK,SACJ,QAAOyD,EACR,MAAM,qEACN,MAAM,oBACP,OAED,EAGAzD,EAOS,SAAA,CANP,KAAK,SACJ,QAAOqE,GACR,MAAM,qEACN,MAAM,gBACP,KAED,gBAEArE,EAAiD,MAAA,CAA5C,MAAM,+BAA+B,EAAA,KAAA,EAAA,GAE1CA,EAOS,SAAA,CANP,KAAK,SACJ,QAAKG,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAO,GAAEL,KAAO,MAAK,EAAG,MAAK,EAAG,kBAAiB,EAAG,IAAG,GACtD,MAAM,qEACN,MAAM,mBACP,KAED,gBAEAL,EAAiD,MAAA,CAA5C,MAAM,+BAA+B,EAAA,KAAA,EAAA,GAE1CA,EAQS,SAAA,CAPP,KAAK,SACJ,QAAKG,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAO,GAAEL,KAAO,MAAK,EAAG,MAAK,EAAG,KAAI,EAAG,IAAG,GACxC,SAAW,CAAAA,EAAA1F,CAAA,EAAO,IAAG,EAAG,KAAI,EAC7B,MAAM,qHACN,MAAM,QACP,MAED,EAAAkQ,EAAA,EACA7K,EAQS,SAAA,CAPP,KAAK,SACJ,QAAKG,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAO,GAAEL,KAAO,MAAK,EAAG,MAAK,EAAG,KAAI,EAAG,IAAG,GACxC,SAAW,CAAAA,EAAA1F,CAAA,EAAO,IAAG,EAAG,KAAI,EAC7B,MAAM,qHACN,MAAM,QACP,MAED,EAAAmQ,EAAA,gBAKJ1K,EAAwDC,EAAA0K,EAAA,EAAA,CAAxC,OAAQ1K,EAAM1F,CAAA,EAAE,MAAM,uCAIxB4I,EAAA,MAAS,eAAY,gBAArCzD,EAOM,MAAAkL,GAAA,GANJhL,EAKY,WAAA,CAJD,sBAAAG,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAO,GAAA6C,EAAA,MAAS,WAAU7C,GAC5B,YAAY,4CACZ,KAAK,KACL,MAAM,6JAHG,CAAA0J,EAAA7G,EAAA,MAAS,UAAU,OAQhBA,EAAA,MAAS,eAAY,YAArCzD,EAOM,MAAAmL,GAAA,GANJjL,EAKY,WAAA,CAJD,sBAAAG,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAO,GAAA6C,EAAA,MAAS,aAAY7C,GAC9B,YAAY,wCACZ,KAAK,KACL,MAAM,6JAHG,CAAA0J,EAAA7G,EAAA,MAAS,YAAY,kBASpCvD,EAsEM,MAAA,KAAA,CArEJG,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAH,EAA+E,QAAxE,CAAA,MAAM,8CAA8C,EAAC,cAAW,EAAA,GACvEA,EAmEM,MAnENkL,GAmEM,CAjEOvG,EAAA,MAAY,OAAM,GAA7B9E,IAAAC,EAmCM,MAnCNqL,GAmCM,EAlCJtL,EAAA,EAAA,EAAAC,EAiCMiB,EAhCoB,KAAAC,GAAA2D,EAAA,MAAhB,CAAAd,EAAMzH,SADhB0D,EAiCM,MAAA,CA/BH,kBAAqB1D,EACtB,MAAM,mIAGN4D,EAUM,MAVNoL,GAUM,CATO1E,GAAY7C,CAAI,GAA3BhE,EAAA,EAAAC,EAEM,MAFNuL,GAEMlL,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAA,CADJH,EAAsO,OAAA,CAAhO,iBAAe,QAAQ,kBAAgB,QAAQ,eAAa,IAAI,EAAE,0KAE1D2G,GAAU9C,CAAI,GAA9BhE,EAAA,EAAAC,EAEM,MAFNwL,GAEMnL,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAA,CADJH,EAAuL,OAAA,CAAjL,iBAAe,QAAQ,kBAAgB,QAAQ,eAAa,IAAI,EAAE,4HAE1EH,EAAA,EAAAC,EAEM,MAFNyL,GAEMpL,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAA,CADJH,EAAiM,OAAA,CAA3L,iBAAe,QAAQ,kBAAgB,QAAQ,eAAa,IAAI,EAAE,uIAK5EA,EAGM,MAHNwL,GAGM,CAFJxL,EAAqE,MAArEyL,GAAmDrK,EAAAyC,EAAK,IAAI,EAAA,CAAA,EAC5D7D,EAAwE,MAAxE0L,GAAwEtK,EAAlCkF,GAAezC,EAAK,IAAI,CAAA,EAAA,CAAA,IAIhE7D,EAOS,SAAA,CANP,KAAK,SACJ,QAAKU,GAAE2F,GAAiBjK,CAAK,EAC9B,MAAM,mEACN,MAAM,sBAENgE,EAAwCC,EAAAC,CAAA,EAAA,CAA3B,KAAK,IAAI,MAAM,yCAMlCN,EAqBM,MArBN2L,GAqBM,CApBJ3L,EAME,QAAA,SALI,kBAAJ,IAAI0E,GACJ,KAAK,OACL,SAAA,GACC,SAAQyB,GACT,MAAM,oBAER/F,EASSC,EAAA6B,CAAA,EAAA,CARN,QAAO0I,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,MAAM,gBAAgB,MAAK,GACnC,QAAQ,UACR,KAAK,OAEM,SACT,IAAgD,CAAhDxK,EAAgDC,EAAAC,CAAA,EAAA,CAAnC,KAAK,YAAY,MAAM,wBAC3B,IAEb,iBAFa,mBAEb,mBACYqE,EAAA,MAAY,OAAM,GAA9B9E,IAAAC,EAEO,OAFP8L,GAEOxK,EADFuD,QAAY,MAAM,EAAG,QAAKvD,EAAGuD,QAAY,mBAA0B,KAAEvD,EAAGkF,GAAeM,GAAA,KAAmB,GAAI,KACnH,CAAA,cAIFzG,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAH,EAEI,IAFD,CAAA,MAAM,4BAA4B,EAAC,gFAEtC,EAAA,OAKJA,EAgCM,MAhCN6L,GAgCM,CA/BJ1L,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAH,EAAqE,KAAjE,CAAA,MAAM,wCAAwC,EAAC,gBAAa,EAAA,GAChEA,EA6BM,MA7BN8L,GA6BM,CA5BJ9L,EAaM,MAbN+L,GAaM,CAZJ/L,EAGQ,QAHRgM,GAGQ,GAFNhM,EAA+E,QAAA,CAAxE,KAAK,WAAoB,sBAAAG,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAO,GAAA6C,EAAA,MAAS,sBAAqB7C,GAAE,MAAM,mBAAtC,CAAAuL,GAAA1I,EAAA,MAAS,qBAAqB,IAC9DpD,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAH,EAAgE,OAA1D,CAAA,MAAM,uBAAuB,EAAC,wBAAqB,EAAA,OAW7DA,EAaM,MAbNkM,GAaM,CAZJlM,EAGQ,QAHRmM,GAGQ,GAFNnM,EAA0D,QAAA,CAAnD,KAAK,kDAAoBuC,EAAS,MAAA7B,GAAE,MAAM,uBAAjB6B,EAAS,KAAA,IACzCpC,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAH,EAA2E,OAArE,CAAA,MAAM,uBAAuB,EAAC,mCAAgC,EAAA,KAE3DuC,EAAS,WAApBzC,EAOM,MAAAsM,GAAA,CANJjM,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAH,EAAiF,QAA1E,CAAA,MAAM,8CAA8C,EAAC,gBAAa,EAAA,KACzEA,EAIE,QAAA,CAHS,sBAAAG,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAO,GAAA6C,EAAA,MAAS,cAAa7C,GAC/B,KAAK,iBACL,MAAM,2IAFG,CAAA0J,EAAA7G,EAAA,MAAS,aAAa,sBAUzCvD,EAmBM,MAnBNqM,GAmBM,CAlBJrM,EAQM,MAAA,KAAA,CAPJG,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAH,EAAuF,QAAhF,CAAA,MAAM,8CAA8C,EAAC,sBAAmB,EAAA,KAC/EA,EAKE,QAAA,CAJS,sBAAAG,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAO,GAAA6C,EAAA,MAAS,SAAQ7C,GAC1B,KAAK,OACL,YAAY,sBACZ,MAAM,2IAHG,CAAA0J,EAAA7G,EAAA,MAAS,QAAQ,MAMnBA,EAAA,MAAS,eAApBzD,EAQM,MAAAwM,GAAA,CAPJnM,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAH,EAAyE,QAAlE,CAAA,MAAM,8CAA8C,EAAC,QAAK,EAAA,KACjEA,EAKE,QAAA,CAJS,sBAAAG,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAO,GAAA6C,EAAA,MAAS,MAAK7C,GACvB,KAAK,OACL,YAAY,iCACZ,MAAM,2IAHG,CAAA0J,EAAA7G,EAAA,MAAS,KAAK,sBAWjCvD,EAeM,MAfNuM,GAeM,CAdJnM,EAESC,EAAA6B,CAAA,EAAA,CAFA,QAAO3C,GAAa,QAAQ,sBAAU,IAE/CY,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAA,GAF+C,UAE/C,mBACAH,EAUM,MAVNwM,GAUM,CATJpM,EAKSC,EAAA6B,CAAA,EAAA,CALA,QAAO4G,GAAW,QAAQ,UAAW,QAASzG,EAAQ,QAClD,SACT,IAA2C,CAA3CjC,EAA2CC,EAAAC,CAAA,EAAA,CAA9B,KAAK,OAAO,MAAM,wBACtB,IAEb,iBAFa,cAEb,iCACAF,EAESC,EAAA6B,CAAA,EAAA,CAFA,QAAOqH,GAAW,QAAQ,QAAS,QAASnH,EAAY,kBAC/D,IAAiD,KAA9CG,EAAS,MAAA,iBAAA,YAAA,EAAA,CAAA,0CAQtBnC,EAGEqM,GAAA,CAFQ,KAAMnK,EAAiB,uCAAjBA,EAAiB,MAAA5B,GAC9B,iBAAiBkI,qBAITpG,EAAqB,OAAhC3C,IAAAC,EA+DM,MA/DN4M,GA+DM,CA7DJ1M,EAAmF,MAAA,CAA9E,MAAM,uCAAwC,QAAOqH,KAG1DrH,EAyDM,MAzDN2M,GAyDM,CAvDJ3M,EAKM,MALN4M,GAKM,CAJJzM,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAH,EAAqE,KAAjE,CAAA,MAAM,qCAAqC,EAAC,mBAAgB,EAAA,GAChEA,EAES,SAAA,CAFA,QAAOqH,GAAmB,MAAM,sCACvCjH,EAAwCC,EAAAC,CAAA,EAAA,CAA3B,KAAK,IAAI,MAAM,gBAKhCN,EAiCM,MAjCN6M,GAiCM,CAhCJ7M,EAEI,IAFJ8M,GAEI1L,EADCwB,EAAkB,KAAA,EAAA,CAAA,EAGvB5C,EAeM,MAfN+M,GAeM,CAdJ5M,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAH,EAEQ,QAFD,CAAA,MAAM,8CAA8C,EAAC,0BAE5D,EAAA,KACAA,EAOE,QAAA,SANI,iBAAJ,IAAI0C,yCACKD,EAAY,MAAA/B,GACrB,KAAK,OACL,YAAY,uBACZ,MAAM,+HACL,aAAe8G,GAAkB,CAAA,OAAA,CAAA,iBAJzB/E,EAAY,KAAA,IAMvBtC,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAH,EAEI,IAFD,CAAA,MAAM,4BAA4B,EAAC,4CAEtC,EAAA,KAGFA,EAUM,MAVNgN,GAUM,CATJ7M,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAAH,EAA+E,KAA3E,CAAA,MAAM,wCAAwC,EAAC,0BAAuB,EAAA,GAC1EA,EAIM,MAJNiN,GAIM,QAHJnN,EAEMiB,EAAA,KAAAC,GAFe2B,EAAkB,MAA3BkC,QAAZ/E,EAEM,MAAA,CAFoC,IAAK+E,EAAO,MAAM,UACvDA,CAAK,EAAA,CAAA,YAGZ7E,EAEM,MAFNkN,GAAkF,aACtEvK,EAAkB,MAAC,MAAM,EAAG,eACxC,CAAA,MAKJ3C,EAUM,MAVNmN,GAUM,CATJ/M,EAESC,EAAA6B,CAAA,EAAA,CAFA,QAAOmF,GAAmB,QAAQ,sBAAU,IAErDlH,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAA,GAFqD,UAErD,mBACAC,EAESC,EAAA6B,CAAA,EAAA,CAFA,QAAOoF,GAAiB,QAAQ,sBAAU,IAEnDnH,EAAA,EAAA,IAAAA,EAAA,EAAA,EAAA,GAFmD,2BAEnD,mBACAC,EAESC,EAAA6B,CAAA,EAAA,CAFA,QAAOsF,GAAoB,QAAQ,oBAC1C,IAA8C,KAA3C/E,EAAY,MAAA,aAAA,UAAA,EAAA,CAAA","x_google_ignoreList":[0,1,2,3,4,5,6]}