var f=(o,c,a)=>new Promise((m,p)=>{var i=s=>{try{t(a.next(s))}catch(e){p(e)}},g=s=>{try{t(a.throw(s))}catch(e){p(e)}},t=s=>s.done?m(s.value):Promise.resolve(s.value).then(i,g);t((a=a.apply(o,c)).next())});function x(m,p){return f(this,arguments,function*(o,c,a={}){c||(c={});let i=Object.assign({Accept:"application/json","Content-Type":"application/json; charset=utf-8","X-Frappe-Site-Name":window.location.hostname},a.headers||{});window.csrf_token&&window.csrf_token!=="{{ csrf_token }}"&&(i["X-Frappe-CSRF-Token"]=window.csrf_token);let g=o.startsWith("/")?o:`/api/method/${o}`;const t=yield fetch(g,{method:"POST",headers:i,body:JSON.stringify(c)});if(t.ok){const s=yield t.json();if(s.docs||o==="login")return s;if(s.exc)try{console.groupCollapsed(o),console.log(`method: ${o}`),console.log("params:",c);let e=JSON.parse(s.exc);for(let n of e)console.log(n);console.groupEnd()}catch(e){console.warn("Error printing debug messages",e)}return s.message}else{let s=yield t.text(),e,n;try{e=JSON.parse(s)}catch(l){}let _=[[o,e.exc_type,e._error_message].filter(Boolean).join(" ")];if(e.exc){n=e.exc;try{n=JSON.parse(n)[0],console.log(n)}catch(l){}}let r=new Error(_.join(`
`));throw r.exc_type=e.exc_type,r.exc=n,r.status=t.status,r.messages=e._server_messages?JSON.parse(e._server_messages):[],r.messages=r.messages.concat(e.message),r.messages=r.messages.map(l=>{try{return JSON.parse(l).message}catch(w){return l}}),r.messages=r.messages.filter(Boolean),r.messages.length||(r.messages=e._error_message?[e._error_message]:["Internal Server Error"]),a.onError&&a.onError({response:t,status:t.status,error:r}),r}})}export{x as c};
//# sourceMappingURL=call-DjkLykxt.js.map
